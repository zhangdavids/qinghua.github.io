<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒程序员改变世界</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qinghua.github.io/"/>
  <updated>2016-07-03T08:12:58.000Z</updated>
  <id>http://qinghua.github.io/</id>
  
  <author>
    <name>Qinghua Gao</name>
    <email>ggggqh666@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用OS X轻松上手.NET Core</title>
    <link href="http://qinghua.github.io/dot-net-core/"/>
    <id>http://qinghua.github.io/dot-net-core/</id>
    <published>2016-07-03T05:44:21.000Z</published>
    <updated>2016-07-03T08:12:58.000Z</updated>
    
    <content type="html">&lt;p&gt;微软前几天&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2016/06/27/announcing-net-core-1-0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正式发布&lt;/a&gt;了&lt;a href=&quot;https://dotnet.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;.NET Core&lt;/a&gt; 1.0。开源、跨平台、运行速度快的.NET Core很可能会成为Java强有力的竞争对手。它支持用ASP.NET开发web应用，但目前的问题是支持的第三方库太少了。本文尝试在Mac的OS X平台上开发.NET Core应用。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;请参考&lt;a href=&quot;http://www.linuxidc.com/Linux/2016-06/132764.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《.NET Core 1.0发布：微软开源跨平台大布局序幕》&lt;/a&gt;和&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/articles/core/index&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《.NET Core》&lt;/a&gt;。官方也提供了一个&lt;a href=&quot;https://hub.docker.com/r/microsoft/dotnet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker镜像&lt;/a&gt;以供快速试用。&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h2&gt;&lt;p&gt;根据微软的&lt;a href=&quot;https://www.microsoft.com/net/core#macos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting Started&lt;/a&gt;文档介绍，首先需要安装最新版OpenSSL：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install openssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew link --force openssl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下载.NET Core SDK，50M左右：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://go.microsoft.com/fwlink/?LinkID=&lt;span class=&quot;number&quot;&gt;809124&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完SDK后，可以很轻易地启动一个Hello World应用：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir hwapp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; hwapp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotnet new&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotnet restore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotnet run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中的&lt;code&gt;dotnet&lt;/code&gt;命令就是.NET Core SDK提供的。顺利的话，就能看到控制台打印出了&lt;code&gt;Hello World!&lt;/code&gt;。命令&lt;code&gt;dotnet new&lt;/code&gt;会生成两个文件：&lt;code&gt;Program.cs&lt;/code&gt;和&lt;code&gt;project.json&lt;/code&gt;。打开生成的Program.cs就能看到其实就是一个标准的&lt;code&gt;Main&lt;/code&gt;函数，内容为&lt;code&gt;Console.WriteLine(&amp;quot;Hello World!&amp;quot;);&lt;/code&gt;。文件&lt;code&gt;project.json&lt;/code&gt;内容如下所示，指定了依赖和框架：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1.0.0-*&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;buildOptions&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;debugType&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;portable&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;emitEntryPoint&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;dependencies&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;frameworks&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;netcoreapp1.0&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;dependencies&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;Microsoft.NETCore.App&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;platform&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;&lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;imports&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;dnxcore50&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;命令&lt;code&gt;dotnet restore&lt;/code&gt;会使用NuGet来导入&lt;code&gt;project.json&lt;/code&gt;里指定的包并生成一个文件：&lt;code&gt;project.lock.json&lt;/code&gt;。命令&lt;code&gt;dotnet run&lt;/code&gt;编译并运行这个项目。如果只想编译，用&lt;code&gt;dotnet build&lt;/code&gt;就可以了。现在把Hello World中的World改成&lt;code&gt;Qinghua&lt;/code&gt;，再试一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sed &lt;span class=&quot;string&quot;&gt;&#39;s/World/Qinghua/&#39;&lt;/span&gt; Program.cs &amp;gt; Program1.cs &amp;amp;&amp;amp; mv Program1.cs Program.cs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat Program.cs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotnet run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;果然就变成了&lt;code&gt;Hello Qinghua!&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;IDE&quot;&gt;&lt;a href=&quot;#IDE&quot; class=&quot;headerlink&quot; title=&quot;IDE&quot;&gt;&lt;/a&gt;IDE&lt;/h2&gt;&lt;p&gt;下载Visual Studio Code集成开发环境，也是50M左右，解压后100多M：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://az764295.vo.msecnd.net/stable/fe7f407b95b7f78405846188259504b34ef72761/VSCode-darwin-stable.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果下载页面发生变化，那就参考&lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code的主页&lt;/a&gt;下载。安装并打开Visual Studio Code之后，按下快捷键&lt;code&gt;⌘+P&lt;/code&gt;并输入以下命令来安装C#的扩展：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ext install csharp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;IDE会提示重新启动。接下来就可以试试C#开发了。按下快捷键&lt;code&gt;⌘+O&lt;/code&gt;并打开刚才生成的&lt;code&gt;Program.cs&lt;/code&gt;文件，然后把&lt;code&gt;Qinghua&lt;/code&gt;改为&lt;code&gt;世界&lt;/code&gt;。再次&lt;code&gt;dotnet run&lt;/code&gt;一下，就会看到&lt;code&gt;Hello 世界&lt;/code&gt;，汉字支持良好。&lt;/p&gt;
&lt;p&gt;整个IDE非常轻量，给人的印象比较简洁，不像Visual Studio那般花里胡哨。支持代码高亮、代码补全、错误提示、内置Git的支持，但是错误修复、重构等就没有了。甚至如何在里面运行代码也令人颇费一番周折。&lt;br&gt;&lt;img src=&quot;/img/vs-code-ide.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于调试代码，可以参考&lt;a href=&quot;https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instructions for setting up the .NET Core debugger&lt;/a&gt;。如果&lt;code&gt;⌘+O&lt;/code&gt;打开的是包含&lt;code&gt;project.json&lt;/code&gt;的文件夹，C#扩展便会自动生成两个文件：&lt;code&gt;.vscode/tasks.json&lt;/code&gt;和&lt;code&gt;.vscode/launch.json&lt;/code&gt;。前者告诉VS Code如何来构建项目，后者告诉VS Code如何来运行程序。我们需要修改一下&lt;code&gt;launch.json&lt;/code&gt;里，&lt;code&gt;name&lt;/code&gt;为&lt;code&gt;.NET Core Launch (console)&lt;/code&gt;的&lt;code&gt;program&lt;/code&gt;，将&lt;code&gt;&amp;lt;target-framework&amp;gt;/&amp;lt;project-name.dll&amp;gt;&lt;/code&gt;替换为&lt;code&gt;netcoreapp1.0/hwapp.dll&lt;/code&gt;，这样便能在VS Code的调试窗口运行程序了：&lt;br&gt;&lt;img src=&quot;/img/vs-code-debug.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Visual Studio Code支持众多插件。除了C#以外，还有Python、C/C++、Go、PowerShell、JavaScript、Ruby等语言，除此之外，还有不少功能性插件，如Git Blame、IIS Express、ftp-sync等。完整列表请参考&lt;a href=&quot;https://marketplace.visualstudio.com/vscode/Languages?sortBy=Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Marketplace&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;C_Sharp&quot;&gt;&lt;a href=&quot;#C_Sharp&quot; class=&quot;headerlink&quot; title=&quot;C Sharp&quot;&gt;&lt;/a&gt;C Sharp&lt;/h2&gt;&lt;p&gt;语法层面上，C#比起Java来最吸引我的点就是Linq+Lambda。虽然Java 8也提供了lambda表达式，但是始终在整洁性上差了那么一点。Java 8 Stream和C#在Linq上的语法区别可以参考&lt;a href=&quot;https://blog.informatech.cr/2013/03/24/java-streams-preview-vs-net-linq/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Java Streams Preview vs .Net High-Order Programming with LINQ》&lt;/a&gt;，里面有着非常丰富的例子。现在我们来改造一下&lt;code&gt;Program.cs&lt;/code&gt;，用Linq和Lambda输出10~90之间能被10整除的数字的平方：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System.Linq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ConsoleApplication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Program&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;[] args&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = Enumerable.Range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            arr.Where(i =&amp;gt; i % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Select(i =&amp;gt; i * i).ToList().ForEach(Console.WriteLine);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再次&lt;code&gt;dotnet run&lt;/code&gt;一下，就会看到程序按照我们的预期输出了结果。&lt;/p&gt;
&lt;h2 id=&quot;ASP-NET&quot;&gt;&lt;a href=&quot;#ASP-NET&quot; class=&quot;headerlink&quot; title=&quot;ASP.NET&quot;&gt;&lt;/a&gt;ASP.NET&lt;/h2&gt;&lt;p&gt;下面让我们来试一下用.NET Core运行ASP.NET的官方教程。首先像Hello World的例子那样，创建一个新的工程：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir aspnetcoreapp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; aspnetcoreapp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dotnet new&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后需要把&lt;code&gt;project.json&lt;/code&gt;里的&lt;code&gt;&amp;quot;dependencies&amp;quot;: {},&lt;/code&gt;替换成下文：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&quot;dependencies&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;Microsoft.NETCore.App&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;type&quot;: &quot;platform&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;version&quot;: &quot;1.0.0&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;Microsoft.AspNetCore.Server.Kestrel&quot;: &quot;1.0.0&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;依赖变化了，需要&lt;code&gt;restore&lt;/code&gt;一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dotnet restore&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后添加一个文件，处理http request：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Microsoft.AspNetCore.Builder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Microsoft.AspNetCore.Hosting;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Microsoft.AspNetCore.Http;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aspnetcoreapp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Startup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Configure&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;IApplicationBuilder app&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            app.Run(context =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; context.Response.WriteAsync(&lt;span class=&quot;string&quot;&gt;&quot;Hello from ASP.NET Core!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来修改&lt;code&gt;Program.cs&lt;/code&gt;文件来启动web服务：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Microsoft.AspNetCore.Hosting;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;aspnetcoreapp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Program&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;[] args&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; host = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebHostBuilder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .UseKestrel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .UseStartup&amp;lt;Startup&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .Build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            host.Run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在就可以运行啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dotnet run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;访问&lt;a href=&quot;http://localhost:5000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:5000/&lt;/a&gt;就可以看到在&lt;code&gt;Startup.cs&lt;/code&gt;里写的&lt;code&gt;Hello from ASP.NET Core!&lt;/code&gt;啦。确实上手比较容易。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;微软前几天&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2016/06/27/announcing-net-core-1-0/&quot;&gt;正式发布&lt;/a&gt;了&lt;a href=&quot;https://dotnet.github.io/&quot;&gt;.NET Core&lt;/a&gt; 1.0。开源、跨平台、运行速度快的.NET Core很可能会成为Java强有力的竞争对手。它支持用ASP.NET开发web应用，但目前的问题是支持的第三方库太少了。本文尝试在Mac的OS X平台上开发.NET Core应用。&lt;br&gt;
    
    </summary>
    
      <category term="development" scheme="http://qinghua.github.io/categories/development/"/>
    
    
      <category term=".NET" scheme="http://qinghua.github.io/tags/NET/"/>
    
      <category term=".NET Core" scheme="http://qinghua.github.io/tags/NET-Core/"/>
    
      <category term="ASP.NET" scheme="http://qinghua.github.io/tags/ASP-NET/"/>
    
      <category term="C#" scheme="http://qinghua.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>使用dubbox为dubbo提供REST服务</title>
    <link href="http://qinghua.github.io/dubbo-2/"/>
    <id>http://qinghua.github.io/dubbo-2/</id>
    <published>2016-06-05T13:33:02.000Z</published>
    <updated>2016-06-20T09:49:27.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。当当在dubbo的基础上开发了&lt;a href=&quot;https://github.com/dangdangdotcom/dubbox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dubbox&lt;/a&gt;（Dubbo eXtensions），&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/rest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支持REST风格远程调用&lt;/a&gt;。本文在&lt;a href=&quot;/dubbo-1&quot;&gt;服务治理框架dubbo上手指南&lt;/a&gt;的基础上使用dubbox提供的REST服务。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先参考&lt;a href=&quot;/dubbo-1&quot;&gt;服务治理框架dubbo上手指南&lt;/a&gt;，实现自己的dubbo服务。在此基础上，让我们来看看&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/rest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Dubbo中开发REST风格的远程调用&lt;/a&gt;。REST的优势就不多说了，本文关注的是快速搭建环境。&lt;/p&gt;
&lt;p&gt;光看dubbox的官方文档稍微有一点儿坑，因为它对于maven依赖的描述基本没有。Dubbo本身的维护已经不太活跃了，最新的版本是&lt;code&gt;2.5.4-SNAPSHOT&lt;/code&gt;。当当接下了维护的重任，目前的最新版是&lt;code&gt;dubbox-2.8.4&lt;/code&gt;，其实groupId和artifactId还是原来的不变，只是版本号有变化罢了。所以首先让我们来升级一下依赖，在&lt;code&gt;helloImpl&lt;/code&gt;的&lt;code&gt;pom.xml&lt;/code&gt;里升级dubbo：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;dubbo&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.8.4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;exclusions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-expression&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-beans&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-aop&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;exclusion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;exclusions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;mvn dependency:tree&lt;/code&gt;命令可以看到，dubbox依赖于spring的&lt;code&gt;3.2.9.RELEASE&lt;/code&gt;版本。由于我们上一个dubbo的练习中使用了spring的&lt;code&gt;4.2.4.RELEASE&lt;/code&gt;版本，所以会有依赖冲突。解决冲突的办法有两个，一是把我们的spring降级到dubbox依赖的&lt;code&gt;3.2.9.RELEASE&lt;/code&gt;版本，二是使用exclusions把dubbox依赖的几个spring包都解除掉。这里我们的配置采用了后者。除了dubbox本身，我们还需要以下的依赖：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;4.2.4.RELEASE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.101tec&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;zkclient&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;0.7&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再然后就是&lt;a href=&quot;https://github.com/dangdangdotcom/dubbox#user-content-rest风格远程调用&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dubbox自身的依赖&lt;/a&gt;，不管有用没用，先加进来再说：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-jaxrs&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-client&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;javax.validation&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;validation-api&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0.0.GA&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 如果要使用json序列化 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-jackson-provider&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 如果要使用xml序列化 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-jaxb-provider&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 如果要使用netty server --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-netty&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 如果要使用Sun HTTP server --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jboss.resteasy&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;resteasy-jdk-http&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.7.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 如果要使用tomcat server --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.tomcat.embed&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;tomcat-embed-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;8.0.11&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.tomcat.embed&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;tomcat-embed-logging-juli&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;8.0.11&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就把所有的依赖都解决了，现在可以修改dubbo的服务配置文件&lt;code&gt;provider.xml&lt;/code&gt;了：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;19880&quot; /&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:protocol&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;rest&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;server&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;tomcat&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;9090&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把原来的dubbo协议注释掉，增加rest协议，用内置的tomcat启动，端口为9090。这里为了清晰起见，注释掉了dubbo协议，而实际上协议是可以并存的。接下来可以改造我们的&lt;code&gt;HelloServiceImpl&lt;/code&gt;了。直接放上最后的代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.ggg.hello.service.provider;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.ws.rs.GET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.ws.rs.Path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.ws.rs.Produces;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.ws.rs.QueryParam;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.ggg.hello.service.HelloService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;demo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloServiceImpl&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@GET&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;greeting&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Produces&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;application/json; charset=UTF-8&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@QueryParam(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;)&lt;/span&gt; String name) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先我们在类上增加了一个注解&lt;code&gt;@Path(&amp;quot;demo&amp;quot;)&lt;/code&gt;，它指定访问HelloService的URL相对路径是/demo，即&lt;code&gt;http://localhost:9090/demo&lt;/code&gt;。方法上也有一个&lt;code&gt;@Path(&amp;quot;greeting&amp;quot;)&lt;/code&gt;，相当于访问这个方法的URL为&lt;code&gt;http://localhost:9090/demo/greeting&lt;/code&gt;。&lt;code&gt;@GET&lt;/code&gt;就不用多说了，&lt;code&gt;@Produces&lt;/code&gt;可以在Response Headers里增加&lt;code&gt;Content-Type: application/json;charset=UTF-8&lt;/code&gt;。如果有必要，也可以来一个相对应的&lt;code&gt;@Consumes(&amp;quot;application/json&amp;quot;)&lt;/code&gt;。在参数上还有一个注解&lt;code&gt;@QueryParam(&amp;quot;name&amp;quot;)&lt;/code&gt;，有了它就可以通过URL参数的方式传值过来了。启动&lt;code&gt;Provider&lt;/code&gt;之后，没有意外的话应该能看见控制台的日志：&lt;strong&gt;Starting ProtocolHandler [“http-nio-9090”]&lt;/strong&gt;，接下来就可以通过访问&lt;a href=&quot;http://localhost:9090/demo/greeting?name=ggg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:9090/demo/greeting?name=ggg&lt;/a&gt;来访问我们的服务了。屏幕上可以看到：&lt;strong&gt;Hello ggg&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;至此，我们以一个并不太RESTful的URL完成了一个REST请求。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。当当在dubbo的基础上开发了&lt;a href=&quot;https://github.com/dangdangdotcom/dubbox&quot;&gt;dubbox&lt;/a&gt;（Dubbo eXtensions），&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/rest.html&quot;&gt;支持REST风格远程调用&lt;/a&gt;。本文在&lt;a href=&quot;/dubbo-1&quot;&gt;服务治理框架dubbo上手指南&lt;/a&gt;的基础上使用dubbox提供的REST服务。&lt;br&gt;
    
    </summary>
    
      <category term="architecture" scheme="http://qinghua.github.io/categories/architecture/"/>
    
    
      <category term="dubbo" scheme="http://qinghua.github.io/tags/dubbo/"/>
    
      <category term="dubbox" scheme="http://qinghua.github.io/tags/dubbox/"/>
    
      <category term="rest" scheme="http://qinghua.github.io/tags/rest/"/>
    
      <category term="service governance" scheme="http://qinghua.github.io/tags/service-governance/"/>
    
  </entry>
  
  <entry>
    <title>服务治理框架dubbo上手指南</title>
    <link href="http://qinghua.github.io/dubbo-1/"/>
    <id>http://qinghua.github.io/dubbo-1/</id>
    <published>2016-05-28T13:52:20.000Z</published>
    <updated>2016-06-05T13:34:58.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。它的&lt;a href=&quot;http://dubbo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;也非常全面。本文将会大致介绍dubbo的思想，旨在快速上手自己搭建一套服务。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Dubbo是当服务数量很多的时候，用来解决服务治理的问题。服务治理包括服务编排、服务路由、服务发现等一系列功能。它的&lt;a href=&quot;http://dubbo.io/User+Guide-zh.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户指南&lt;/a&gt;里介绍得很清楚了，这里就不再赘述了。Dubbo支持多种协议来进行远程调用，但是并不支持REST方式。当当在dubbo的基础上开发了&lt;a href=&quot;https://github.com/dangdangdotcom/dubbox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dubbox&lt;/a&gt;（Dubbo eXtensions），&lt;a href=&quot;http://dangdangdotcom.github.io/dubbox/rest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支持REST风格远程调用&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文将会创建一个dubbo的服务提供者，注册到zookeeper服务注册中心，然后创建一个服务消费者，通过dubbo协议调用服务提供者的方法。&lt;a href=&quot;/dubbo-2&quot;&gt;下一篇文章&lt;/a&gt;将会介绍在dubbo里使用dubbox提供的REST服务。&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;首先请自行安装Java、Maven和喜欢的IDE。我用的是&lt;a href=&quot;https://www.jetbrains.com/idea/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Intellij IDEA社区版&lt;/a&gt;。Dubbo可以使用Zookeeper来作为服务的注册中心，所以可以自行安装Zookeeper。我这里用Vagrant启动了一台已经安装过Docker的Ubuntu虚拟机，它的IP是&lt;code&gt;192.168.33.88&lt;/code&gt;，可以用以下命令来直接启动Zookeeper容器来提供服务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run --name=zk &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; -p &lt;span class=&quot;number&quot;&gt;2181&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2181&lt;/span&gt; -p &lt;span class=&quot;number&quot;&gt;2888&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2888&lt;/span&gt; -p &lt;span class=&quot;number&quot;&gt;3888&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3888&lt;/span&gt; jplock/zookeeper:&lt;span class=&quot;number&quot;&gt;3.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来新建一个Maven工程helloService，再给它添加两个Module，分别为helloApi（接口和模型，被消费者所依赖）和helloImpl（实现，依赖helloApi）。GroupId随意设置便可，我填的是&lt;code&gt;org.ggg.dubbo&lt;/code&gt;。工程创建好了应该是这样的：&lt;br&gt;&lt;img src=&quot;/img/dubbo-new-project.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;HelloWorld&quot;&gt;&lt;a href=&quot;#HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;HelloWorld&quot;&gt;&lt;/a&gt;HelloWorld&lt;/h2&gt;&lt;h3 id=&quot;u670D_u52A1_u63D0_u4F9B_u8005&quot;&gt;&lt;a href=&quot;#u670D_u52A1_u63D0_u4F9B_u8005&quot; class=&quot;headerlink&quot; title=&quot;服务提供者&quot;&gt;&lt;/a&gt;服务提供者&lt;/h3&gt;&lt;p&gt;一切就绪，开搞。首先给helloApi添加一个服务提供者：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.ggg.hello.service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;很简单，只是提供了一个sayHello的接口。&lt;/p&gt;
&lt;h3 id=&quot;u5B9E_u73B0_u670D_u52A1&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u670D_u52A1&quot; class=&quot;headerlink&quot; title=&quot;实现服务&quot;&gt;&lt;/a&gt;实现服务&lt;/h3&gt;&lt;p&gt;接下来就要在helloImpl里实现这个服务了：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.ggg.hello.service.provider;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.ggg.hello.service.HelloService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloServiceImpl&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了编译通过，需要在helloImpl里添加对helloApi的依赖。&lt;/p&gt;
&lt;h3 id=&quot;u542F_u52A8_u670D_u52A1&quot;&gt;&lt;a href=&quot;#u542F_u52A8_u670D_u52A1&quot; class=&quot;headerlink&quot; title=&quot;启动服务&quot;&gt;&lt;/a&gt;启动服务&lt;/h3&gt;&lt;p&gt;为了启动我们的hello服务，我们需要依赖spring。先往helloImpl的resource里增加spring的配置文件provider.xml：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:dubbo&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://code.alibabatech.com/schema/dubbo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 提供方应用信息，用于计算依赖关系 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:application&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;hello-world-app&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 使用zookeeper注册中心暴露服务地址 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:registry&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;protocol&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;zookeeper&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;address&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;192.168.33.88:2181&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 用dubbo协议在19880端口暴露服务 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:protocol&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dubbo&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;port&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;19880&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 声明需要暴露的服务接口 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:service&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;interface&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;org.ggg.hello.service.HelloService&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;helloService&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 和本地bean一样实现服务 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;bean&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;helloService&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;org.ggg.hello.service.provider.HelloServiceImpl&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后往helloImpl里增加一个入口：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.ggg.hello.service.provider;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Provider&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ClassPathXmlApplicationContext context = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&lt;span class=&quot;string&quot;&gt;&quot;provider.xml&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.in.read();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时候需要增加spring和dubbo的依赖了。我用的是&lt;code&gt;org.springframework:spring-context:4.2.4.RELEASE&lt;/code&gt;和&lt;code&gt;com.alibaba:dubbo:2.5.3&lt;/code&gt;。安装完依赖，就可以直接运行Provider了。要是一切顺利，应该看不到错误信息了。在安装zookeeper的虚拟机上，用以下命令可以连接上zookeeper：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it zk bin/zkCli.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用以下命令应该能看到多了dubbo的路径：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls /dubbo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ls /dubbo/org.ggg.hello.service.HelloService&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这就证明我们的dubbo已经连接到zookeeper的服务注册中心了。&lt;/p&gt;
&lt;h3 id=&quot;u670D_u52A1_u6D88_u8D39_u8005&quot;&gt;&lt;a href=&quot;#u670D_u52A1_u6D88_u8D39_u8005&quot; class=&quot;headerlink&quot; title=&quot;服务消费者&quot;&gt;&lt;/a&gt;服务消费者&lt;/h3&gt;&lt;p&gt;服务提供方已经搞定，然后就该是服务的消费者了。按理来说消费者应该是另一个项目，这里为了简单起见，我们姑且认为消费者是一个测试。首先在helloImpl的test文件夹里增加一个resources目录，标记为Test Resources Root。往里新增一个文件consumer.xml：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:dubbo&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://code.alibabatech.com/schema/dubbo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:application&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;consumer-of-helloworld-app&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 使用zookeeper注册中心暴露发现服务地址 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:registry&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;protocol&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;zookeeper&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;address&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;192.168.33.88:2181&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 生成远程服务代理，可以和本地bean一样使用helloService --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:reference&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;helloService&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;interface&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;org.ggg.hello.service.HelloService&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后往test里新增一个类，权当是测试：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; org.ggg.hello.service.provider;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.ggg.hello.service.HelloService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.context.support.ClassPathXmlApplicationContext;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Consumer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ClassPathXmlApplicationContext context = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassPathXmlApplicationContext(&lt;span class=&quot;string&quot;&gt;&quot;consumer.xml&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HelloService helloService = (HelloService) context.getBean(&lt;span class=&quot;string&quot;&gt;&quot;helloService&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String hello = helloService.sayHello(&lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(hello);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样，helloImpl的项目结构应该是这样子的：&lt;br&gt;&lt;img src=&quot;/img/dubbo-helloImpl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u9A8C_u8BC1_u670D_u52A1&quot;&gt;&lt;a href=&quot;#u9A8C_u8BC1_u670D_u52A1&quot; class=&quot;headerlink&quot; title=&quot;验证服务&quot;&gt;&lt;/a&gt;验证服务&lt;/h3&gt;&lt;p&gt;运行这个Consumer类，应该就能看到&lt;code&gt;Hello world&lt;/code&gt;啦。如果在运行Consumer之前把Provider停了，就会看见这样的错误消息：&lt;code&gt;Failed to check the status of the service org.ggg.hello.service.HelloService&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;u76F4_u63A5_u8FDE_u63A5&quot;&gt;&lt;a href=&quot;#u76F4_u63A5_u8FDE_u63A5&quot; class=&quot;headerlink&quot; title=&quot;直接连接&quot;&gt;&lt;/a&gt;直接连接&lt;/h3&gt;&lt;p&gt;Dubbo支持不用服务注册中心，直接连接本地的服务。这样的话测试起来就非常方便了。在consumer.xml里这么配置：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xmlns:dubbo&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://code.alibabatech.com/schema/dubbo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd        http://code.alibabatech.com/schema/dubbo        http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:application&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;consumer-of-helloworld-app&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 生成远程服务代理，可以和本地bean一样使用helloService --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;dubbo:reference&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;helloService&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;interface&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;org.ggg.hello.service.HelloService&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;url&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;dubbo://localhost:19880&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;移除dubbo:registry，在dubbo:reference里增加本地的url即可。还是非常方便的吧，别忘记把服务先启动起来。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/dubbo&quot;&gt;Dubbo&lt;/a&gt;是阿里多年前开源的一套服务治理框架，在众多互联网企业里应用广泛。它的&lt;a href=&quot;http://dubbo.io/&quot;&gt;文档&lt;/a&gt;也非常全面。本文将会大致介绍dubbo的思想，旨在快速上手自己搭建一套服务。&lt;br&gt;
    
    </summary>
    
      <category term="architecture" scheme="http://qinghua.github.io/categories/architecture/"/>
    
    
      <category term="dubbo" scheme="http://qinghua.github.io/tags/dubbo/"/>
    
      <category term="service governance" scheme="http://qinghua.github.io/tags/service-governance/"/>
    
  </entry>
  
  <entry>
    <title>使用IntelliJ IDEA社区版调试tomcat</title>
    <link href="http://qinghua.github.io/intellij-idea-community-run-tomcat/"/>
    <id>http://qinghua.github.io/intellij-idea-community-run-tomcat/</id>
    <published>2016-05-18T12:12:00.000Z</published>
    <updated>2016-05-19T14:22:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://dzone.com/articles/why-idea-better-eclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IntelliJ IDEA在重构方面碾压eclipse&lt;/a&gt;。但是IDEA的免费社区版是&lt;a href=&quot;https://www.jetbrains.com/idea/features/editions_comparison_matrix.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不支持tomcat插件的&lt;/a&gt;。如果你正在用IDEA社区版开发一个web应用，可以使用下文的方式来调试运行在tomcat里的web应用。笔者目前使用的IDEA版本为2016.1.1。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;假设我们有一个项目，已经用IDEA打开了，并且这个项目可以构建成一个&lt;code&gt;ggg-webapp.war&lt;/code&gt;的包。在菜单&lt;code&gt;Run&lt;/code&gt;-&amp;gt;&lt;code&gt;Edit Configurations&lt;/code&gt;里，新增一个&lt;code&gt;Remote&lt;/code&gt;，填入下图所示的参数：&lt;br&gt;&lt;img src=&quot;/img/idea-debug-configurations.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name：叫啥都行，这里是tomcat-debug&lt;/li&gt;
&lt;li&gt;Host：准备运行tomcat的机器IP，可以是vagrant虚拟机&lt;/li&gt;
&lt;li&gt;Port：随便选一个端口就好，别跟其它端口冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tomcat的话可以用docker启动，比较方便。这里选用的是tomcat:7。复制&lt;code&gt;Command line arguments for running remote JVM&lt;/code&gt;里的值，用它代替下面的&lt;code&gt;JAVA_OPTS&lt;/code&gt;参数里的内容，然后运行tomcat并把war包复制到webapps目录里：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --net=host --name=tomcat &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; JAVA_OPTS=&lt;span class=&quot;string&quot;&gt;&#39;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=7007&#39;&lt;/span&gt; tomcat:&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker cp ggg-webapp.war tomcat:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/tomcat/webapps/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Tomcat启动完成后，选择菜单&lt;code&gt;Run&lt;/code&gt;-&amp;gt;&lt;code&gt;Debug &amp;#39;tomcat-debug&amp;#39;&lt;/code&gt;，就会显示&lt;code&gt;Connected to the target VM, address: &amp;#39;192.168.33.88:7007&amp;#39;, transport: &amp;#39;socket&amp;#39;&lt;/code&gt;，然后就可以顺利debug了。&lt;/p&gt;
&lt;h2 id=&quot;u5176_u5B83&quot;&gt;&lt;a href=&quot;#u5176_u5B83&quot; class=&quot;headerlink&quot; title=&quot;其它&quot;&gt;&lt;/a&gt;其它&lt;/h2&gt;&lt;p&gt;附送一些调试快捷键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;F7：Step into&lt;/li&gt;
&lt;li&gt;F8：Step over&lt;/li&gt;
&lt;li&gt;F9：Run&lt;/li&gt;
&lt;li&gt;Shift+F7：Smart step into（弹出对话框让你选择进入哪个方法）&lt;/li&gt;
&lt;li&gt;Shift+F8：Step out&lt;/li&gt;
&lt;li&gt;Ctrl+F8 / Command+F8：Toggle Breakpoint&lt;/li&gt;
&lt;li&gt;Alt+F8：Evaluate expression&lt;/li&gt;
&lt;li&gt;Alt+F9：Run To Cursor&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://dzone.com/articles/why-idea-better-eclipse&quot;&gt;IntelliJ IDEA在重构方面碾压eclipse&lt;/a&gt;。但是IDEA的免费社区版是&lt;a href=&quot;https://www.jetbrains.com/idea/features/editions_comparison_matrix.html&quot;&gt;不支持tomcat插件的&lt;/a&gt;。如果你正在用IDEA社区版开发一个web应用，可以使用下文的方式来调试运行在tomcat里的web应用。笔者目前使用的IDEA版本为2016.1.1。&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://qinghua.github.io/categories/tool/"/>
    
    
      <category term="IntelliJ IDEA" scheme="http://qinghua.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="tomcat" scheme="http://qinghua.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>轻松了解Kubernetes认证功能</title>
    <link href="http://qinghua.github.io/kubernetes-security/"/>
    <id>http://qinghua.github.io/kubernetes-security/</id>
    <published>2016-04-29T11:31:01.000Z</published>
    <updated>2016-04-29T14:04:17.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文介绍kubernetes的安全性配置。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;首先需要搭建kubernetes集群环境，可以参考&lt;a href=&quot;/kubernetes-installation&quot;&gt;《轻松搭建Kubernetes 1.2版运行环境》&lt;/a&gt;来安装自己的kubernetes集群，运行到flannel配置完成即可。接下来的api server等设置的参数可以参考本文。&lt;/p&gt;
&lt;p&gt;结果应该是有三台虚拟机，一台叫做&lt;strong&gt;master&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;，运行着k8s的api server、controller manager和scheduler；另两台叫做&lt;strong&gt;node1&lt;/strong&gt;和&lt;strong&gt;node2&lt;/strong&gt;，它们的IP分别是&lt;strong&gt;192.168.33.18&lt;/strong&gt;和&lt;strong&gt;192.168.33.19&lt;/strong&gt;，运行着k8s的kubelet和kube-proxy，当做k8s的两个节点。&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72&quot;&gt;&lt;a href=&quot;#u90E8_u7F72&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h2&gt;&lt;p&gt;最简单的方式就是通过基于CSV的基本认证。首先需要创建api server的基本认证文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir security&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;,admin,qinghua &amp;gt; security/basic_auth.csv                      &lt;span class=&quot;comment&quot;&gt;# 格式：用户名,密码,用户ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以生成CA和api server的证书了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; security&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out ca.key &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl req -x509 -new -nodes -key ca.key -subj &lt;span class=&quot;string&quot;&gt;&quot;/CN=192.168.33.17&quot;&lt;/span&gt; -days &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; -out ca.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out server.key &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl req -new -key server.key -subj &lt;span class=&quot;string&quot;&gt;&quot;/CN=192.168.33.17&quot;&lt;/span&gt; -out server.csr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的命令会生成若干证书相关文件，作用如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ca.key：自己生成的CA的私钥，用于模拟一个CA&lt;/li&gt;
&lt;li&gt;ca.crt：用自己的私钥自签名的CA证书&lt;/li&gt;
&lt;li&gt;server.key：api server的私钥，用于配置api server的https&lt;/li&gt;
&lt;li&gt;server.csr：api server的证书请求文件，用于请求api server的证书&lt;/li&gt;
&lt;li&gt;server.crt：用自己模拟的CA签发的api server的证书，用于配置api server的https&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来启动api server，参数的作用可以参考&lt;a href=&quot;http://kubernetes.io/docs/admin/kube-apiserver/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube-apiserver官方文档&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /home/vagrant/security:/security \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-apiserver:e68c6af15d4672feef7022e94ee4d9af \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --advertise-address=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --admission-control=ServiceAccount \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --insecure-bind-address=&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --etcd-servers=http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --service-cluster-ip-range=&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --tls-cert-file=/security/server.crt \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --tls-private-key-file=/security/server.key \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --secure-port=&lt;span class=&quot;number&quot;&gt;443&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --basic-auth-file=/security/basic_auth.csv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还需要启动controller manager，参数的作用可以参考&lt;a href=&quot;http://kubernetes.io/docs/admin/kube-controller-manager/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube-controller-manager官方文档&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=cm \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /home/vagrant/security:/security \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-controller-manager:b9107c794e0564bf11719dc554213f7b \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-controller-manager \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --cluster-cidr=&lt;span class=&quot;number&quot;&gt;10.245&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --allocate-node-cidrs=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --root-ca-file=/security/ca.crt \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --service-account-private-key-file=/security/server.key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后是scheduler，参数的作用可以参考&lt;a href=&quot;http://kubernetes.io/docs/admin/kube-scheduler/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube-scheduler官方文档&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=scheduler \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-scheduler:&lt;span class=&quot;number&quot;&gt;903&lt;/span&gt;b34d5ed7367ec4dddf846675613c9 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-scheduler \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以运行以下命令来确认安全配置已经生效：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -k -u admin:&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt; https://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -k -u admin:&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt; https://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;/api/v1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后启动kubelet和kube-proxy，参数的作用可以参考&lt;a href=&quot;http://kubernetes.io/docs/admin/kubelet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kubelet官方文档&lt;/a&gt;和&lt;a href=&quot;http://kubernetes.io/docs/admin/kube-proxy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kube-proxy官方文档&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NODE_IP=`ifconfig eth1 | grep &lt;span class=&quot;string&quot;&gt;&#39;inet addr:&#39;&lt;/span&gt; | cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;: &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;2 | cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;1`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo kubernetes/server/bin/kubelet \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --api-servers=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --cluster-dns=&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.10&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --cluster-domain=cluster.local \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --hostname-override=&lt;span class=&quot;variable&quot;&gt;$NODE_IP&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --node-ip=&lt;span class=&quot;variable&quot;&gt;$NODE_IP&lt;/span&gt; &amp;gt; kubelet.log &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo kubernetes/server/bin/kube-proxy \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --hostname-override=&lt;span class=&quot;variable&quot;&gt;$NODE_IP&lt;/span&gt; &amp;gt; proxy.log &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9A8C_u8BC1&quot;&gt;&lt;a href=&quot;#u9A8C_u8BC1&quot; class=&quot;headerlink&quot; title=&quot;验证&quot;&gt;&lt;/a&gt;验证&lt;/h2&gt;&lt;p&gt;如果需要通过https访问，kubectl的命令就略微有点儿麻烦了，需要用&lt;code&gt;basic_auth.csv&lt;/code&gt;里配置的&lt;code&gt;admin/123456&lt;/code&gt;来登录：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; --insecure-skip-tls-verify=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; --username=admin --password=&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt; get po&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为8080端口还开着，所以也可以通过http访问：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get po&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置完成后，可以看到系统里有TYPE为&lt;code&gt;kubernetes.io/service-account-token&lt;/code&gt;的秘密：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get secret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面有三条数据，分别是&lt;code&gt;ca.crt&lt;/code&gt;，&lt;code&gt;namespace&lt;/code&gt;和&lt;code&gt;token&lt;/code&gt;，可以通过以下命令看到：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; describe secret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果你通过kubernetes启动了一个pod，就可以在容器的&lt;code&gt;/var/run/secrets/kubernetes.io/serviceaccount/&lt;/code&gt;目录里看到以三个文件的形式看到这三条数据（这是&lt;code&gt;--admission-control=ServiceAccount&lt;/code&gt;的功劳），当pod需要访问系统服务的时候，就可以使用它们了。可以使用以下命令看到系统的服务账号：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get serviceAccount&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u5316kubectl&quot;&gt;&lt;a href=&quot;#u7B80_u5316kubectl&quot; class=&quot;headerlink&quot; title=&quot;简化kubectl&quot;&gt;&lt;/a&gt;简化kubectl&lt;/h2&gt;&lt;p&gt;如果我们通过设置&lt;code&gt;--insecure-port=0&lt;/code&gt;把api server的http端口关闭，那它就只能通过https访问了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker rm &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; apiserver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /home/vagrant/security:/security \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-apiserver:e68c6af15d4672feef7022e94ee4d9af \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --advertise-address=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --admission-control=ServiceAccount \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --insecure-bind-address=&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --etcd-servers=http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --service-cluster-ip-range=&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --tls-cert-file=/security/server.crt \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --tls-private-key-file=/security/server.key \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --secure-port=&lt;span class=&quot;number&quot;&gt;443&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --basic-auth-file=/security/basic_auth.csv \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --insecure-port=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样的话，就连取个pod都得这么麻烦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; --insecure-skip-tls-verify=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; --username=admin --password=&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt; get po&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;幸运的是，kubernetes提供了一种方式，让我们可以大大简化命令，只用这样就好了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl get po&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面就让我们来试一下吧！首先用&lt;code&gt;kubectl config&lt;/code&gt;命令来配置admin用户：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-credentials admin --username=admin --password=&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后是api server的访问方式，给集群起个名字叫qinghua：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-cluster qinghua --insecure-skip-tls-verify=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; --server=https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来创建一个context，它连接用户admin和集群qinghua：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-context default/qinghua --user=admin --namespace=default --cluster=qinghua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后设置一下默认的context：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl config use-context default/qinghua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以用我们的简化版啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl get po&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以通过以下命令来看到当前kubectl的配置：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/kubernetes/server/bin/kubectl config view&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;能够看到如下内容：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clusters:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- cluster:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    insecure-skip-tls-verify: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server: https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contexts:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- context:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cluster: qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    namespace: default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: default/qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;current-context: default/qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;preferences: &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;users:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- name: admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    password: &lt;span class=&quot;string&quot;&gt;&quot;123456&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    username: admin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;实际上这些配置都存放在&lt;code&gt;~/.kube/config&lt;/code&gt;文件里：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat ~/.kube/config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改这个文件也可以实时生效。细心的童鞋们可以看到，cluster、context和users都是集合，也就是说如果需要切换用户和集群等，只需要设置默认context就可以了，非常方便。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文介绍kubernetes的安全性配置。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="docker" scheme="http://qinghua.github.io/tags/docker/"/>
    
      <category term="kubernetes" scheme="http://qinghua.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>轻松了解Kubernetes部署功能</title>
    <link href="http://qinghua.github.io/kubernetes-deployment/"/>
    <id>http://qinghua.github.io/kubernetes-deployment/</id>
    <published>2016-04-24T06:13:20.000Z</published>
    <updated>2016-04-28T07:27:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文介绍kubernetes的基本部署功能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;首先需要搭建kubernetes集群环境，可以参考&lt;a href=&quot;/kubernetes-installation&quot;&gt;《轻松搭建Kubernetes 1.2版运行环境》&lt;/a&gt;来安装自己的kubernetes集群。&lt;/p&gt;
&lt;p&gt;结果应该是有三台虚拟机，一台叫做&lt;strong&gt;master&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;，运行着k8s的api server、controller manager和scheduler；另两台叫做&lt;strong&gt;node1&lt;/strong&gt;和&lt;strong&gt;node2&lt;/strong&gt;，它们的IP分别是&lt;strong&gt;192.168.33.18&lt;/strong&gt;和&lt;strong&gt;192.168.33.19&lt;/strong&gt;，运行着k8s的kubelet和kube-proxy，当做k8s的两个节点。&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72_uFF08deployment_uFF09&quot;&gt;&lt;a href=&quot;#u90E8_u7F72_uFF08deployment_uFF09&quot; class=&quot;headerlink&quot; title=&quot;部署（deployment）&quot;&gt;&lt;/a&gt;部署（deployment）&lt;/h2&gt;&lt;p&gt;启动一个容器最简单的方法应该就是使用以下命令了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; run my-nginx --image=nginx:&lt;span class=&quot;number&quot;&gt;1.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果一切工作正常，应该能看到一条消息&lt;strong&gt;deployment “my-nginx” created&lt;/strong&gt;。&lt;a href=&quot;http://kubernetes.io/docs/user-guide/deployments/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;是kubernetes 1.2的一个新引入的概念，它包含着对&lt;a href=&quot;http://kubernetes.io/docs/user-guide/pods/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pod&lt;/a&gt;和将要代替&lt;a href=&quot;http://kubernetes.io/docs/user-guide/replication-controller/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Replication Controller&lt;/a&gt;的&lt;a href=&quot;http://kubernetes.io/docs/user-guide/replicasets/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Replica Set&lt;/a&gt;的描述。&lt;/p&gt;
&lt;p&gt;为了简化命令，我们设置一个别名：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; kubectl=&lt;span class=&quot;string&quot;&gt;&quot;kubernetes/server/bin/kubectl -s 192.168.33.17:8080&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用以下命令可以看到目前集群里的信息：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl get po                          &lt;span class=&quot;comment&quot;&gt;# 查看目前所有的pod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl get rs                          &lt;span class=&quot;comment&quot;&gt;# 查看目前所有的replica set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl get deployment                  &lt;span class=&quot;comment&quot;&gt;# 查看目前所有的deployment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl describe po my-nginx            &lt;span class=&quot;comment&quot;&gt;# 查看my-nginx pod的详细状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl describe rs my-nginx            &lt;span class=&quot;comment&quot;&gt;# 查看my-nginx replica set的详细状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl describe deployment my-nginx    &lt;span class=&quot;comment&quot;&gt;# 查看my-nginx deployment的详细状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;kubectl describe po my-nginx&lt;/code&gt;可以查看到这个pod被分配到哪台node上去。当&lt;code&gt;kubectl get po&lt;/code&gt;显示&lt;strong&gt;1/1 Running&lt;/strong&gt;时，说明容器已经启动完成了。SSH到那台虚拟机上，&lt;code&gt;docker ps&lt;/code&gt;一下，能够看到有两个容器启动完成了，一个是nginx，另一个就是负责网络的pause。使用&lt;code&gt;docker rm -f&lt;/code&gt;将nginx容器删除，再用&lt;code&gt;kubectl get po&lt;/code&gt;查看，一会儿便会显示&lt;strong&gt;0/1 ContainerCreating&lt;/strong&gt;，随即又变成&lt;strong&gt;1/1 Running&lt;/strong&gt;，这是replica set的功劳。当它检测到容器挂掉的时候，便会重新启动一个容器来保证服务不中断。不仅是容器挂掉，停止虚拟机也能使容器被再分配到另一台node上，有兴趣的朋友可以自行尝试，虚拟机重启回来后记得再次运行flannel和kubelet哦。&lt;/p&gt;
&lt;p&gt;使用以下命令可以删除my-nginx deployment，my-nginx replica set和my-nginx pod（抵消第一条run命令的作用）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl delete deployment my-nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;kubectl get&lt;/code&gt;命令来查看删除后的结果。一般我们会把部署信息写在一个yaml格式的文件里，这样比较容易查看，并且方便写入各种参数：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;nginx.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: extensions/v1beta1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: nginx-deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  replicas: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  template:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - name: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        image: nginx:&lt;span class=&quot;number&quot;&gt;1.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - containerPort: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resources:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          requests:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cpu: &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl create &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; nginx.yaml --record&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Deployment文件的详细说明可以看&lt;a href=&quot;http://kubernetes.io/docs/api-reference/extensions/v1beta1/definitions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Extensions API定义&lt;/a&gt;，通用参数的详细信息可以看&lt;a href=&quot;http://kubernetes.io/docs/api-reference/v1/definitions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes API定义&lt;/a&gt;。由于这次的replicas设置为2，kubernetes会帮我们启动并维持两个实例。如果我们想要更新部署的yaml，有两种方法。第一种是使用edit直接修改：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl edit deployment/nginx-deployment&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;nginx:1.7.9&lt;/code&gt;修改为&lt;code&gt;nginx:1.9.11&lt;/code&gt;，保存退出。Kubernetes就会自动帮我们升级镜像。通过&lt;code&gt;kubectl get deployment nginx&lt;/code&gt;的Events里可以看到升级的事件。不管是哪一种方法，升级的过程都是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动一个新容器&lt;/li&gt;
&lt;li&gt;停止两个旧容器&lt;/li&gt;
&lt;li&gt;启动一个新容器&lt;br&gt;启动一个新的容器，然后停止一个旧的，重复这个过程直到旧的容器全部停止为止。这样可以保证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二种是修改yaml文件，然后apply：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/nginx:1.7.9/nginx:1.91/g&quot;&lt;/span&gt; nginx.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl apply &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; nginx.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;细心的你可能已经发现我在上面的命令里把&lt;code&gt;nginx:1.9.1&lt;/code&gt;打成&lt;code&gt;nginx:1.91&lt;/code&gt;了。如果此时用&lt;code&gt;kubectl describe po nginx&lt;/code&gt;命令，就能看到&lt;strong&gt;Error syncing pod, skipping: failed to “StartContainer” for “nginx” with ErrImagePull: “Tag 1.91 not found in repository docker.io/library/nginx”&lt;/strong&gt;的错误。现在我需要停止这次升级。我们可以用这条命令来查看升级历史：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl rollout &lt;span class=&quot;built_in&quot;&gt;history&lt;/span&gt; deployment/nginx-deployment&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;kubectl create&lt;/code&gt;的时候用了&lt;code&gt;--record&lt;/code&gt;的标志，我们能够直接看到命令，方便定位到上一次正确的升级&lt;strong&gt;2 kubectl -s 192.168.33.17:8080 edit deployment/nginx-deployment&lt;/strong&gt;，查看详细的deployment内容：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl rollout &lt;span class=&quot;built_in&quot;&gt;history&lt;/span&gt; deployment/nginx-deployment --revision=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有两种方法可以回退到这个版本：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl rollout undo deployment/nginx-deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl rollout undo deployment/nginx-deployment --to-revision=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u670D_u52A1&quot;&gt;&lt;a href=&quot;#u670D_u52A1&quot; class=&quot;headerlink&quot; title=&quot;服务&quot;&gt;&lt;/a&gt;服务&lt;/h2&gt;&lt;p&gt;前面创建了nginx的部署对象，那么别人如何使用nginx这个服务呢？首先要确定的是，这个nginx服务，是给内部使用的，还是外部。如果是内部使用，那就可以不用设置服务的类型（默认为ClusterIP），否则，可以将服务类型设置为NodePort，通过node的端口暴露出来给外部使用；或者是LoadBalancer，由云服务商提供一个负载均衡直接挂在服务上。这里我们使用NodePort，暴露出30088端口给外部使用。如果不指定nodePort，那么kubernetes会随机生成一个。下面让我们来启动服务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;nginx-svc.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: NodePort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  selector:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - port: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    targetPort: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodePort: &lt;span class=&quot;number&quot;&gt;30088&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl create &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; nginx-svc.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样便可以通过&lt;a href=&quot;http://192.168.33.18:30088&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:30088&lt;/a&gt;或&lt;a href=&quot;http://192.168.33.19:30088&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.19:30088&lt;/a&gt;访问nginx服务了：&lt;br&gt;&lt;img src=&quot;/img/nginx.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以使用以下命令来删除服务及nginx的部署：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl delete &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; nginx-svc.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl delete &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; nginx.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4E00_u6B21_u6027_u4EFB_u52A1_uFF08job_uFF09&quot;&gt;&lt;a href=&quot;#u4E00_u6B21_u6027_u4EFB_u52A1_uFF08job_uFF09&quot; class=&quot;headerlink&quot; title=&quot;一次性任务（job）&quot;&gt;&lt;/a&gt;一次性任务（job）&lt;/h2&gt;&lt;p&gt;Kubernetes 1.1版时将&lt;a href=&quot;http://kubernetes.io/docs/user-guide/jobs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Job&lt;/a&gt;还是Beta版，1.2之后已经可用于生产环境。Job是包含着若干pod的一次性任务。它与Replication Controller和Replica Set最大的区别就是当容器正常停止后，不会再次重启以维持一定数量的pod提供服务。下面我们用busybox运行一个耗时30s的任务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;busybox.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: batch/v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Job&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  template:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      name: busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - name: busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        image: busybox:&lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          - sleep&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          - &lt;span class=&quot;string&quot;&gt;&quot;30&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      restartPolicy: Never&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl create &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; busybox.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以使用以下命令来取得目前的job：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl get &lt;span class=&quot;built_in&quot;&gt;jobs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，30s之后，SUCCESSFUL从0变为1了，说明这个job已经顺利完成了。可以使用以下命令来查看所有的pod，包含在busybox的job里正常结束的pod：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl get pods --show-all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Job完成之后仍然会在那里。如果需要删除，运行以下两条命令之一：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl delete job busybox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl delete &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; busybox.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;相关的pod也会一并被删除。不过容器仍然会留在运行过这个pod的node上。这可以通过设置kubelet的&lt;code&gt;--maximum-dead-containers&lt;/code&gt;和&lt;code&gt;--maximum-dead-containers-per-container&lt;/code&gt;参数来解决。&lt;/p&gt;
&lt;h2 id=&quot;Daemon_Sets&quot;&gt;&lt;a href=&quot;#Daemon_Sets&quot; class=&quot;headerlink&quot; title=&quot;Daemon Sets&quot;&gt;&lt;/a&gt;Daemon Sets&lt;/h2&gt;&lt;p&gt;有时候需要每个node上都运行一个pod，比如监控或是日志收集等。这时候使用Daemon Sets就非常方便。我们用一个tomcat容器来做例子：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;tomcat.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: extensions/v1beta1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: DaemonSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: tomcat-ds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  template:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        image: tomcat:&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;-jre8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - containerPort: &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl create &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; tomcat.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行完毕后，通过以下命令来取得运行结果：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubectl get ds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl get pods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个yaml文件和一开始的deployment的yaml文件格式很像，虽然我们没有指定replicas，但还是起了两个pod（因为我们有两个node）。可以ssh到这两个node上看看是不是每一个node上都启动了一个tomcat容器。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文介绍kubernetes的基本部署功能。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="docker" scheme="http://qinghua.github.io/tags/docker/"/>
    
      <category term="kubernetes" scheme="http://qinghua.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>VR和其他科技的结合意味着什么</title>
    <link href="http://qinghua.github.io/vr-mix-with-other-techs/"/>
    <id>http://qinghua.github.io/vr-mix-with-other-techs/</id>
    <published>2016-04-23T13:23:22.000Z</published>
    <updated>2016-04-24T05:30:41.000Z</updated>
    
    <content type="html">&lt;p&gt;随着VR走进现实，人们的双眼纷纷看到了它在影视、游戏等产业的巨大钱景。借用熊节在&lt;a href=&quot;http://gigix.thoughtworkers.org/2015/8/28/driverless-cars/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《无人驾驶汽车意味着什么》&lt;/a&gt;里的一句话：“然而技术的成熟与投入实用远不是变革的终点，恰恰相反，这只是一场更为深远的变革的起点”。我脑洞大开，畅想一下VR和其他科技结合之后，将会如何影响我们的生活。看上去下一个十年又要迎来一次技术大爆炸。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u65E0_u4EBA_u673A&quot;&gt;&lt;a href=&quot;#u65E0_u4EBA_u673A&quot; class=&quot;headerlink&quot; title=&quot;无人机&quot;&gt;&lt;/a&gt;无人机&lt;/h2&gt;&lt;p&gt;曾几何时，拍照、摄像还是摄影师的专利，随着数码相机的普及尤其是手机摄像头的发展，到了现在的自媒体时代，人人都喜欢拍一点什么。数量上去了，大家就开始想到提高质量。无人机给了我们这样一个上帝视角，在某种程度上圆了人类的飞行梦。现在的技术可以做到实时在手机上查看无人机正在拍摄的高清视频。VR结合无人机，会产生什么样的效果呢？看看这幅图：&lt;br&gt;&lt;img src=&quot;/img/vr-skydiving.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;跳伞的话，只能下不能上，横向移动范围有限。VR结合无人机，能够带来更高一筹的高空体验，并且大大降低了安全事故发生的概率。当然无人机坏掉砸在路人脑袋上这种事就不在我们讨论范围内了…&lt;/p&gt;
&lt;h2 id=&quot;u673A_u5668_u4EBA&quot;&gt;&lt;a href=&quot;#u673A_u5668_u4EBA&quot; class=&quot;headerlink&quot; title=&quot;机器人&quot;&gt;&lt;/a&gt;机器人&lt;/h2&gt;&lt;p&gt;VR结合无人机，无论多么狂拽炫酷吊炸天，仍然是小众玩家的福利。而真正能够影响普通人的，应该算是和机器人结合。想像这样的世界：虽然分身乏术，但是你可以购买一个机器人，让它帮你去远方开会，到时候VR直接连接上这个机器人就好啦。这种方案的话，需要成熟的无人驾驶技术的配合，才能让机器人自动到达目的地。&lt;br&gt;&lt;img src=&quot;/img/vr-robot.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;继续往里思考，为什么非要买一个机器人跑到远方去呢？是不是可以直接租赁一个远方的机器人呢？假设有一个提供机器人租赁的公司，直接在开会地点附近有一个机器人租赁点，与会人员就没必要派遣机器人过去了，直接每个人租一个机器人开会就好啦。&lt;/p&gt;
&lt;h2 id=&quot;3D_u6253_u5370&quot;&gt;&lt;a href=&quot;#3D_u6253_u5370&quot; class=&quot;headerlink&quot; title=&quot;3D打印&quot;&gt;&lt;/a&gt;3D打印&lt;/h2&gt;&lt;p&gt;虽然VR结合机器人听起来令人心动，但是有一个问题就是，大家都是机器人了，那我在VR里看出去都是一堆的机器人有什么用？根本不知道谁是谁，干脆直接电话会议或者视频会议不就好了嘛，反正表情动作眼神都很难感觉出来。这时候3D打印就派上用场了。假设到时候的3D打印技术非常成熟，你在家里就能很轻易地将你现在的模型传送给机器人租赁公司，而公司可以在较短的时间内打印一个像你一样的机器人，于是你在别人的眼里并不是一个机器人，而是真正的“你”。每个人都是自己的样子，开会就像是在现场一样。到时候的材料工艺也应该有很大进步，可以实现材料回收再利用，这样可以大大降低租用机器人的成本。&lt;br&gt;&lt;img src=&quot;/img/vr-humanoid.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;想象一下在一个会议里，里面所有的“人”都只是躯壳，而真实的人都在其它地方，是不是有点儿感觉怪怪的了？&lt;/p&gt;
&lt;h2 id=&quot;u4EBA_u5DE5_u667A_u80FD&quot;&gt;&lt;a href=&quot;#u4EBA_u5DE5_u667A_u80FD&quot; class=&quot;headerlink&quot; title=&quot;人工智能&quot;&gt;&lt;/a&gt;人工智能&lt;/h2&gt;&lt;p&gt;VR结合3D打印，开始带来一丝怪异的感觉了。再加上人工智能的混入，就已经不是“怪异”两个字就能形容的了。想象你面对一个“人”，音容笑貌都是某个你熟悉的人，但“ta”可能并不是你熟悉的“ta”…“ta”可能是个具有人工智能的机器人！在良性的环境下，“ta”只可能是真人戴着VR在跟你交流，或者由于真人在忙其它事情，“ta”现在是个尽力在模仿真人的善意人工智能；在恶性的环境下，“它”可能被其他人所控制，要对你做出一些诈骗等恶意行为；最恶劣的是“ta”可能发展了自己的意识，你根本不知道“ta”在想什么，“ta”想干什么。这里引用霍金的预言：“成功制造出一台人工智能机器人将是人类历史上的里程碑。但不幸的是，它也可能会成为我们历史上最后的一个里程碑”。黑客帝国里的场景，也有可能变成现实。&lt;/p&gt;
&lt;h2 id=&quot;u5176_u4ED6_u7545_u60F3&quot;&gt;&lt;a href=&quot;#u5176_u4ED6_u7545_u60F3&quot; class=&quot;headerlink&quot; title=&quot;其他畅想&quot;&gt;&lt;/a&gt;其他畅想&lt;/h2&gt;&lt;p&gt;在上文的模型里，可以预见的是，信息安全将会是未来的重中之重。传输自己的模型给机器人公司，需要小心传错对象或被黑客拦截；VR连接远程机器人，需要小心机器人可能被其他人捷足先登；对人工智能，也许也需要必要的防范。虽然有许多安全上的顾虑，但也正是这些技术，可以让我们更加安全。矿工附身在机器人上，用自己的娴熟技巧采矿；消防员附身在机器人上，可以身冲火海而不会收到任何损伤；对于户外极限运动爱好者来说，这真的是加了无数条命呀。话说回来，如果要实现这样的效果，光自动驾驶是远远不够的。可能还需要如下的几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高带宽+低延迟的移动网络：没有高带宽的支持，收到的VR场景数据可能分辨率或刷新率低，降低沉浸式体验。没有低延迟的支持，机器人反应慢就不那么适合争分夺秒型任务。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移动：现在大多数的VR都不支持移动。即使像HTC Vive那样，由于受到空间制约，也只是有限支持。如果要实用化，下图的平面移动能够满足一定的需求，不过还需考虑包含上下的三维空间。&lt;br&gt;&lt;img src=&quot;/img/vr-move.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;材料和传感器：为了完美体验触感，也许还需要能够快速打印出具有一定质量、密度、硬度的物质，需要极高的材料工艺，并且需要机器人身上安装高精度传感器实时传回需要的材料数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;环境：微风轻抚和狂风暴雨是完全不一样的感受。还要考虑温度、湿度等感觉。&lt;/li&gt;
&lt;li&gt;嗅觉支持：虽然人类的鼻子没有狗鼻子那么灵敏，但是现实生活中，有时候气味是决定下一步行动的原因。比如闻到了焦糊味就去厨房看看。相比起来，对于味觉的支持就可以缓一缓了。&lt;/li&gt;
&lt;li&gt;梦境或意识：除了上面的移动、材料和传感器的硬派支持，还有一种方式是以类似催眠、梦境或者存意识的方式来支持这种感觉的传递。阿凡达！！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于有了机器人替身，战争的形式也应该会发生变化。士兵们不需要搏命了，也许打战变成了一场游戏。开战前拔掉对方的VR中心可能变成了一种战略选择。毕竟如果存在由人控制的机器人对人类的战争，那结果应该像是现代兵器对战冷兵器时代，是一边倒的。希望不要有战争。即使有战争也别培育出作战型人工智能。&lt;/p&gt;
&lt;p&gt;再想点儿其他贴近生活的方面，可能人们就不太需要出行了。现在的上班族大多经历过天天挤公交地铁或者开车堵在路上的罪。以后不需要了。公司摆一个你的机器人躯壳，家里来副VR眼镜，一切搞定。还有什么场景需要出行？旅游？现在的VR都已经快要解决这个问题了，各大VR视频资源库里已经有不少全景漫游的视频了。风景变化不大，甚至不需要机器人的代劳，直接数字化就好了。什么九寨沟一年四季各有各的看点？巴尔夏明神庙被炸毁？华南虎灭绝了？统统都能看到。购物也是同理，送货上门应该算是未来商店最基本的服务之一了。探亲？这个确实有些不好回答，也许有些家庭无所谓真的假的，有些家庭会更倾向于真人探亲。对了，吃饭和看病机器人就没法代劳了吧？何不反过来想想这个问题，虽然机器人不能代替你去饭店吃饭，但是大厨可以附身在你家的机器人上，给你做出美味佳肴！没有趁手的工具？3D打印！看病也是同理，就是可能会由于医疗器械比较昂贵或者各种许可证、专利问题，也许最终还是得你亲自跑一趟。上厕所？想必你每天上厕所不至于跑个几公里吧…不管怎样，VR和其他技术的结合确实能够大大减少出行的次数。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;随着VR走进现实，人们的双眼纷纷看到了它在影视、游戏等产业的巨大钱景。借用熊节在&lt;a href=&quot;http://gigix.thoughtworkers.org/2015/8/28/driverless-cars/&quot;&gt;《无人驾驶汽车意味着什么》&lt;/a&gt;里的一句话：“然而技术的成熟与投入实用远不是变革的终点，恰恰相反，这只是一场更为深远的变革的起点”。我脑洞大开，畅想一下VR和其他科技结合之后，将会如何影响我们的生活。看上去下一个十年又要迎来一次技术大爆炸。&lt;br&gt;
    
    </summary>
    
      <category term="vr" scheme="http://qinghua.github.io/categories/vr/"/>
    
    
      <category term="thought" scheme="http://qinghua.github.io/tags/thought/"/>
    
  </entry>
  
  <entry>
    <title>使用RADOSGW联盟网关跨域同步</title>
    <link href="http://qinghua.github.io/ceph-radosgw-replication/"/>
    <id>http://qinghua.github.io/ceph-radosgw-replication/</id>
    <published>2016-04-22T11:01:01.000Z</published>
    <updated>2016-04-23T13:38:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://ceph.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ceph&lt;/a&gt;是一个高性能的PB级分布式文件系统。它能够在一个系统中提供对象存储、块存储和文件存储。本文的主要内容是如何&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/federated-config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;通过RADOSGW备份一个可用区&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对如何加载使用块存储和文件存储感兴趣可以参考&lt;a href=&quot;/ceph-demo&quot;&gt;《用容器轻松搭建ceph实验环境》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;对RADOSGW如何暴露S3和Swift接口感兴趣可以参考&lt;a href=&quot;/ceph-radosgw&quot;&gt;《通过RADOSGW提供ceph的S3和Swift接口》&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配三台虚拟机，一台叫做&lt;strong&gt;us-east&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.15&lt;/strong&gt;；另一台叫做&lt;strong&gt;us-west&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.16&lt;/strong&gt;；第三台叫做&lt;strong&gt;eu-east&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.15&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;us-west&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;us-west&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.16&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;eu-east&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;eu-east&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.17&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后分别在三个终端运行以下命令启动并连接三台虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh us-east&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh us-west&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 3&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh eu-east&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u80CC_u666F_u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u80CC_u666F_u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ceph对象网关（Ceph Object Gateway，radosgw）&lt;/a&gt;提供了S3和Swift的API，同时也支持S3的一些概念。&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/config-ref/#regions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;辖区（region）&lt;/a&gt;表明了一个地理位置，比如us。在这个辖区里可以有多个&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/config-ref/#zones&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;域（zone）&lt;/a&gt;，比如east和west。一个域里可以有多个实例，一个实例可以有多个&lt;a href=&quot;http://docs.ceph.com/docs/master/glossary/#term-ceph-node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;节点（node）&lt;/a&gt;。同时，配置一个域需要一系列的&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/config-ref/#pools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;存储池（pool）&lt;/a&gt;。如下图：&lt;br&gt;&lt;img src=&quot;/img/ceph-radosgw-replication-config.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于这次练习，我们使用下图的架构：&lt;br&gt;&lt;img src=&quot;/img/ceph-radosgw-replication-example.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个us辖区里有us-east和us-west两个域，每个域里各有一个实例，分别为us-east-1和us-west-1。还有一个eu的辖区，里面有一个eu-east的域，一个为eu-east-1的实例。我们将会首先实现同一个辖区（us）里的同步，然后是不同辖区的同步。相同辖区可以同步元数据和数据对象，而不同的辖区只能同步元数据而不能同步数据对象。元数据包括网关用户和存储桶（bucket）。&lt;/p&gt;
&lt;h2 id=&quot;u76F8_u540C_u8F96_u533A_u7684_u540C_u6B65&quot;&gt;&lt;a href=&quot;#u76F8_u540C_u8F96_u533A_u7684_u540C_u6B65&quot; class=&quot;headerlink&quot; title=&quot;相同辖区的同步&quot;&gt;&lt;/a&gt;相同辖区的同步&lt;/h2&gt;&lt;p&gt;首先需要安装一些ceph、radosgw的依赖包：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y --force-yes install ceph-common radosgw radosgw-agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了提供HTTP服务，还需要所有虚拟机都安装apache2和FastCGI：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y --force-yes install apache2 libapache2-mod-fastcgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以分别启动ceph/demo这个容器来轻松提供ceph服务了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --net=host -v /etc/ceph:/etc/ceph &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; MON_IP=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; CEPH_NETWORK=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name=ceph ceph/demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --net=host -v /etc/ceph:/etc/ceph &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; MON_IP=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.16&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; CEPH_NETWORK=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.16&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name=ceph ceph/demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后手动在各自虚拟机上创建一些提供给域使用的存储池，这一步不是必须的，因为我们创建的网关用户是有权限自动创建存储池的：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.root &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.control &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.gc &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.buckets &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.buckets.index &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.rgw.buckets.extra &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.intent-log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.usage &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.users &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.users.email &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.users.swift &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-east.users.uid &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.root &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.control &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.gc &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.buckets &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.buckets.index &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.rgw.buckets.extra &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.intent-log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.usage &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.users &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.users.email &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.users.swift &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .us-west.users.uid &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两台虚拟机对应两个实例，接下来为这两个实例分别创建密钥环（keyring），用它生成网关的用户和密钥（key），增加密钥的rwx权限并让其有权限访问Ceph对象集群：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph auth del client.radosgw.gateway&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool --create-keyring /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +r /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool /etc/ceph/ceph.client.radosgw.keyring -n client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --gen-key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool -n client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --cap osd &lt;span class=&quot;string&quot;&gt;&#39;allow rwx&#39;&lt;/span&gt; --cap mon &lt;span class=&quot;string&quot;&gt;&#39;allow rw&#39;&lt;/span&gt; /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph -k /etc/ceph/ceph.client.admin.keyring auth add client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -i /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph auth del client.radosgw.gateway&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool --create-keyring /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +r /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool /etc/ceph/ceph.client.radosgw.keyring -n client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --gen-key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool -n client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --cap osd &lt;span class=&quot;string&quot;&gt;&#39;allow rwx&#39;&lt;/span&gt; --cap mon &lt;span class=&quot;string&quot;&gt;&#39;allow rw&#39;&lt;/span&gt; /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph -k /etc/ceph/ceph.client.admin.keyring auth add client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -i /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来创建一个apache2的配置文件，监听80端口并把请求转发到radosgw提供的FastCGI 9000端口（稍后将会配置）上：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; rgw.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FastCgiExternalServer /var/www/s3gw.fcgi -host localhost:&lt;span class=&quot;number&quot;&gt;9000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerName localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerAlias *.localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerAdmin qinghua@ggg.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DocumentRoot /var/www&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteEngine On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteRule  ^/(.*) /s3gw.fcgi?%&amp;#123;QUERY_STRING&amp;#125; [E=HTTP_AUTHORIZATION:%&amp;#123;HTTP:Authorization&amp;#125;,L]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;IfModule mod_fastcgi.c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;Directory /var/www&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Options +ExecCGI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AllowOverride All&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SetHandler fastcgi-script&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Order allow,deny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Allow from all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AuthBasicAuthoritative Off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/IfModule&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowEncodedSlashes On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ErrorLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CustomLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerSignature Off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv rgw.conf /etc/apache2/conf-enabled/rgw.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于上述配置需要用到apache2默认未加载的&lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rewrite模块&lt;/a&gt;，所以需要加载并重新启动apache2：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo a2enmod rewrite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;FastCGI需要一个脚本来启用兼容S3的接口，同样也是所有虚拟机都要配，但是实例名略有区别：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; /usr/bin/radosgw -c /etc/ceph/ceph.conf -n client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv s3gw.fcgi /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +x /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; /usr/bin/radosgw -c /etc/ceph/ceph.conf -n client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv s3gw.fcgi /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +x /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在到了在&lt;code&gt;ceph.conf&lt;/code&gt;配置实例的时候了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region root pool = .us.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zonegroup root pool = .us.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a [client.radosgw.us-east-1]&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region = us&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone = us-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone root pool = .us-east.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw dns name = us-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a host = us-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a keyring = /etc/ceph/ceph.client.radosgw.keyring&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw socket path = &quot;&quot;&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a log file = /var/log/radosgw/client.radosgw.us-east-1.log&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw frontends = fastcgi socket_port=9000 socket_host=0.0.0.0&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw print continue = false&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region root pool = .us.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zonegroup root pool = .us.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a [client.radosgw.us-west-1]&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region = us&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone = us-west&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone root pool = .us-west.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw dns name = us-west&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a host = us-west&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a keyring = /etc/ceph/ceph.client.radosgw.keyring&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw socket path = &quot;&quot;&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a log file = /var/log/radosgw/client.radosgw.us-west-1.log&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw frontends = fastcgi socket_port=9000 socket_host=0.0.0.0&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw print continue = false&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置参数及其作用可以在&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/config-ref/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;查到，下面列出了一部分与辖区和域有关的参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rgw region root pool&lt;/strong&gt;：v.67版本中指定辖区所使用的存储池&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rgw zonegroup root pool&lt;/strong&gt;：Jewel版本中指定辖区所使用的存储池&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rgw region&lt;/strong&gt;：指定该实例的辖区名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rgw zone&lt;/strong&gt;：指定该实例的域名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rgw zone root pool&lt;/strong&gt;：指定域所使用的存储池&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来在各自实例上生成一个相同的json格式的辖区文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; us.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;api_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;is_master&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.15:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;master_zone&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;zones&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.15:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_meta&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_data&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-west&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.16:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_meta&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_data&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;placement_targets&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;tags&quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;default_placement&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后通过辖区文件生成us辖区并设置其为默认辖区：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --infile us.json --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region default --rgw-region=us --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --infile us.json --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region default --rgw-region=us --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;辖区搞定之后，就轮到域啦。在各自实例上生成两个相同的json格式的域文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; us-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;domain_root&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.domain.rgw&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;control_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.rgw.control&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;gc_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.rgw.gc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;intent_log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.intent-log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;usage_log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.usage&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_keys_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.users&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_email_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.users.email&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_swift_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.users.swift&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_uid_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.users.uid&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;system_key&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;access_key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;secret_key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;placement_pools&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;val&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;index_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.rgw.buckets.index&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;data_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.us-east.rgw.buckets&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed &lt;span class=&quot;string&quot;&gt;&#39;s/east/west/g&#39;&lt;/span&gt; us-east.json &amp;gt; us-west.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后通过域文件生成两个域并更新辖区图（region map）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-east --infile us-east.json --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-west --infile us-west.json --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-east --infile us-east.json --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-west --infile us-west.json --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在&lt;code&gt;us-east-1&lt;/code&gt;实例上，生成&lt;code&gt;us-east&lt;/code&gt;的用户，并用生成的&lt;code&gt;access_key&lt;/code&gt;和&lt;code&gt;secret_key&lt;/code&gt;填充刚才为空的&lt;code&gt;us-east.json&lt;/code&gt;文件，并将其复制到&lt;code&gt;us-west&lt;/code&gt;虚拟机上：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin user create --uid=&lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt; --display-name=&lt;span class=&quot;string&quot;&gt;&quot;Region-US Zone-East&quot;&lt;/span&gt; --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --system | tee eastuser.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; eastuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; eastuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/access_key\&quot;: \&quot;/access_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$SRC_ACCESS_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; us-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/secret_key\&quot;: \&quot;/secret_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$SRC_SECRET_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; us-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker cp ceph:us-east.json us-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scp us-east.json vagrant@&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.16&lt;/span&gt;:/home/vagrant    &lt;span class=&quot;comment&quot;&gt;# vagrant的密码也是vagrant&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;us-west-1&lt;/code&gt;实例上，生成&lt;code&gt;us-west&lt;/code&gt;的用户，也用生成的&lt;code&gt;access_key&lt;/code&gt;和&lt;code&gt;secret_key&lt;/code&gt;填充刚才为空的&lt;code&gt;us-west.json&lt;/code&gt;文件，并将其复制到&lt;code&gt;us-east&lt;/code&gt;虚拟机上：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin user create --uid=&lt;span class=&quot;string&quot;&gt;&quot;us-west&quot;&lt;/span&gt; --display-name=&lt;span class=&quot;string&quot;&gt;&quot;Region-US Zone-West&quot;&lt;/span&gt; --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --system | tee westuser.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; westuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; westuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/access_key\&quot;: \&quot;/access_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$DEST_ACCESS_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; us-west.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/secret_key\&quot;: \&quot;/secret_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$DEST_SECRET_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; us-west.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker cp ceph:us-west.json us-west.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scp us-west.json vagrant@&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt;:/home/vagrant    &lt;span class=&quot;comment&quot;&gt;# vagrant的密码也是vagrant&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在两台虚拟机的用户主文件夹里都有对方的json文件，分别复制进ceph容器里：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker cp us-west.json ceph:/us-west.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker cp us-east.json ceph:/us-east.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来分别在两个实例里更新带了&lt;code&gt;access_key&lt;/code&gt;和&lt;code&gt;secret_key&lt;/code&gt;的各两个域：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-east --infile us-east.json --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-west --infile us-west.json --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-east --infile us-east.json --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=us-west --infile us-west.json --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;都完成了以后，就可以重启ceph服务和apache2啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker restart ceph&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo /etc/init.d/radosgw start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Apache2启动完成后，在浏览器打开&lt;a href=&quot;http://192.168.33.15/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.15/&lt;/a&gt;或&lt;a href=&quot;http://192.168.33.16/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.16/&lt;/a&gt;应该能看到下面的xml：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ListAllMyBucketsResult&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://s3.amazonaws.com/doc/2006-03-01/&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Owner&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ID&lt;/span&gt;&amp;gt;&lt;/span&gt;anonymous&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ID&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;DisplayName&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;Owner&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Buckets&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ListAllMyBucketsResult&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果只看到了500的错误，等一会儿再刷新一次即可。如果遇到麻烦，可以这样调试：输入命令&lt;code&gt;sudo lsof -i :9000&lt;/code&gt;看看是否radosgw启动了这个端口。如果没有，输入命令&lt;code&gt;ps -ef | grep radosgw&lt;/code&gt;看看radosgw是否正常启动。若是正常启动，应该会有一个&lt;code&gt;/usr/bin/radosgw -n client.radosgw.us-east-1&lt;/code&gt;的进程。若是没有正常启动，可以检查&lt;code&gt;/ect/ceph/ceph.conf&lt;/code&gt;的内容，一般都是配置有问题。&lt;/p&gt;
&lt;p&gt;搞定ceph和apache2后，在&lt;code&gt;us-east&lt;/code&gt;里用python的boto库给&lt;code&gt;us-east-1&lt;/code&gt;实例创建一个名为&lt;code&gt;my-new-bucket&lt;/code&gt;的存储桶，并给&lt;code&gt;ggg&lt;/code&gt;的key上传一句&lt;strong&gt;Hello world&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto.s3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto.s3.connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from boto.s3.key import Key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;SRC_ACCESS_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secret_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;SRC_SECRET_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = boto.connect_s3(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aws_access_key_id = access_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aws_secret_access_key = secret_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host = &lt;span class=&quot;string&quot;&gt;&#39;192.168.33.15&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  is_secure=False,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  calling_format = boto.s3.connection.OrdinaryCallingFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bucket = conn.create_bucket(&lt;span class=&quot;string&quot;&gt;&#39;my-new-bucket&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k = Key(bucket)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k.key = &lt;span class=&quot;string&quot;&gt;&#39;ggg&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k.set_contents_from_string(&lt;span class=&quot;string&quot;&gt;&#39;Hello world&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; bucket &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; conn.get_all_buckets():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;name&amp;#125;\t&amp;#123;created&amp;#125;&quot;&lt;/span&gt;.format(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = bucket.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    created = bucket.creation_date,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python s3test.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在就该启动&lt;code&gt;radosgw-agent&lt;/code&gt;来同步数据啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; us-west.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; us-west.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; cluster-data-sync.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_zone: us-east&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;: http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_access_key: &lt;span class=&quot;variable&quot;&gt;$SRC_ACCESS_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_secret_key: &lt;span class=&quot;variable&quot;&gt;$SRC_SECRET_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_zone: us-west&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;destination: http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_access_key: &lt;span class=&quot;variable&quot;&gt;$DEST_ACCESS_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_secret_key: &lt;span class=&quot;variable&quot;&gt;$DEST_SECRET_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;_file: /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/radosgw/radosgw-sync-us-east-west.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo radosgw-agent -c cluster-data-sync.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再打开一个终端窗口，用以下命令查看&lt;code&gt;us-west-1&lt;/code&gt;实例是不是已经把&lt;code&gt;my-new-bucket&lt;/code&gt;同步过来啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin metadata bucket list --name client.radosgw.us-west-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可能是由于单机&lt;code&gt;ceph/demo&lt;/code&gt;容器的性能极差，在同步对象的时候基本上就一直停在&lt;strong&gt;INFO:radosgw_agent.worker:syncing bucket “my-new-bucket”&lt;/strong&gt;上。如果有真实环境的ceph应该能够很快同步过来。如果同步成功，可以用以下命令来得到刚才的&lt;strong&gt;Hello world&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;us-west&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3download.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto.s3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto.s3.connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from boto.s3.key import Key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;SRC_ACCESS_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secret_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;SRC_SECRET_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = boto.connect_s3(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aws_access_key_id = access_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aws_secret_access_key = secret_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host = &lt;span class=&quot;string&quot;&gt;&#39;192.168.33.16&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  is_secure=False,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  calling_format = boto.s3.connection.OrdinaryCallingFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bucket = conn.get_bucket(&lt;span class=&quot;string&quot;&gt;&#39;my-new-bucket&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;key = bucket.get_key(&lt;span class=&quot;string&quot;&gt;&#39;ggg&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; key.get_contents_as_string()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python s3download.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面是一张同辖区同步示意图：&lt;br&gt;&lt;img src=&quot;http://docs.ceph.com/docs/master/_images/zone-sync.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4E0D_u540C_u8F96_u533A_u7684_u540C_u6B65&quot;&gt;&lt;a href=&quot;#u4E0D_u540C_u8F96_u533A_u7684_u540C_u6B65&quot; class=&quot;headerlink&quot; title=&quot;不同辖区的同步&quot;&gt;&lt;/a&gt;不同辖区的同步&lt;/h2&gt;&lt;p&gt;不同的辖区只能同步元数据而不能同步数据对象。接下来我们在eu-east上，尝试同步us-east的元数据。有了&lt;a href=&quot;/ceph-radosgw-replication/#u76F8_u540C_u8F96_u533A_u7684_u540C_u6B65&quot;&gt;相同辖区的同步&lt;/a&gt;的经验，这回就不详细介绍下面的命令了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --net=host -v /etc/ceph:/etc/ceph &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; MON_IP=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; CEPH_NETWORK=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name=ceph ceph/demo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建存储池这一步也同上面一样是可选&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.root &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.control &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.gc &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.buckets &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;512&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.buckets.index &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.rgw.buckets.extra &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.intent-log &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.usage &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.users &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.users.email &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.users.swift &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ceph osd pool create .eu-east.users.uid &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建密钥环和网关用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph auth del client.radosgw.gateway&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool --create-keyring /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +r /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool /etc/ceph/ceph.client.radosgw.keyring -n client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --gen-key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph-authtool -n client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --cap osd &lt;span class=&quot;string&quot;&gt;&#39;allow rwx&#39;&lt;/span&gt; --cap mon &lt;span class=&quot;string&quot;&gt;&#39;allow rw&#39;&lt;/span&gt; /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph -k /etc/ceph/ceph.client.admin.keyring auth add client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -i /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 配置apache2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; rgw.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FastCgiExternalServer /var/www/s3gw.fcgi -host localhost:&lt;span class=&quot;number&quot;&gt;9000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerName localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerAlias *.localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerAdmin qinghua@ggg.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DocumentRoot /var/www&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteEngine On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteRule  ^/(.*) /s3gw.fcgi?%&amp;#123;QUERY_STRING&amp;#125; [E=HTTP_AUTHORIZATION:%&amp;#123;HTTP:Authorization&amp;#125;,L]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;IfModule mod_fastcgi.c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;Directory /var/www&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Options +ExecCGI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AllowOverride All&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SetHandler fastcgi-script&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Order allow,deny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Allow from all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AuthBasicAuthoritative Off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/IfModule&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AllowEncodedSlashes On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ErrorLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CustomLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ServerSignature Off&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv rgw.conf /etc/apache2/conf-enabled/rgw.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 配置FastCGI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; /usr/bin/radosgw -c /etc/ceph/ceph.conf -n client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv s3gw.fcgi /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod +x /var/www/s3gw.fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 配置ceph&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region root pool = .eu.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zonegroup root pool = .eu.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a [client.radosgw.eu-east-1]&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw region = eu&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone = eu-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw zone root pool = .eu-east.rgw.root&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw dns name = eu-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a host = eu-east&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a keyring = /etc/ceph/ceph.client.radosgw.keyring&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw socket path = &quot;&quot;&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a log file = /var/log/radosgw/client.radosgw.eu-east-1.log&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw frontends = fastcgi socket_port=9000 socket_host=0.0.0.0&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw print continue = false&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来就是辖区和域的配置了。需要设置us的辖区和eu自己的辖区，否则会报错：&lt;strong&gt;AssertionError: No master zone found for region default&lt;/strong&gt;。但是域只用设置eu自己的就好：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it ceph bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; us.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;api_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;is_master&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.15:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;master_zone&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;zones&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.15:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_meta&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_data&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;us-west&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.16:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_meta&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_data&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;placement_targets&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;tags&quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;default_placement&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; eu.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;eu&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;api_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;eu&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;is_master&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.15:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;master_zone&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;eu-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;zones&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;eu-east&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;endpoints&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;http:\/\/192.168.33.17:80\/&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_meta&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;log_data&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;placement_targets&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&quot;tags&quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;default_placement&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置辖区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --infile us.json --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --infile eu.json --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region default --rgw-region=eu --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; eu-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;domain_root&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.domain.rgw&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;control_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.rgw.control&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;gc_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.rgw.gc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;intent_log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.intent-log&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;usage_log_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.usage&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_keys_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.users&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_email_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.users.email&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_swift_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.users.swift&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;user_uid_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.users.uid&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;system_key&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;access_key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;secret_key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;placement_pools&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;default-placement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;val&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;index_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.rgw.buckets.index&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;data_pool&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;.eu-east.rgw.buckets&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=eu-east --infile eu-east.json --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin regionmap update --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建用户&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin user create --uid=&lt;span class=&quot;string&quot;&gt;&quot;eu-east&quot;&lt;/span&gt; --display-name=&lt;span class=&quot;string&quot;&gt;&quot;Region-EU Zone-East&quot;&lt;/span&gt; --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --system | tee eastuser.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; eastuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; eastuser.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/access_key\&quot;: \&quot;/access_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$SRC_ACCESS_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; eu-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/secret_key\&quot;: \&quot;/secret_key\&quot;: \&quot;&lt;span class=&quot;variable&quot;&gt;$SRC_SECRET_KEY&lt;/span&gt;/g&quot;&lt;/span&gt; eu-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; --rgw-zone=eu-east --infile eu-east.json --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;都完成了以后，就可以重启ceph服务和apache2啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker restart ceph&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo /etc/init.d/radosgw start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo a2enmod rewrite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后同步元数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scp vagrant@&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt;:/home/vagrant/us-east.json .    &lt;span class=&quot;comment&quot;&gt;# vagrant的密码也是vagrant&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker cp ceph:eu-east.json eu-east.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SRC_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; us-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; eu-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; DEST_SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; eu-east.json`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; cluster-data-sync.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_zone: us-east&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;: http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_access_key: &lt;span class=&quot;variable&quot;&gt;$SRC_ACCESS_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src_secret_key: &lt;span class=&quot;variable&quot;&gt;$SRC_SECRET_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_zone: eu-east&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;destination: http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_access_key: &lt;span class=&quot;variable&quot;&gt;$DEST_ACCESS_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dest_secret_key: &lt;span class=&quot;variable&quot;&gt;$DEST_SECRET_KEY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;_file: /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/radosgw/radosgw-sync-eu-east-west.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo radosgw-agent -c cluster-data-sync.conf --metadata-only&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果不加&lt;code&gt;--metadata-only&lt;/code&gt;，则会报错：&lt;strong&gt;ERROR:root:data sync can only occur between zones in the same region&lt;/strong&gt;。同步完成后，我们运行以下命令查看现在&lt;code&gt;eu-east-1&lt;/code&gt;实例里的存储桶：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;eu-east&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin metadata bucket list --name client.radosgw.eu-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;应该能够看到先前在&lt;code&gt;us-east-1&lt;/code&gt;创建的&lt;code&gt;my-new-bucket&lt;/code&gt;。下面是一张不同辖区同步示意图：&lt;br&gt;&lt;img src=&quot;http://docs.ceph.com/docs/master/_images/region-sync.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5E38_u89C1_u547D_u4EE4&quot;&gt;&lt;a href=&quot;#u5E38_u89C1_u547D_u4EE4&quot; class=&quot;headerlink&quot; title=&quot;常见命令&quot;&gt;&lt;/a&gt;常见命令&lt;/h2&gt;&lt;p&gt;再介绍一些ceph的常见命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rados lspools                                                &lt;span class=&quot;comment&quot;&gt;# 列出所有的存储池&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rados ls -p .rgw.root                                        &lt;span class=&quot;comment&quot;&gt;# 列出.rgw.root存储池的所有对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rados get zone_info.default obj.txt -p .rgw.root             &lt;span class=&quot;comment&quot;&gt;# 将.rgw.root存储池的zone_info.default对象内容保存到obj.txt文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rados rm region_info.default -p .us.rgw.root                 &lt;span class=&quot;comment&quot;&gt;# 删除.us.rgw.root存储池的region_info.default对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region list --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 列出client.radosgw.us-east-1实例的所有辖区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin region get --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;# 查看client.radosgw.us-east-1实例的主辖区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone list --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;# 列出client.radosgw.us-east-1实例的所有域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;radosgw-admin zone get --name client.radosgw.us-east-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;# 查看client.radosgw.us-east-1实例的主域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://ceph.com/&quot;&gt;Ceph&lt;/a&gt;是一个高性能的PB级分布式文件系统。它能够在一个系统中提供对象存储、块存储和文件存储。本文的主要内容是如何&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/federated-config/&quot;&gt;通过RADOSGW备份一个可用区&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对如何加载使用块存储和文件存储感兴趣可以参考&lt;a href=&quot;/ceph-demo&quot;&gt;《用容器轻松搭建ceph实验环境》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;对RADOSGW如何暴露S3和Swift接口感兴趣可以参考&lt;a href=&quot;/ceph-radosgw&quot;&gt;《通过RADOSGW提供ceph的S3和Swift接口》&lt;/a&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="ceph" scheme="http://qinghua.github.io/tags/ceph/"/>
    
      <category term="radosgw" scheme="http://qinghua.github.io/tags/radosgw/"/>
    
      <category term="storage" scheme="http://qinghua.github.io/tags/storage/"/>
    
  </entry>
  
  <entry>
    <title>光学字符识别软件tesseract-ocr</title>
    <link href="http://qinghua.github.io/tesseract/"/>
    <id>http://qinghua.github.io/tesseract/</id>
    <published>2016-04-16T02:13:20.000Z</published>
    <updated>2016-04-17T10:09:45.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tesseract&lt;/a&gt;是一个可以将图片转换成文字的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OCR&lt;/a&gt;（Optical Character Recognition）软件，支持包括中文简繁体的&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多种语言&lt;/a&gt;，简单易用，可以用来识别验证码。让我们来看一看吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5&quot;&gt;&lt;a href=&quot;#u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Tesseract只是一个小应用程序，在mac里直接安装就好啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install tesseract&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面是张包含了一些英文的图片：&lt;br&gt;&lt;img src=&quot;/img/test.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;把图片保存到本地之后，使用以下命令将其转成文字：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tesseract ~/Downloads/test.png out&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat out.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，对于正常字体来说，粗体、斜体、大小字号等的识别率还是很不错的。如果是手写体的字体，识别率将会严重下降。&lt;/p&gt;
&lt;h2 id=&quot;u4E2D_u6587&quot;&gt;&lt;a href=&quot;#u4E2D_u6587&quot; class=&quot;headerlink&quot; title=&quot;中文&quot;&gt;&lt;/a&gt;中文&lt;/h2&gt;&lt;p&gt;Tesseract支持多种语言，不过除了英语以外，都必须先下载语言数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://github.com/tesseract-ocr/tessdata/blob/master/chi_sim.traineddata?raw=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv chi_sim.traineddata\?raw\=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/Cellar/tesseract/&lt;span class=&quot;number&quot;&gt;3.04&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;/share/tessdata/chi_sim.traineddata&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从后缀名traineddata可以看出来，tesseract是可以通过训练来提高识别率的。网上有许多教程，有兴趣的朋友可以自行尝试。下面是张包含了一些中文的图片：&lt;br&gt;&lt;img src=&quot;/img/testcn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;把图片保存到本地之后，使用以下命令将其转成文字：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tesseract ~/Downloads/testcn.png out &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; chi_sim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat out.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tesseract ~/Downloads/testcn.png out &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; eng+chi_sim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat out.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;毕竟汉字内容多，这回没有英文识别率那么高了，想要更加实用可能需要更多训练和校对。&lt;/p&gt;
&lt;h2 id=&quot;PDF&quot;&gt;&lt;a href=&quot;#PDF&quot; class=&quot;headerlink&quot; title=&quot;PDF&quot;&gt;&lt;/a&gt;PDF&lt;/h2&gt;&lt;h3 id=&quot;u8F93_u51FA&quot;&gt;&lt;a href=&quot;#u8F93_u51FA&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;p&gt;很简单，在&lt;code&gt;tesseract&lt;/code&gt;命令的最后面加上&lt;code&gt;pdf&lt;/code&gt;就好了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tesseract ~/Downloads/test.png out pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open out.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u8F93_u5165&quot;&gt;&lt;a href=&quot;#u8F93_u5165&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;p&gt;虽然tesseract不能直接处理PDF，但是借助&lt;a href=&quot;https://www.imagemagick.org/script/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImageMagick&lt;/a&gt;和&lt;a href=&quot;http://www.ghostscript.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghostscript&lt;/a&gt;可以轻松地把PDF转换成图片文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install imagemagick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew install ghostscript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;convert -density &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; -trim input.pdf output%&lt;span class=&quot;number&quot;&gt;04&lt;/span&gt;d.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里的100表示DPI，&lt;code&gt;%04d&lt;/code&gt;表示分页储存。有了图片之后就可以用tesseract随意操作啦。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/wiki&quot;&gt;Tesseract&lt;/a&gt;是一个可以将图片转换成文字的&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB&quot;&gt;OCR&lt;/a&gt;（Optical Character Recognition）软件，支持包括中文简繁体的&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages&quot;&gt;多种语言&lt;/a&gt;，简单易用，可以用来识别验证码。让我们来看一看吧。&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://qinghua.github.io/categories/tool/"/>
    
    
      <category term="OCR" scheme="http://qinghua.github.io/tags/OCR/"/>
    
      <category term="tesseract" scheme="http://qinghua.github.io/tags/tesseract/"/>
    
  </entry>
  
  <entry>
    <title>轻松搭建OpenStack Swift存储测试环境</title>
    <link href="http://qinghua.github.io/openstack-swift/"/>
    <id>http://qinghua.github.io/openstack-swift/</id>
    <published>2016-04-15T11:22:14.000Z</published>
    <updated>2016-04-20T00:52:32.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/developer/swift/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift&lt;/a&gt;（OpenStack Object Storage）是Rackspace开发的高可用分布式对象存储，贡献给了&lt;a href=&quot;http://www.openstack.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenStack&lt;/a&gt;。上次在&lt;a href=&quot;/ceph-radosgw&quot;&gt;《通过RADOSGW提供ceph的S3和Swift接口》&lt;/a&gt;一文里介绍了ceph RADOSGW的Swift接口，这次让我们直接来试试原生的swift吧！&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配一台IP为&lt;strong&gt;192.168.33.17&lt;/strong&gt;，内存为1G的虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.17&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后终端运行以下命令启动并连接虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;这里参考了Swift的官方文档&lt;a href=&quot;http://docs.openstack.org/developer/swift/development_saio.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift All In One&lt;/a&gt;来搭建一个swift测试环境。首先需要安装各种依赖包：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y install curl gcc memcached rsync sqlite3 xfsprogs \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        git-core libffi-dev python-setuptools \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        liberasurecode-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y install python-coverage python-dev python-nose \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        python-xattr python-eventlet \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        python-greenlet python-pastedeploy \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        python-netifaces python-pip python-dnspython \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        python-mock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install --upgrade pip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里就不用&lt;code&gt;fdisk&lt;/code&gt;而使用较简单的环回设备来当做我们的存储：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /srv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo truncate &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;GB /srv/swift-disk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkfs.xfs /srv/swift-disk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &lt;span class=&quot;string&quot;&gt;&#39;echo &quot;/srv/swift-disk /mnt/sdb1 xfs loop,noatime,nodiratime,nobarrier,logbufs=8 0 0&quot; &amp;gt;&amp;gt; /etc/fstab&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;生成挂载点和link：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /mnt/sdb1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mount /mnt/sdb1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /mnt/sdb1/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; /mnt/sdb1/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; /mnt/sdb1/&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; /mnt/sdb1/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chown vagrant:vagrant /mnt/sdb1/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;#125;; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; sudo ln &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; /mnt/sdb1/&lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt; /srv/&lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir -p /srv/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;/node/sdb1 /srv/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;/node/sdb5 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              /srv/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/node/sdb2 /srv/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/node/sdb6 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              /srv/&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/node/sdb3 /srv/&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/node/sdb7 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              /srv/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;/node/sdb4 /srv/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;/node/sdb8 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              /var/run/swift&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chown -R vagrant:vagrant /var/run/swift&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;#125;; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; sudo chown -R vagrant:vagrant /srv/&lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt;/; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;rc.local&lt;/code&gt;里增加几条创建文件夹和授权的命令，使之能够被开机执行：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$i mkdir -p /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4&#39;&lt;/span&gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$i chown vagrant:vagrant /var/cache/swift*&#39;&lt;/span&gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$i mkdir -p /var/run/swift&#39;&lt;/span&gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$i chown vagrant:vagrant /var/run/swift&#39;&lt;/span&gt; /etc/rc.local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来需要安装swift和它的客户端：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;; git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/openstack/python-swiftclient.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/python-swiftclient; git checkout &lt;span class=&quot;number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; sudo python setup.py develop; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/openstack/swift.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift; git checkout &lt;span class=&quot;number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/;python_version&amp;lt;&#39;3.0&#39;//&quot;&lt;/span&gt; requirements.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;/dnspython3&amp;gt;=1.12.0;python_version&amp;gt;=&#39;3.0&#39;/d&quot;&lt;/span&gt; requirements.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install -r requirements.txt; sudo python setup.py develop; sudo pip install -r &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;-requirements.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后需要配置rsync：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cp &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/doc/saio/rsyncd.conf /etc/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/&amp;lt;your-user-name&amp;gt;/vagrant/&quot;&lt;/span&gt; /etc/rsyncd.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/RSYNC_ENABLE=false/RSYNC_ENABLE=true/&quot;&lt;/span&gt; /etc/default/rsync&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service rsync restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用以下命令来验证rsync，应该能看到一堆的account、container和object：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rsync rsync://pub@localhost/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们前面已经安装了memcached，验证一下服务是可用的：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo service memcached status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来需要配置各个节点：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/doc; sudo cp -r saio/swift /etc/swift; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chown -R &lt;span class=&quot;variable&quot;&gt;$&amp;#123;USER&amp;#125;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$&amp;#123;USER&amp;#125;&lt;/span&gt; /etc/swift&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find /etc/swift/ -name \*.conf | xargs sudo sed -i &lt;span class=&quot;string&quot;&gt;&quot;s/&amp;lt;your-user-name&amp;gt;/&lt;span class=&quot;variable&quot;&gt;$&amp;#123;USER&amp;#125;&lt;/span&gt;/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后配置swift脚本，&lt;code&gt;/etc/swift/test.conf&lt;/code&gt;为我们添加了三个测试账户：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/doc; cp saio/bin/* &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/bin; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/bin/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;export SAIO_BLOCK_DEVICE=/srv/swift-disk&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&quot;/^find/d&quot;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/bin/resetswift&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;/sample.conf /etc/swift/test.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;export SWIFT_TEST_CONFIG_FILE=/etc/swift/test.conf&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;export PATH=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;PATH&amp;#125;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/bin&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Swift里有一个非常重要的概念，&lt;a href=&quot;http://docs.openstack.org/developer/swift/overview_ring.html?highlight=ring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ring&lt;/a&gt;。通过它可以找到数据的物理位置。它的存储模型是这样的：一个账号（account）里可以有多个容器（container），容器里可以有许多个键值对，字典里的值称为对象（object）。账号和容器被存储在SQLite数据库里，而对象是以文件方式存储的。账号数据库、容器数据库和每个单独对象都有自己的ring。下面我们来构建一些ring：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;remakerings&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u542F_u52A8_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u542F_u52A8_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;启动环境&quot;&gt;&lt;/a&gt;启动环境&lt;/h2&gt;&lt;p&gt;现在我们就可以用&lt;code&gt;startmain&lt;/code&gt;启动swift啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/bind_ip = 127.0.0.1/bind_ip = 192.168.33.17/&#39;&lt;/span&gt; /etc/swift/proxy-server.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;startmain&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后用&lt;code&gt;test:tester/testing&lt;/code&gt;这个预先创建好的测试账户登录：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -i -H &lt;span class=&quot;string&quot;&gt;&#39;X-Storage-User: test:tester&#39;&lt;/span&gt; -H &lt;span class=&quot;string&quot;&gt;&#39;X-Storage-Pass: testing&#39;&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; | tee auth.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y install dos2unix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dos2unix auth.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; X_AUTH_TOKEN=`cat auth.txt | sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/X-Auth-Token: \(.*\)/\1/p&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; X_STORAGE_URL=`cat auth.txt | sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/X-Storage-Url: \(.*\)/\1/p&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -v -H &lt;span class=&quot;string&quot;&gt;&quot;X-Auth-Token: &lt;span class=&quot;variable&quot;&gt;$X_AUTH_TOKEN&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$X_STORAGE_URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面用到&lt;code&gt;dos2unix&lt;/code&gt;是因为取到的&lt;code&gt;X-Storage-Url&lt;/code&gt;最后面带着&lt;code&gt;^M$&lt;/code&gt;的特殊字符。直接管道的话，下一个&lt;code&gt;curl&lt;/code&gt;会报错：&lt;code&gt;Illegal characters found in URL&lt;/code&gt;。可以保存成文件之后使用&lt;code&gt;cat -A&lt;/code&gt;来查看这些特殊字符。&lt;br&gt;登录完成后，就能看到swift的状态和所有容器啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;:tester -K testing &lt;span class=&quot;built_in&quot;&gt;stat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;:tester -K testing list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6D4B_u8BD5_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u6D4B_u8BD5_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;测试环境&quot;&gt;&lt;/a&gt;测试环境&lt;/h2&gt;&lt;h3 id=&quot;Swift_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#Swift_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;Swift测试&quot;&gt;&lt;/a&gt;Swift测试&lt;/h3&gt;&lt;p&gt;有兴趣的话，还可以运行下面的单元测试、功能测试和探索性测试：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/.unittests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/.functests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/swift/.probetests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Docker_Registry_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#Docker_Registry_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;Docker Registry测试&quot;&gt;&lt;/a&gt;Docker Registry测试&lt;/h3&gt;&lt;p&gt;在Docker Registry的&lt;code&gt;config.yml&lt;/code&gt;里使用以下配置：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;storage:&amp;#10;  swift:&amp;#10;    username: test:tester &amp;#10;    password: testing &amp;#10;    authurl: http://192.168.33.17:8080/auth/v1.0&amp;#10;    container: swift&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以测试&lt;code&gt;docker push&lt;/code&gt;啦。不过记得需要先登录用户哦。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/developer/swift/&quot;&gt;Swift&lt;/a&gt;（OpenStack Object Storage）是Rackspace开发的高可用分布式对象存储，贡献给了&lt;a href=&quot;http://www.openstack.org/&quot;&gt;OpenStack&lt;/a&gt;。上次在&lt;a href=&quot;/ceph-radosgw&quot;&gt;《通过RADOSGW提供ceph的S3和Swift接口》&lt;/a&gt;一文里介绍了ceph RADOSGW的Swift接口，这次让我们直接来试试原生的swift吧！&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="openstack swift" scheme="http://qinghua.github.io/tags/openstack-swift/"/>
    
      <category term="storage" scheme="http://qinghua.github.io/tags/storage/"/>
    
  </entry>
  
  <entry>
    <title>使用RADOSGW提供ceph的S3和Swift接口</title>
    <link href="http://qinghua.github.io/ceph-radosgw/"/>
    <id>http://qinghua.github.io/ceph-radosgw/</id>
    <published>2016-04-12T00:07:13.000Z</published>
    <updated>2016-04-21T09:30:54.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://ceph.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ceph&lt;/a&gt;是一个高性能的PB级分布式文件系统。它能够在一个系统中提供对象存储、块存储和文件存储。对如何加载使用这些存储感兴趣的话可以参考&lt;a href=&quot;/ceph-demo&quot;&gt;《用容器轻松搭建ceph实验环境》&lt;/a&gt;。它还可以通过RADOSGW来实现S3和OpenStack Swift存储接口。不管RADOSGW还是块存储或文件存储都是基于对象存储来提供服务。本文的主要内容是如何通过RADOSGW来暴露S3和SWIFT接口。由于Docker Registry在2.4版本&lt;a href=&quot;https://github.com/docker/distribution/commit/5967d333425a8dd5d36c5bb456098839654d38af&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移除了对rados的支持&lt;/a&gt;，所以如果使用ceph作为后端存储就需要利用RADOSGW了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配一台IP为&lt;strong&gt;192.168.33.111&lt;/strong&gt;，内存为1G的虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.111&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后终端运行以下命令启动并连接虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;首先需要安装一些ceph、radosgw的依赖包，还有python-boto、swift客户端等工具可以用于测试。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y --force-yes install ceph-common radosgw python-boto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install --upgrade setuptools&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install --upgrade python-swiftclient&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以启动ceph/demo这个容器来轻松提供ceph服务了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --net=host -v /etc/ceph:/etc/ceph &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; MON_IP=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; CEPH_NETWORK=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; --name=ceph ceph/demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来的步骤主要参考的是有一点坑的&lt;a href=&quot;http://docs.ceph.com/docs/master/radosgw/config/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方教程&lt;/a&gt;。需要为radosgw生成一个名为&lt;code&gt;gateway&lt;/code&gt;的用户：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph auth del client.radosgw.gateway&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ceph auth get-or-create client.radosgw.gateway osd &lt;span class=&quot;string&quot;&gt;&#39;allow rwx&#39;&lt;/span&gt; mon &lt;span class=&quot;string&quot;&gt;&#39;allow rwx&#39;&lt;/span&gt; -o /etc/ceph/ceph.client.radosgw.keyring&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后需要把这个用户加到&lt;code&gt;ceph.conf&lt;/code&gt;配置里，提供端口为9000的&lt;a href=&quot;https://en.wikipedia.org/wiki/FastCGI&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FastCGI&lt;/a&gt;服务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i $&lt;span class=&quot;string&quot;&gt;&#39;$a \\\n&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a [client.radosgw.gateway]&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a host = vagrant-ubuntu-trusty-64&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a keyring = /etc/ceph/ceph.client.radosgw.keyring&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw socket path = &quot;&quot;&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a log file = /var/log/radosgw/client.radosgw.gateway.log&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw frontends = fastcgi socket_port=9000 socket_host=0.0.0.0&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;$a rgw print continue = false&#39;&lt;/span&gt; /etc/ceph/ceph.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中第二行的&lt;code&gt;vagrant-ubuntu-trusty-64&lt;/code&gt;，必须使用&lt;code&gt;hostname -s&lt;/code&gt;得出的结果。如果是按照&lt;a href=&quot;/ceph-radosgw/#u51C6_u5907_u5DE5_u4F5C&quot;&gt;准备工作&lt;/a&gt;的做法，是不需要变的。另外&lt;a href=&quot;https://segmentfault.com/q/1010000000256516&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;的第一个回答非常清晰地解释了CGI和FastCGI。&lt;br&gt;配置完成后就可以重启ceph容器并启动radosgw：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker restart ceph&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo /etc/init.d/radosgw start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了提供HTTP服务，需要安装apache2（Red Hat系是httpd）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get -y --force-yes install apache2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来创建一个apache2的配置文件，监听80端口并把请求转发到radosgw提供的FastCGI 9000端口上：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; rgw.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;VirtualHost *:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ServerName localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DocumentRoot /var/www/html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ErrorLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/rgw_error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CustomLog /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/apache2/rgw_access.log combined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# LogLevel debug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RewriteEngine On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RewriteRule .* - [E=HTTP_AUTHORIZATION:%&amp;#123;HTTP:Authorization&amp;#125;,L]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SetEnv proxy-nokeepalive &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ProxyPass / fcgi://localhost:&lt;span class=&quot;number&quot;&gt;9000&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv rgw.conf /etc/apache2/conf-enabled/rgw.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于上述配置需要用到一些apache2默认未加载的模块，所以需要加载并重新启动apache2：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo a2enmod rewrite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo a2enmod proxy_http&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo a2enmod proxy_fcgi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6D4B_u8BD5_u670D_u52A1&quot;&gt;&lt;a href=&quot;#u6D4B_u8BD5_u670D_u52A1&quot; class=&quot;headerlink&quot; title=&quot;测试服务&quot;&gt;&lt;/a&gt;测试服务&lt;/h2&gt;&lt;h3 id=&quot;S3&quot;&gt;&lt;a href=&quot;#S3&quot; class=&quot;headerlink&quot; title=&quot;S3&quot;&gt;&lt;/a&gt;S3&lt;/h3&gt;&lt;p&gt;RADOSGW的基本配置已经完成，现在我们测试一下s3接口。它的存储模型是这样的：用户可以创建和管理多个&lt;a href=&quot;http://docs.aws.amazon.com/zh_cn/AmazonS3/latest/dev/UsingBucket.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;存储桶（bucket）&lt;/a&gt;，每个存储桶里可以存放无限多个对象（object），每个对象是一个键值对。存储桶的名称与区域无关，全球唯一。&lt;/p&gt;
&lt;p&gt;接下来先创建一个s3用户：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin user create --uid=&lt;span class=&quot;string&quot;&gt;&quot;testuser&quot;&lt;/span&gt; --display-name=&lt;span class=&quot;string&quot;&gt;&quot;First User&quot;&lt;/span&gt; | tee user.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; ACCESS_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;access_key&quot;: &quot;\(.*\)&quot;,/\1/p&#39;&lt;/span&gt; user.txt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; SECRET_KEY=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt; user.txt`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用以下python代码来测试我们的s3接口是否已经可用：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; s3test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import boto.s3.connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;access_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;ACCESS_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secret_key = os.environ[&lt;span class=&quot;string&quot;&gt;&quot;SECRET_KEY&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = boto.connect_s3(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aws_access_key_id = access_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aws_secret_access_key = secret_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;host = &lt;span class=&quot;string&quot;&gt;&#39;192.168.33.111&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;is_secure=False,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;calling_format = boto.s3.connection.OrdinaryCallingFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bucket = conn.create_bucket(&lt;span class=&quot;string&quot;&gt;&#39;my-new-bucket&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; bucket &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; conn.get_all_buckets():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;name&amp;#125;\t&amp;#123;created&amp;#125;&quot;&lt;/span&gt;.format(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = bucket.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        created = bucket.creation_date,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python s3test.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果显示了&lt;code&gt;my-new-bucket&lt;/code&gt;，那就说明测试成功地通过s3接口创建了一个存储桶。可以使用以下命令来获取这个存储桶和实例的信息：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin metadata bucket list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin metadata get bucket:my-new-bucket  | tee bucket.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; BUCKET_ID=`cat bucket.txt | sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;bucket_id&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin metadata get bucket.instance:my-new-bucket:&lt;span class=&quot;variable&quot;&gt;$BUCKET_ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还可以修改实例的信息并PUT回去，具体做法可参见&lt;a href=&quot;http://blog.widodh.nl/2013/11/changing-the-region-of-a-rgw-bucket/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Changing the region of a RGW bucket》&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Swift&quot;&gt;&lt;a href=&quot;#Swift&quot; class=&quot;headerlink&quot; title=&quot;Swift&quot;&gt;&lt;/a&gt;Swift&lt;/h3&gt;&lt;p&gt;接下来测试swift。对于swift来说，它的存储模型是这样的：一个账号（account）里可以有多个容器（container），容器里可以有许多个键值对，字典里的值称为对象（object）。账号和容器被存储在SQLite数据库里，而对象是以文件方式存储的。&lt;/p&gt;
&lt;p&gt;首先需要创建swift用户并生成secret：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin subuser create --uid=testuser --subuser=testuser:swift --access=full&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; ceph radosgw-admin key create --subuser=testuser:swift --key-type=swift --gen-secret | tee subuser.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PASSWORD=`sed -n &lt;span class=&quot;string&quot;&gt;&#39;/testuser:swift/&amp;#123;N;p;&amp;#125;&#39;&lt;/span&gt; subuser.txt | sed -n &lt;span class=&quot;string&quot;&gt;&#39;s/ *&quot;secret_key&quot;: &quot;\(.*\)&quot;/\1/p&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以用以下命令查看swift里所有的容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;应该能看到刚才测试s3接口时创建的&lt;code&gt;my-new-bucket&lt;/code&gt;，在这里s3的存储桶和swift的容器是同一个概念。接下来我们自己创建容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; post qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; list qinghua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建成功，里面没有文件。现在可以上传、下载文件试试：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World &amp;gt; hw.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; upload qinghua hw.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; list qinghua&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv hw.txt hw.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swift -A http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.111&lt;/span&gt;/auth/v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -U testuser:swift -K &lt;span class=&quot;variable&quot;&gt;$PASSWORD&lt;/span&gt; download qinghua hw.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat hw.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;搞定！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://ceph.com/&quot;&gt;Ceph&lt;/a&gt;是一个高性能的PB级分布式文件系统。它能够在一个系统中提供对象存储、块存储和文件存储。对如何加载使用这些存储感兴趣的话可以参考&lt;a href=&quot;/ceph-demo&quot;&gt;《用容器轻松搭建ceph实验环境》&lt;/a&gt;。它还可以通过RADOSGW来实现S3和OpenStack Swift存储接口。不管RADOSGW还是块存储或文件存储都是基于对象存储来提供服务。本文的主要内容是如何通过RADOSGW来暴露S3和SWIFT接口。由于Docker Registry在2.4版本&lt;a href=&quot;https://github.com/docker/distribution/commit/5967d333425a8dd5d36c5bb456098839654d38af&quot;&gt;移除了对rados的支持&lt;/a&gt;，所以如果使用ceph作为后端存储就需要利用RADOSGW了。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="ceph" scheme="http://qinghua.github.io/tags/ceph/"/>
    
      <category term="openstack swift" scheme="http://qinghua.github.io/tags/openstack-swift/"/>
    
      <category term="radosgw" scheme="http://qinghua.github.io/tags/radosgw/"/>
    
      <category term="s3" scheme="http://qinghua.github.io/tags/s3/"/>
    
      <category term="storage" scheme="http://qinghua.github.io/tags/storage/"/>
    
  </entry>
  
  <entry>
    <title>用容器轻松搭建Rancher运行环境</title>
    <link href="http://qinghua.github.io/rancher/"/>
    <id>http://qinghua.github.io/rancher/</id>
    <published>2016-04-09T03:31:01.000Z</published>
    <updated>2016-04-09T07:48:31.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://rancher.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rancher&lt;/a&gt;是开源的容器平台，功能齐全，部署简单，支持Kubernets和Docker Swarm。它把自己定位在持续交付流水线上的后半段上，如下图所示:&lt;br&gt;&lt;img src=&quot;/img/rancher-feature.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年3月底刚刚发布了1.0正式版。借着这个契机，下面就让我们用容器来部署一套Rancher环境试试它的功能吧！&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配三台虚拟机，一台叫做&lt;strong&gt;server&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;；另两台分别是&lt;strong&gt;agent1&lt;/strong&gt;和&lt;strong&gt;agent2&lt;/strong&gt;，它们的IP是&lt;strong&gt;192.168.33.18&lt;/strong&gt;和&lt;strong&gt;192.168.33.19&lt;/strong&gt;。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.17&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;agent1&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;agent1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.18&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;agent2&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;agent2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.19&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后分别在三个终端运行以下命令启动并连接三台虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh agent1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 3&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh agent2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想要在接下来的步骤中获得良好体验，建议先下载以下镜像：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;server agent1 agent2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull rancher/server:v1.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull rancher/agent:v0.&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull rancher/agent-instance:v0.&lt;span class=&quot;number&quot;&gt;8.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull tomcat:&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;-jre8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull busybox:&lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull mysql:&lt;span class=&quot;number&quot;&gt;5.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull wordpress:&lt;span class=&quot;number&quot;&gt;4.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker pull rancher/etcd:v2.&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;启动Rancher服务器相当简单，一条命令而已：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;server&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --name=rs \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -p &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rancher/server:v1.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;稍待片刻，就可以访问Rancher主页&lt;a href=&quot;http://192.168.33.17:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.17:8080&lt;/a&gt;了：&lt;br&gt;&lt;img src=&quot;/img/rancher-applications.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;不像其他的web应用一开始没有数据时都是显示一片空白，Rancher展示了非常丰富的信息来帮助我们尽快上手。菜单上的&lt;strong&gt;ADMIN&lt;/strong&gt;有个红色的感叹号，这是因为我们刚启动服务器，还没有配置认证信息。点击这个感叹号就可以开始配置，除了本地设置用户名密码以外，还支持与AD、GitHub和LDAP的集成。这里我们更加关注容器管理部分，对鉴权有兴趣的朋友可以自行尝试认证信息的配置。点击菜单上的&lt;strong&gt;INFRASTRUCTURE&lt;/strong&gt;并点击&lt;strong&gt;Add Host&lt;/strong&gt;按钮，可以增加一个agent host。由于现在我们用的是内部IP&lt;strong&gt;192.168.33.17&lt;/strong&gt;，Rancher会提示我们是否真的连接到这里，不用管它直接点击&lt;strong&gt;Save&lt;/strong&gt;按钮就可以了。复制下一个页面中第5步的命令，在agent上1运行即可。在我的虚拟机上是这样子的：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v0.&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt; http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/v1/scripts/B9EAC6780C8126FB739E:&lt;span class=&quot;number&quot;&gt;1460016000000&lt;/span&gt;:Adj9D4Qp3smSmIscdUVT0JSCPdM&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以点击&lt;strong&gt;Close&lt;/strong&gt;，稍待片刻，就能看到agent1已经被加入到Hosts里了：&lt;br&gt;&lt;img src=&quot;/img/rancher-infrastructure.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在agent2上重复执行一遍命令，把agent2也加入到Hosts里。Rancher的server和agent都是设置为&lt;code&gt;restart=true&lt;/code&gt;的，所以重启虚拟机之类的行为也不会影响Rancher正常工作。现在看到的Hosts应该是这样的：&lt;br&gt;&lt;img src=&quot;/img/rancher-hosts.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u8FD0_u884C_u5BB9_u5668&quot;&gt;&lt;a href=&quot;#u8FD0_u884C_u5BB9_u5668&quot; class=&quot;headerlink&quot; title=&quot;运行容器&quot;&gt;&lt;/a&gt;运行容器&lt;/h2&gt;&lt;p&gt;接下来运行一个tomcat容器试试。点击agent1上的&lt;strong&gt;Add Container&lt;/strong&gt;按钮，如下填入参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：tomcat&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select Image&lt;/strong&gt;：tomcat:8.0.30-jre8&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public (on Host) IP/Port&lt;/strong&gt;：8080&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Private (in Container) Port&lt;/strong&gt;：8080&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后点击最下方的&lt;strong&gt;Create&lt;/strong&gt;按钮：&lt;br&gt;&lt;img src=&quot;/img/rancher-add-container.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;过一段时间，便能看到如下的容器已经启动完成了：&lt;br&gt;&lt;img src=&quot;/img/rancher-standalone-container.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之所以需要等一段时间，是因为它像kubernetes一样，需要给容器配一个网络代理Network Agent，不过功能要复杂得多，拥有跨网络通信、健康检查等功能。当前版本下使用的网络代理镜像为&lt;code&gt;rancher/agent-instance:v0.8.1&lt;/code&gt;。在agent1上运行&lt;code&gt;docker ps&lt;/code&gt;便能看到这两个容器。还可以通过&lt;a href=&quot;http://192.168.33.18:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:8080&lt;/a&gt;来访问tomcat服务。在页面上点击某个容器比如tomcat，可以看到容器的基本信息和一些基本监控数据。如图：&lt;br&gt;&lt;img src=&quot;/img/rancher-tomcat-container.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;自行启动的容器也能被Rancher监控到。我们来启动一个小容器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --name=bb busybox:&lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; sleep &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在界面上便能看到这个bb容器已经启动完成了：&lt;br&gt;&lt;img src=&quot;/img/rancher-self-container.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过Rancher启动的容器IP是在&lt;code&gt;10.42.*.*&lt;/code&gt;区间的，自行启动的bb容器的IP是在它之外的。如果想用相同IP段，可以使用以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; --name=bb2 --label io.rancher.container.network=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; busybox:&lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; sleep &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在界面上可以看到bb2容器的IP已经落入区间了：&lt;br&gt;&lt;img src=&quot;/img/rancher-self-container2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u8FD0_u884C_u5E94_u7528&quot;&gt;&lt;a href=&quot;#u8FD0_u884C_u5E94_u7528&quot; class=&quot;headerlink&quot; title=&quot;运行应用&quot;&gt;&lt;/a&gt;运行应用&lt;/h2&gt;&lt;p&gt;上面我们在指定的虚拟机上创建容器。不过对于一个真实的网络应用，我们并不关心它运行在哪里，只关心服务地址罢了。下面我们来创建一个这样的WordPress应用。它包含一个MySQL数据库，两个WordPress实例和一套负载均衡。首先点击&lt;strong&gt;APPLICATIONS&lt;/strong&gt;，然后点击Default的&lt;strong&gt;Add Service&lt;/strong&gt;。填入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：database&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select Image&lt;/strong&gt;：mysql:5.7.10&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Always pull image before creating&lt;/strong&gt;：false&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Environment Vars&lt;/strong&gt;：MYSQL_ROOT_PASSWORD=pass1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后点击&lt;strong&gt;Create&lt;/strong&gt;来创建这个MySQL服务。接下来是WordPress，还是像MySQL那样新建服务。填入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt;：2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：mywordpress&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select Image&lt;/strong&gt;：wordpress:4.4.2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Always pull image before creating&lt;/strong&gt;：false&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service Links&lt;/strong&gt;：database &amp;gt; mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后点击&lt;strong&gt;Create&lt;/strong&gt;来创建这个WordPress服务。最后是负载均衡，点击&lt;strong&gt;Add Service&lt;/strong&gt;旁边的向下箭头，选择&lt;strong&gt;Add Load Balancer&lt;/strong&gt;。填入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt;：Always run one instance of this container on every host&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：wordpresslb&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source IP/Port&lt;/strong&gt;：80&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Default Target Port&lt;/strong&gt;：80&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Target Service&lt;/strong&gt;：mywordpress&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击&lt;strong&gt;Save&lt;/strong&gt;来创建这个负载均衡。稍待片刻，就可以看到wordpresslb变为Active状态了，然后就可以访问&lt;a href=&quot;http://192.168.33.18&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18&lt;/a&gt;或&lt;a href=&quot;http://192.168.33.19&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.19&lt;/a&gt;来使用WordPress服务了：&lt;br&gt;&lt;img src=&quot;/img/wordpress.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Rancher负载均衡使用和网络代理一样的&lt;code&gt;rancher/agent-instance&lt;/code&gt;镜像。它内置了HAProxy，默认使用轮询。&lt;/p&gt;
&lt;h2 id=&quot;u9884_u7F6E_u6A21_u677F&quot;&gt;&lt;a href=&quot;#u9884_u7F6E_u6A21_u677F&quot; class=&quot;headerlink&quot; title=&quot;预置模板&quot;&gt;&lt;/a&gt;预置模板&lt;/h2&gt;&lt;p&gt;点击&lt;strong&gt;CATALOG&lt;/strong&gt;，便能看到Rancher为我们预置了一系列的应用模板。我们用个小镜像Etcd试试。首先找到Etcd的图标：&lt;br&gt;&lt;img src=&quot;/img/rancher-etcd.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;View Details&lt;/strong&gt;进入etcd详细页面，滚动到最下方。由于我们只有两个agent，在&lt;strong&gt;Number of Nodes&lt;/strong&gt;里填入1，然后点击&lt;strong&gt;Launch&lt;/strong&gt;按钮。很快，一个etcd服务就启动起来了。按如下参数给这个服务增加一套负载均衡：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt;：Always run one instance of this container on every host&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;：etcdlb&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source IP/Port&lt;/strong&gt;：2379&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protocol&lt;/strong&gt;：tcp&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Default Target Port&lt;/strong&gt;：2379&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Target Service&lt;/strong&gt;：etcd&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可以点击&lt;strong&gt;Preview&lt;/strong&gt;来查看&lt;code&gt;docker-compose.yml&lt;/code&gt;和&lt;code&gt;rancher-compose.yml&lt;/code&gt;文件，里面也有比较详细的注释。&lt;code&gt;docker-compose.yml&lt;/code&gt;不必多说，&lt;code&gt;rancher-compose.yml&lt;/code&gt;类似于它但更小一些。可以在任何Rancher页面的右下方点击&lt;strong&gt;Download CLI&lt;/strong&gt;来下载rancher compose命令行工具，这样就可以通过命令行而非在网页上点来点去来管理容器和服务了。最后点击&lt;strong&gt;Save&lt;/strong&gt;并等待负载均衡启动完成，就可以访问啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -L http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2379&lt;/span&gt;/version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -L http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2379&lt;/span&gt;/version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;太方便了，简直是爽得不能不能的。最后送上全家福大图一张：&lt;br&gt;&lt;img src=&quot;/img/rancher-applications-stack.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://rancher.com/&quot;&gt;Rancher&lt;/a&gt;是开源的容器平台，功能齐全，部署简单，支持Kubernets和Docker Swarm。它把自己定位在持续交付流水线上的后半段上，如下图所示:&lt;br&gt;&lt;img src=&quot;/img/rancher-feature.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年3月底刚刚发布了1.0正式版。借着这个契机，下面就让我们用容器来部署一套Rancher环境试试它的功能吧！&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="rancher" scheme="http://qinghua.github.io/tags/rancher/"/>
    
  </entry>
  
  <entry>
    <title>Mac上的git图形工具GitUp</title>
    <link href="http://qinghua.github.io/gitup/"/>
    <id>http://qinghua.github.io/gitup/</id>
    <published>2016-04-06T13:43:21.000Z</published>
    <updated>2016-04-06T14:41:12.000Z</updated>
    
    <content type="html">&lt;p&gt;已经11岁的&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;现在应该算是最流行的版本管理系统了。不过它的上手过程略令人感伤：为什么要用&lt;code&gt;git reset HEAD&lt;/code&gt;而不是&lt;code&gt;git unadd/unstage&lt;/code&gt;？Mac的朋友们有福了，&lt;a href=&quot;http://gitup.co/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitUp&lt;/a&gt;来拯救懒程序员们啦。它提供了一个简约而不简单的界面，让我们可以凭直觉轻松地打出git组合拳来处理各种状况。在2016年4月的&lt;a href=&quot;https://www.thoughtworks.com/radar/tools/gitup&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ThoughtWorks技术雷达&lt;/a&gt;上，它处于试验阶段，也就是值得追求，建议尝试。让我们来看看它有什么能力吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;GitUp只是一个小应用程序，下载下来就能用啦：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir gitup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; gitup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://s3-us-west-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.amazonaws.com/gitup-builds/stable/GitUp.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip GitUp.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;open GitUp.app&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开GitUp就能看见下面的界面：&lt;br&gt;&lt;img src=&quot;/img/gitup-welcome.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后我们新建一个git repo：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; a &amp;gt; a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; b &amp;gt; b.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; c &amp;gt; c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add b.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;bb&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u67E5_u770B_u5386_u53F2&quot;&gt;&lt;a href=&quot;#u67E5_u770B_u5386_u53F2&quot; class=&quot;headerlink&quot; title=&quot;查看历史&quot;&gt;&lt;/a&gt;查看历史&lt;/h2&gt;&lt;p&gt;在刚才的GitUp欢迎界面上选择新建的test文件夹，就能看到简洁的版本历史图，有三个commit，其中两个是小圆点，一个是现在所处的HEAD。随便单击选择一个commit：&lt;br&gt;&lt;img src=&quot;/img/gitup-map.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到这个commit的信息，按上下键可以选择其它commit，按空格切换commit详细页面。在commit上右击，便能看到所有支持的操作。我们可以先右击中间的commit，选择&lt;strong&gt;Edit Message&lt;/strong&gt;把先前的提交消息”bb”改成”b”。很简单吧！比输命令易用多了。之后在HEAD上右击并选择&lt;strong&gt;Create Branch&lt;/strong&gt;来新建一个分支，分支名为temp。然后就能看到下图：&lt;br&gt;&lt;img src=&quot;/img/gitup-new-branch.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以在终端中运行&lt;code&gt;git branch&lt;/code&gt;来确认自己在temp分支上。然后加点代码：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; d &amp;gt;&amp;gt; c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat c.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时切回GitUp的界面，选择中间的视图，如下图所示：&lt;br&gt;&lt;img src=&quot;/img/gitup-commit.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;看起来很像&lt;code&gt;git gui&lt;/code&gt;吧。双击&lt;code&gt;c.txt&lt;/code&gt;就可以切换文件的状态。输入提交消息&lt;code&gt;cd&lt;/code&gt;，然后点击&lt;strong&gt;Commit&lt;/strong&gt;按钮来提交。于是就能看到下图：&lt;br&gt;&lt;img src=&quot;/img/gitup-new-branch-commit.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;双击master的小黄点就可以切换到master分支上了。然后也加点代码：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; e &amp;gt;&amp;gt; c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;ce&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这回的图变成这样了：&lt;br&gt;&lt;img src=&quot;/img/gitup-master-commit.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5408_u5E76_u548C_u884D_u5408&quot;&gt;&lt;a href=&quot;#u5408_u5E76_u548C_u884D_u5408&quot; class=&quot;headerlink&quot; title=&quot;合并和衍合&quot;&gt;&lt;/a&gt;合并和衍合&lt;/h2&gt;&lt;p&gt;我们来试一下合并分支。右击temp上的小圆圈，选择&lt;strong&gt;Merge into Current Branch&lt;/strong&gt;，然后点击&lt;strong&gt;Merge&lt;/strong&gt;按钮就能看到冲突了。可以使用&lt;strong&gt;Open with Default Editor&lt;/strong&gt;来自己解决冲突，也可以使用&lt;strong&gt;Resolve in Merge Tool&lt;/strong&gt;来解决。如果是前者，可以注意一个小细节：这里的冲突提示是ours和theirs，看起来人性化了不少。合并完成后，点击&lt;strong&gt;Mark as Resolved&lt;/strong&gt;，然后&lt;strong&gt;Commit&lt;/strong&gt;，就可以看到图变成这样了：&lt;br&gt;&lt;img src=&quot;/img/gitup-merge.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;衍合也是类似。GitUp提供了一个逆天功能Command+Z，可以快速回退到上一次操作（再次前进是Command+Shift+Z）。这样我们很轻松就能再来一次衍合。右击temp上的小圆圈，选择&lt;strong&gt;Rebase Current Branch onto Here&lt;/strong&gt;，剩下的和合并分支类似。提交之后，就可以看到图变成这样了：&lt;br&gt;&lt;img src=&quot;/img/gitup-rebase.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;GitUp还提供了强大的快照功能。我们可以点击右上方的时钟按钮来选择自己想要的快照，就像Time Machine似的。如下图：&lt;br&gt;&lt;img src=&quot;/img/gitup-snapshot.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u67E5_u770Bstash&quot;&gt;&lt;a href=&quot;#u67E5_u770Bstash&quot; class=&quot;headerlink&quot; title=&quot;查看stash&quot;&gt;&lt;/a&gt;查看stash&lt;/h2&gt;&lt;p&gt;那么第三个视图是干什么的呢？我们先stash一段代码：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; f &amp;gt;&amp;gt; c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat c.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; g &amp;gt;&amp;gt; c.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开第三个视图，原来是stash列表，这回可以很容易看清楚了。也可以在这里stash：点击左下方的加号按钮，输入一个消息然后&lt;strong&gt;Save Stash&lt;/strong&gt;，就可以看到下图：&lt;br&gt;&lt;img src=&quot;/img/gitup-stashes.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还可以在这里轻松地&lt;strong&gt;Apply&lt;/strong&gt;想要的stash，这个可视化可以有。可惜还是不支持选择特定文件stash。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;已经11岁的&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;现在应该算是最流行的版本管理系统了。不过它的上手过程略令人感伤：为什么要用&lt;code&gt;git reset HEAD&lt;/code&gt;而不是&lt;code&gt;git unadd/unstage&lt;/code&gt;？Mac的朋友们有福了，&lt;a href=&quot;http://gitup.co/&quot;&gt;GitUp&lt;/a&gt;来拯救懒程序员们啦。它提供了一个简约而不简单的界面，让我们可以凭直觉轻松地打出git组合拳来处理各种状况。在2016年4月的&lt;a href=&quot;https://www.thoughtworks.com/radar/tools/gitup&quot;&gt;ThoughtWorks技术雷达&lt;/a&gt;上，它处于试验阶段，也就是值得追求，建议尝试。让我们来看看它有什么能力吧。&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://qinghua.github.io/categories/tool/"/>
    
    
      <category term="GitUp" scheme="http://qinghua.github.io/tags/GitUp/"/>
    
      <category term="git" scheme="http://qinghua.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>用容器轻松搭建Prometheus运行环境</title>
    <link href="http://qinghua.github.io/prometheus/"/>
    <id>http://qinghua.github.io/prometheus/</id>
    <published>2016-03-30T11:01:01.000Z</published>
    <updated>2016-03-31T05:50:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://prometheus.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Prometheus&lt;/a&gt;是一个开源的监控解决方案，包括数据采集、汇聚、存储、可视化、监控、告警等。除了基本的监控数据，也支持通过自定义exporter来获取自己想要的数据。本文从零开始用容器搭建一个prometheus环境，并介绍一些基本功能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下代码，相当于给它分配一台IP是&lt;strong&gt;192.168.33.18&lt;/strong&gt;的虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.18&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后在终端运行以下命令启动并连接虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;Prometheus的环境搭建起来非常简单，只要一个docker镜像即可。绿色的压缩包安装方式可以参考&lt;a href=&quot;https://prometheus.io/docs/introduction/getting_started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。此外还需要一个配置文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;prometheus.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  scrape_interval: &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  external_labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    monitor: &lt;span class=&quot;string&quot;&gt;&#39;codelab-monitor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrape_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - job_name: &lt;span class=&quot;string&quot;&gt;&#39;prometheus&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scrape_interval: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target_groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - targets: [&lt;span class=&quot;string&quot;&gt;&#39;localhost:9090&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /etc/prometheus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mv prometheus.yml /etc/prometheus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置文件中，&lt;code&gt;scrape_interval&lt;/code&gt;指的是数据获取间隔，&lt;code&gt;prometheus&lt;/code&gt;这个任务里的&lt;code&gt;scrape_interval&lt;/code&gt;将会在这个任务里覆盖掉默认的&lt;code&gt;global&lt;/code&gt;全局值，也就是这个任务每5秒钟获取一次数据，其它任务则是每15秒钟。完整的配置文件格式，请参考&lt;a href=&quot;http://prometheus.io/docs/operating/configuration/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。接下来启动Prometheus：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --name=prometheus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --publish=&lt;span class=&quot;number&quot;&gt;9090&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9090&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /var/prometheus/storage:/prometheus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prom/prometheus:&lt;span class=&quot;number&quot;&gt;0.17&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动完成后，将会在&lt;a href=&quot;http://192.168.33.18:9090&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:9090&lt;/a&gt;看到prometheus的首页：&lt;br&gt;&lt;img src=&quot;/img/prometheus-home.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6570_u636E_u6536_u96C6&quot;&gt;&lt;a href=&quot;#u6570_u636E_u6536_u96C6&quot; class=&quot;headerlink&quot; title=&quot;数据收集&quot;&gt;&lt;/a&gt;数据收集&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;http://192.168.33.18:9090/metrics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:9090/metrics&lt;/a&gt;可以看到prometheus收集到的数据。其中有一个&lt;code&gt;prometheus_target_interval_length_seconds&lt;/code&gt;，表示真实的数据获取间隔。在prometheus首页输入它并回车，就可以看到一系列的数据，它们有着不同的quantile，从0.01至0.99不等。0.99的意思是有99%的数据都在这个值以内。如果我们只关心这个数，我们可以输入&lt;code&gt;prometheus_target_interval_length_seconds{quantile=&amp;quot;0.99&amp;quot;}&lt;/code&gt;来查看。查询还支持函数，比如&lt;code&gt;count(prometheus_target_interval_length_seconds)&lt;/code&gt;可以查询数量。完整的表达式可以参考&lt;a href=&quot;https://prometheus.io/docs/querying/basics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Console&lt;/strong&gt;旁边的&lt;strong&gt;Graph&lt;/strong&gt;标签就可以看见时序图了：&lt;br&gt;&lt;img src=&quot;/img/prometheus-graph.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以随意选择指标和函数试一试，比如&lt;code&gt;rate(prometheus_local_storage_chunk_ops_total[1m])&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;Exporter&quot;&gt;&lt;a href=&quot;#Exporter&quot; class=&quot;headerlink&quot; title=&quot;Exporter&quot;&gt;&lt;/a&gt;Exporter&lt;/h2&gt;&lt;p&gt;Prometheus支持官方/非官方的许多种&lt;a href=&quot;https://prometheus.io/docs/instrumenting/exporters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;exporter&lt;/a&gt;，如HAProxy，Jenkins，MySQL等，也有一些软件直接支持Prometheus而无需exporter，如Etcd，Kubernetes等。我们试一下node exporter：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=ne \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -p &lt;span class=&quot;number&quot;&gt;9100&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9100&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  prom/node-exporter&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Node exporter暴露的端口是9100，所以我们需要修改一下prometheus的配置文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;prometheus.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  scrape_interval: &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  external_labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    monitor: &lt;span class=&quot;string&quot;&gt;&#39;codelab-monitor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrape_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - job_name: &lt;span class=&quot;string&quot;&gt;&#39;node&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scrape_interval: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target_groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - targets: [&lt;span class=&quot;string&quot;&gt;&#39;192.168.33.18:9100&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp prometheus.yml /etc/prometheus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重启prometheus：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker stop prometheus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo rm -rf /var/prometheus/storage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker start prometheus&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样在页面上就可以选择节点的一些指标了。也可以访问&lt;a href=&quot;http://192.168.33.18:9100/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:9100/&lt;/a&gt;来直接查看Exporter的指标。&lt;/p&gt;
&lt;h2 id=&quot;Push_Gateway&quot;&gt;&lt;a href=&quot;#Push_Gateway&quot; class=&quot;headerlink&quot; title=&quot;Push Gateway&quot;&gt;&lt;/a&gt;Push Gateway&lt;/h2&gt;&lt;p&gt;Prometheus采集数据是用的pull也就是拉模型，这从我们刚才设置的5秒参数就能看出来。但是有些数据并不适合采用这样的方式，对这样的数据可以使用Push Gateway服务。它就相当于一个缓存，当数据采集完成之后，就上传到这里，由Prometheus稍后再pull过来。我们来试一下，首先启动Push Gateway：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=pg \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -p &lt;span class=&quot;number&quot;&gt;9091&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9091&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  prom/pushgateway&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以访问&lt;a href=&quot;http://192.168.33.18:9091/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:9091/&lt;/a&gt;来查看它的页面。下个命令将会往Push Gateway上传数据：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;some_metric 3.14&quot;&lt;/span&gt; | curl --data-binary @- http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9091&lt;/span&gt;/metrics/job/some_job&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果是酱紫滴：&lt;br&gt;&lt;img src=&quot;/img/prometheus-push-gateway.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而在Prometheus的配置文件里，只要把端口换成&lt;code&gt;9100&lt;/code&gt;便能采集到Push Gateway的数据了。&lt;/p&gt;
&lt;h2 id=&quot;Grafana&quot;&gt;&lt;a href=&quot;#Grafana&quot; class=&quot;headerlink&quot; title=&quot;Grafana&quot;&gt;&lt;/a&gt;Grafana&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://prometheus.io/docs/visualization/grafana/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grafana&lt;/a&gt;是目前比较流行的监控可视化UI，它从2.5.0版开始直接支持Prometheus的数据。我们来试一下。首先启动grafana：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name grafana \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -p &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grafana/grafana:&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开&lt;a href=&quot;http://192.168.33.18:3000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:3000/&lt;/a&gt;，就能看到grafana的登录页面了。输入默认的admin/admin登录grafana。选择左侧的&lt;strong&gt;Data Sources&lt;/strong&gt;，然后点击上面的&lt;strong&gt;Add new&lt;/strong&gt;按钮，便可以把prometheus作为数据源导入grafana：&lt;br&gt;&lt;img src=&quot;/img/grafana-prometheus-data-source.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入下面的值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name：prometheus&lt;/li&gt;
&lt;li&gt;Default：true&lt;/li&gt;
&lt;li&gt;Type：Prometheus&lt;/li&gt;
&lt;li&gt;Url：&lt;a href=&quot;http://192.168.33.18:9090/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:9090/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后点击&lt;strong&gt;Add&lt;/strong&gt;按钮。之后会出来一个&lt;strong&gt;Test Connection&lt;/strong&gt;的按钮，点击它便可以收到&lt;strong&gt;Data source is working&lt;/strong&gt;的消息。点击左边的&lt;strong&gt;Dashboards&lt;/strong&gt;回到主页，点击上面的&lt;strong&gt;Home&lt;/strong&gt;，选择&lt;strong&gt;+ New&lt;/strong&gt;，会出来一个绿色的小竖条，点击它便会弹出来一个菜单：&lt;br&gt;&lt;img src=&quot;/img/grafana-dashboard-menu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;strong&gt;Add Panel&lt;/strong&gt;和&lt;strong&gt;Graph&lt;/strong&gt;，便会出来一个图。然后就可以在&lt;strong&gt;Query&lt;/strong&gt;里输入prometheus支持的查询了：&lt;br&gt;&lt;img src=&quot;/img/grafana-prometheus-graph.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt;是一个开源的监控解决方案，包括数据采集、汇聚、存储、可视化、监控、告警等。除了基本的监控数据，也支持通过自定义exporter来获取自己想要的数据。本文从零开始用容器搭建一个prometheus环境，并介绍一些基本功能。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="prometheus" scheme="http://qinghua.github.io/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>TOSCA简介</title>
    <link href="http://qinghua.github.io/tosca/"/>
    <id>http://qinghua.github.io/tosca/</id>
    <published>2016-03-28T11:29:04.000Z</published>
    <updated>2016-03-29T09:35:22.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.oasis-open.org/committees/tosca/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TOSCA&lt;/a&gt;（Topology and Orchestration Specification for Cloud Applications）是由OASIS组织制定的云应用拓扑编排规范。通俗地说，就是制定了一个标准，用来描述云平台上应用的拓扑结构。目前支持XML和YAML，Cloudiy的蓝图就是基于这个规范而来。这个规范比较庞大，本文尽量浓缩了&lt;a href=&quot;http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/TOSCA-Simple-Profile-YAML-v1.0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TOSCA的YAML版&lt;/a&gt;前两章，以便用尽量少的时间了解尽量多的规范内容。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u4ECB&quot;&gt;&lt;a href=&quot;#u7B80_u4ECB&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;TOSCA的基本概念只有两个：节点（node）和关系（relationship）。节点有许多类型，可以是一台服务器，一个网络，一个计算节点等等。关系描述了节点之间是如何连接的。举个栗子：一个nodejs应用（节点）部署在（关系）名为host的主机（节点）上。节点和关系都可以通过程序来扩展和实现。&lt;/p&gt;
&lt;p&gt;目前它的开源实现有OpenStack (Heat-Translator，Tacker，Senlin)，Alien4Cloud，Cloudify等。&lt;/p&gt;
&lt;h2 id=&quot;u793A_u4F8B&quot;&gt;&lt;a href=&quot;#u793A_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h2&gt;&lt;h3 id=&quot;Hello_World&quot;&gt;&lt;a href=&quot;#Hello_World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h3&gt;&lt;p&gt;首先登场的是广大程序猿和攻城狮们都喜闻乐见的Hello World，但是其实里面并没有Hello World，只是比较简单而已。先看下面这段描述文件：&lt;/p&gt;
&lt;pre&gt;
tosca_definitions_version: tosca_simple_yaml_1_0

description: Template for deploying a single server with predefined properties.

topology_template:
  node_templates:
    my_server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 10 GB
            mem_size: 4096 MB
        os:
          properties:
            architecture: x86_64
            type: linux 
            distribution: rhel 
            version: 6.5 
&lt;/pre&gt;

&lt;p&gt;除了TOSCA的版本&lt;code&gt;tosca_definitions_version&lt;/code&gt;和描述信息&lt;code&gt;description&lt;/code&gt;以外，就是这个&lt;code&gt;topology_template&lt;/code&gt;了。这里我们看到有一个名为&lt;code&gt;my_server&lt;/code&gt;的节点，它的类型是&lt;code&gt;tosca.nodes.Compute&lt;/code&gt;。这个类型预置了两个&lt;code&gt;capabilities&lt;/code&gt;信息，一个是&lt;code&gt;host&lt;/code&gt;，定义了硬件信息；另一个是&lt;code&gt;os&lt;/code&gt;，定义了操作系统信息。&lt;/p&gt;
&lt;h3 id=&quot;u8F93_u5165_u8F93_u51FA&quot;&gt;&lt;a href=&quot;#u8F93_u5165_u8F93_u51FA&quot; class=&quot;headerlink&quot; title=&quot;输入输出&quot;&gt;&lt;/a&gt;输入输出&lt;/h3&gt;&lt;p&gt;再看看下面这个描述文件：&lt;/p&gt;
&lt;pre&gt;
topology_template:
  &lt;b style=&quot;color:magenta&quot;&gt;inputs&lt;/b&gt;:
    cpus:
      type: integer
      description: Number of CPUs for the server.
      constraints:
        - valid_values: [ 1, 2, 4, 8 ]

  node_templates:
    my_server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: 2048  MB
            disk_size: 10 GB

  &lt;b style=&quot;color:magenta&quot;&gt;outputs&lt;/b&gt;:
    server_ip:
      description: The private IP address of the provisioned server.
      value: { get_attribute: [ my_server, private_address ] }
&lt;/pre&gt;

&lt;p&gt;这里的&lt;code&gt;inputs&lt;/code&gt;和&lt;code&gt;outputs&lt;/code&gt;分别定义了输入和输出。输入的&lt;code&gt;cpus&lt;/code&gt;是在1，2，4和8中的一个整数，而输出的&lt;code&gt;server_ip&lt;/code&gt;就是&lt;code&gt;my_server&lt;/code&gt;这个节点的&lt;code&gt;private_address&lt;/code&gt;也就是私有IP地址。另外一点是TOSCA提供了一些内置函数，在上面这个文件中使用了&lt;code&gt;get_input&lt;/code&gt;和&lt;code&gt;get_attribute&lt;/code&gt;。输入参数可以通过&lt;code&gt;get_input&lt;/code&gt;被使用。&lt;/p&gt;
&lt;h3 id=&quot;u5B89_u88C5_u8F6F_u4EF6&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u8F6F_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;安装软件&quot;&gt;&lt;/a&gt;安装软件&lt;/h3&gt;&lt;p&gt;第三个描述文件如下：&lt;/p&gt;
&lt;pre&gt;
topology_template:
  inputs:
    # 略

  node_templates:
    mysql:
      type: &lt;b style=&quot;color:magenta&quot;&gt;tosca.nodes.DBMS.MySQL&lt;/b&gt;
      properties:
        root_password: { get_input: my_mysql_rootpw }
        port: { get_input: my_mysql_port }
      &lt;b style=&quot;color:magenta&quot;&gt;requirements&lt;/b&gt;:
        - host: db_server

    db_server:
      type: tosca.nodes.Compute
      capabilities:
        # 略
&lt;/pre&gt;

&lt;p&gt;我们看到了一个新的节点类型：&lt;code&gt;tosca.nodes.DBMS.MySQL&lt;/code&gt;。这个类型允许接收&lt;code&gt;root_password&lt;/code&gt;和&lt;code&gt;port&lt;/code&gt;的参数。在&lt;code&gt;requirements&lt;/code&gt;里定义了&lt;code&gt;mysql&lt;/code&gt;这个节点需要被安装到&lt;code&gt;db_server&lt;/code&gt;这个节点上，这就是“关系”。如果只想表明依赖，比如说&lt;code&gt;service_a&lt;/code&gt;依赖于&lt;code&gt;service_b&lt;/code&gt;，也可以直接用&lt;code&gt;- dependency: service_b&lt;/code&gt;来描述。上面文件的拓扑结构如下图：&lt;br&gt;&lt;img src=&quot;http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/csprd02/TOSCA-Simple-Profile-YAML-v1.0-csprd02_files/image003.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u521D_u59CB_u5316_u6570_u636E_u5E93&quot;&gt;&lt;a href=&quot;#u521D_u59CB_u5316_u6570_u636E_u5E93&quot; class=&quot;headerlink&quot; title=&quot;初始化数据库&quot;&gt;&lt;/a&gt;初始化数据库&lt;/h3&gt;&lt;p&gt;第四个描述文件如下：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    my_db:
      type: &lt;b style=&quot;color:magenta&quot;&gt;tosca.nodes.Database.MySQL&lt;/b&gt;
      properties:
        name: { get_input: database_name }
        user: { get_input: database_user }
        password: { get_input: database_password }
        port: { get_input: database_port }
      &lt;b style=&quot;color:magenta&quot;&gt;artifacts&lt;/b&gt;:
        db_content:
          file: files/my_db_content.txt
          type: tosca.artifacts.File
      requirements:
        - host: mysql
      interfaces:
        &lt;b style=&quot;color:magenta&quot;&gt;Standard:
          create:
            implementation: db_create.sh&lt;/b&gt;
            inputs:
              db_data: { get_artifact: [ SELF, db_content ] }

    mysql:
      type: tosca.nodes.DBMS.MySQL
      properties:
        root_password: { get_input: mysql_rootpw }
        port: { get_input: mysql_port }
      requirements:
        - host: db_server

    db_server:
      # 略
&lt;/pre&gt;

&lt;p&gt;这里的&lt;code&gt;tosca.nodes.Database.MySQL&lt;/code&gt;表示一个MySQL数据库的实例。在&lt;code&gt;artifacts&lt;/code&gt;的&lt;code&gt;db_content&lt;/code&gt;里指定了一个文本文件，而这个文件将被&lt;code&gt;interfaces&lt;/code&gt;里的&lt;code&gt;Create&lt;/code&gt;所用，为&lt;code&gt;db_create.sh&lt;/code&gt;脚本提供数据。&lt;code&gt;Standard&lt;/code&gt;表示生命周期，可能会包含&lt;code&gt;configure&lt;/code&gt;、&lt;code&gt;start&lt;/code&gt;、&lt;code&gt;stop&lt;/code&gt;等各种操作，而&lt;code&gt;db_create.sh&lt;/code&gt;本身是对&lt;code&gt;tosca.nodes.Database.MySQL&lt;/code&gt;提供的默认&lt;code&gt;create&lt;/code&gt;操作的一个重写。如下图：&lt;br&gt;&lt;img src=&quot;http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/csprd02/TOSCA-Simple-Profile-YAML-v1.0-csprd02_files/image004.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u4E24_u5C42_u5E94_u7528&quot;&gt;&lt;a href=&quot;#u4E24_u5C42_u5E94_u7528&quot; class=&quot;headerlink&quot; title=&quot;两层应用&quot;&gt;&lt;/a&gt;两层应用&lt;/h3&gt;&lt;p&gt;再来看看第五个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    wordpress:
      type: tosca.nodes.WebApplication.WordPress
      properties:
        context_root: { get_input: context_root }
        admin_user: { get_input: wp_admin_username }
        admin_password: { get_input: wp_admin_password }
        db_host: { get_attribute: [ db_server, private_address ] }
      &lt;b style=&quot;color:magenta&quot;&gt;requirements:
        - host: apache
        - database_endpoint: wordpress_db&lt;/b&gt;
      interfaces:
        Standard:
          inputs:
            db_host: { get_attribute: [ db_server, private_address ] }
            db_port: { get_property: [ wordpress_db, port ] }
            db_name: { get_property: [ wordpress_db, name ] }
            db_user: { get_property: [ wordpress_db, user ] }
            db_password: { get_property: [ wordpress_db, password ] }  
    apache:
      type: tosca.nodes.WebServer.Apache
      properties:
        # 略
      &lt;b style=&quot;color:magenta&quot;&gt;requirements:
        - host: web_server&lt;/b&gt;
    web_server:
      type: tosca.nodes.Compute
      # 略

    wordpress_db:
      type: tosca.nodes.Database.MySQL
      # 略
    mysql:
      type: tosca.nodes.DBMS.MySQL
      # 略
    db_server:
      type: tosca.nodes.Compute
      # 略
&lt;/pre&gt;

&lt;p&gt;这个文件描述了一个很常见的拓扑结构：&lt;code&gt;mysql&lt;/code&gt;里有一个&lt;code&gt;wordpress_db&lt;/code&gt;，运行在&lt;code&gt;db_server&lt;/code&gt;上；&lt;code&gt;apache&lt;/code&gt;部署了一个&lt;code&gt;wordpress&lt;/code&gt;，运行在&lt;code&gt;web_server&lt;/code&gt;上。&lt;code&gt;wordpress&lt;/code&gt;需要&lt;code&gt;wordpress_db&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;u5173_u7CFB_u5B9A_u5236_u5316&quot;&gt;&lt;a href=&quot;#u5173_u7CFB_u5B9A_u5236_u5316&quot; class=&quot;headerlink&quot; title=&quot;关系定制化&quot;&gt;&lt;/a&gt;关系定制化&lt;/h3&gt;&lt;p&gt;第六个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    wordpress:
      type: tosca.nodes.WebApplication.WordPress
      properties:
        # 略
      requirements:
        - host: apache
        - database_endpoint:
            node: wordpress_db
            &lt;b style=&quot;color:magenta&quot;&gt;relationship: my.types.WordpressDbConnection&lt;/b&gt;
    wordpress_db:
      type: tosca.nodes.Database.MySQL
      properties:
        # 略
      requirements:
        - host: mysql
  &lt;b style=&quot;color:magenta&quot;&gt;relationship_templates:
    my.types.WordpressDbConnection:&lt;/b&gt;
      type: ConnectsTo
      interfaces:
        Configure:
          pre_configure_source: scripts/wp_db_configure.sh
&lt;/pre&gt;

&lt;p&gt;这里的关注点是&lt;code&gt;relationship&lt;/code&gt;里的&lt;code&gt;my.types.WordpressDbConnection&lt;/code&gt;。这是一个自定义的关系，在文件的下半部分描述了详细定义。它实际上是一个&lt;code&gt;ConnectsTo&lt;/code&gt;类型，为&lt;code&gt;pre_configure_source&lt;/code&gt;操作提供了一个自定义脚本。这个定义也可以单独提出一个文件，就像下面这样：&lt;/p&gt;
&lt;pre&gt;
tosca_definitions_version: tosca_simple_yaml_1_0

description: Definition of custom WordpressDbConnection relationship type

&lt;b style=&quot;color:magenta&quot;&gt;relationship_types:
  my.types.WordpressDbConnection:&lt;/b&gt;
    derived_from: tosca.relationships.ConnectsTo
    interfaces:
      Configure:
        pre_configure_source: scripts/wp_db_configure.sh
&lt;/pre&gt;

&lt;h3 id=&quot;u9650_u5B9A_u9700_u6C42_u8D44_u6E90&quot;&gt;&lt;a href=&quot;#u9650_u5B9A_u9700_u6C42_u8D44_u6E90&quot; class=&quot;headerlink&quot; title=&quot;限定需求资源&quot;&gt;&lt;/a&gt;限定需求资源&lt;/h3&gt;&lt;p&gt;再看一个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    mysql:
      type: tosca.nodes.DBMS.MySQL
      properties:
        # 略
      requirements:
        - host:
            &lt;b style=&quot;color:magenta&quot;&gt;node_filter&lt;/b&gt;:
              capabilities:
                - host:
                    properties:
                      - num_cpus: { &lt;b style=&quot;color:magenta&quot;&gt;in_range&lt;/b&gt;: [ 1, 4 ] }
                      - mem_size: { &lt;b style=&quot;color:magenta&quot;&gt;greater_or_equal&lt;/b&gt;: 2 GB }
                - os:
                    properties:
                      - architecture: { &lt;b style=&quot;color:magenta&quot;&gt;equal&lt;/b&gt;: x86_64 }
                      - type: linux
                      - distribution: ubuntu
&lt;/pre&gt;

&lt;p&gt;需要关注的是&lt;code&gt;node_filter&lt;/code&gt;。这里并没有指定mysql在哪个节点上启动，但是指定了一些节点信息，只有符合的节点才能够启动它。也可以抽出来做个模板：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    mysql:
      type: tosca.nodes.DBMS.MySQL
      properties:
        # 略
      requirements:
        - host: &lt;b style=&quot;color:magenta&quot;&gt;mysql_compute&lt;/b&gt;

    &lt;b style=&quot;color:magenta&quot;&gt;mysql_compute&lt;/b&gt;:
      type: Compute
      node_filter:
        capabilities:
          - host:
              properties:
                num_cpus: { equal: 2 }
                mem_size: { greater_or_equal: 2 GB }
          - os:
              properties:
                architecture: { equal: x86_64 }
                type: linux
                distribution: ubuntu
&lt;/pre&gt;

&lt;p&gt;数据库也可以使用：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    my_app:
      type: my.types.MyApplication
      properties:
        admin_user: { get_input: admin_username }
        admin_password: { get_input: admin_password }
        db_endpoint_url: { get_property: [SELF, &lt;b style=&quot;color:magenta&quot;&gt;database_endpoint&lt;/b&gt;, url_path ] }         
      requirements:
        - &lt;b style=&quot;color:magenta&quot;&gt;database_endpoint&lt;/b&gt;:
            node: my.types.nodes.MyDatabase
            &lt;b style=&quot;color:magenta&quot;&gt;node_filter&lt;/b&gt;:
              properties:
                - db_version: { greater_or_equal: 5.5 }
&lt;/pre&gt;

&lt;p&gt;上面指定了数据库的版本。也可以抽出来做个模板：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    my_app:
      type: my.types.MyApplication
      properties:
        admin_user: { get_input: admin_username }
        admin_password: { get_input: admin_password }
        db_endpoint_url: { get_property: [SELF, database_endpoint, url_path ] }         
      requirements:
        - database_endpoint: &lt;b style=&quot;color:magenta&quot;&gt;my_abstract_database&lt;/b&gt;
    &lt;b style=&quot;color:magenta&quot;&gt;my_abstract_database&lt;/b&gt;:
      type: my.types.nodes.MyDatabase
      properties:
        - db_version: { greater_or_equal: 5.5 }
&lt;/pre&gt;

&lt;h3 id=&quot;u8282_u70B9_u6A21_u677F_u66FF_u6362&quot;&gt;&lt;a href=&quot;#u8282_u70B9_u6A21_u677F_u66FF_u6362&quot; class=&quot;headerlink&quot; title=&quot;节点模板替换&quot;&gt;&lt;/a&gt;节点模板替换&lt;/h3&gt;&lt;p&gt;再看一个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    web_app:
      type: tosca.nodes.WebApplication.MyWebApp
      requirements:
        - host: web_server
        - database_endpoint: &lt;b style=&quot;color:magenta&quot;&gt;db&lt;/b&gt;

    web_server:
      type: tosca.nodes.WebServer
      requirements:
        - host: server

    server:
      type: tosca.nodes.Compute
      # 略

    &lt;b style=&quot;color:magenta&quot;&gt;db&lt;/b&gt;:
      # 这是一个抽象节点
      type: tosca.nodes.Database
      properties:
        user: my_db_user
        password: secret
        name: my_db_name
&lt;/pre&gt;

&lt;p&gt;这里的&lt;code&gt;db&lt;/code&gt;是一个抽象节点，可以被下面的描述文件所替换：&lt;/p&gt;
&lt;pre&gt;
topology_template:
  inputs:
    db_user:
      type: string
    # 略
  &lt;b style=&quot;color:magenta&quot;&gt;substitution_mappings:
    node_type: tosca.nodes.Database
    capabilities:
      database_endpoint: [ database, database_endpoint ]&lt;/b&gt;
  node_templates:
    database:
      type: tosca.nodes.Database
      properties:
        user: { get_input: db_user }
        # 略
      requirements:
        - host: dbms
    dbms:
      type: tosca.nodes.DBMS
      # 略
    server:
      type: tosca.nodes.Compute
      # 略
&lt;/pre&gt;

&lt;p&gt;这里的&lt;code&gt;database_endpoint&lt;/code&gt;是由&lt;code&gt;database&lt;/code&gt;节点提供的&lt;code&gt;database_endpoint&lt;/code&gt;。两个文件联系起来看，表明了上面的&lt;code&gt;web_app&lt;/code&gt;不需要管&lt;code&gt;db&lt;/code&gt;是什么样子的，有什么拓扑结构，它关心的只是&lt;code&gt;database_endpoint&lt;/code&gt;。而下面由&lt;code&gt;database&lt;/code&gt;、&lt;code&gt;dbms&lt;/code&gt;和&lt;code&gt;server&lt;/code&gt;三个节点组成的模板正好可以提供&lt;code&gt;database_endpoint&lt;/code&gt;，从而替换掉&lt;code&gt;db&lt;/code&gt;这个抽象节点。另外，这样的替换也支持嵌套。&lt;/p&gt;
&lt;h3 id=&quot;u8282_u70B9_u6A21_u677F_u7EC4&quot;&gt;&lt;a href=&quot;#u8282_u70B9_u6A21_u677F_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;节点模板组&quot;&gt;&lt;/a&gt;节点模板组&lt;/h3&gt;&lt;p&gt;再看一个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates:
    apache:
      type: tosca.nodes.WebServer.Apache
      properties:
        # 略
      requirements:
        - host: server
    server:
      type: tosca.nodes.Compute
        # 略
  &lt;b style=&quot;color:magenta&quot;&gt;groups&lt;/b&gt;:
    &lt;b style=&quot;color:magenta&quot;&gt;webserver_group&lt;/b&gt;:
      type: tosca.groups.Root
      members: [ apache, server ]

  &lt;b style=&quot;color:magenta&quot;&gt;policies&lt;/b&gt;:
    - my_anti_collocation_policy:
        type: my.policies.anticolocateion
        targets: [ &lt;b style=&quot;color:magenta&quot;&gt;webserver_group&lt;/b&gt; ]
        # 可以一起处理
&lt;/pre&gt;

&lt;p&gt;这个例子表明了&lt;code&gt;apache&lt;/code&gt;和&lt;code&gt;server&lt;/code&gt;应该是一组的关系。这样它们就可以一起被处理，比如说伸缩。&lt;/p&gt;
&lt;h3 id=&quot;YAML_u5B8F&quot;&gt;&lt;a href=&quot;#YAML_u5B8F&quot; class=&quot;headerlink&quot; title=&quot;YAML宏&quot;&gt;&lt;/a&gt;YAML宏&lt;/h3&gt;&lt;p&gt;下面这个描述文件使用了宏来避免重复：&lt;/p&gt;
&lt;pre&gt;
&lt;b style=&quot;color:magenta&quot;&gt;dsl_definitions:
  my_compute_node_props: &amp;my_compute_node_props&lt;/b&gt;
    disk_size: 10 GB
    num_cpus: 1
    mem_size: 2 GB

topology_template:
  node_templates:
    my_server:
      type: Compute
      capabilities:
        - host:
            properties: &lt;b style=&quot;color:magenta&quot;&gt;*my_compute_node_props&lt;/b&gt;

    my_database:
      type: Compute
      capabilities:
        - host:
            properties: &lt;b style=&quot;color:magenta&quot;&gt;*my_compute_node_props&lt;/b&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;u4F20_u53C2&quot;&gt;&lt;a href=&quot;#u4F20_u53C2&quot; class=&quot;headerlink&quot; title=&quot;传参&quot;&gt;&lt;/a&gt;传参&lt;/h3&gt;&lt;p&gt;先看一个描述文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates: 
    wordpress:
      type: tosca.nodes.WebApplication.WordPress
      requirements:
        - database_endpoint: mysql_database
      interfaces:
        Standard:
          &lt;b style=&quot;color:magenta&quot;&gt;inputs&lt;/b&gt;:
            wp_db_port: { get_property: [ SELF, database_endpoint, port ] }
          configure:
            implementation: wordpress_configure.sh           
            &lt;b style=&quot;color:magenta&quot;&gt;inputs&lt;/b&gt;:
              wp_db_port: { get_property: [ SELF, database_endpoint, port ] }
&lt;/pre&gt;

&lt;p&gt;这个例子有两个&lt;code&gt;inputs&lt;/code&gt;，前者指的是为所有操作都声明一个变量，后者指的是为&lt;code&gt;configure&lt;/code&gt;这个操作声明一个变量。再看下一个文件：&lt;/p&gt;
&lt;pre&gt;
  node_templates: 
    frontend: 
      type: MyTypes.SomeNodeType    
      attributes: 
        url: { &lt;b style=&quot;color:magenta&quot;&gt;get_operation_output&lt;/b&gt;: [ SELF, Standard, create, generated_url ] } 
      interfaces: 
        Standard: 
          create: 
            implementation: scripts/frontend/create.sh
          configure: 
            implementation: scripts/frontend/configure.sh 
            inputs: 
              data_dir: { &lt;b style=&quot;color:magenta&quot;&gt;get_operation_output&lt;/b&gt;: [ SELF, Standard, create, data_dir ] }
&lt;/pre&gt;

&lt;p&gt;在这个例子里有两个&lt;code&gt;get_operation_output&lt;/code&gt;，前者指的是将&lt;code&gt;create&lt;/code&gt;操作的环境变量&lt;code&gt;generated_url&lt;/code&gt;设置到&lt;code&gt;url&lt;/code&gt;里，后者是将&lt;code&gt;data_dir&lt;/code&gt;传递给&lt;code&gt;configure&lt;/code&gt;操作。&lt;/p&gt;
&lt;h3 id=&quot;u53D6_u52A8_u6001_u503C&quot;&gt;&lt;a href=&quot;#u53D6_u52A8_u6001_u503C&quot; class=&quot;headerlink&quot; title=&quot;取动态值&quot;&gt;&lt;/a&gt;取动态值&lt;/h3&gt;&lt;p&gt;最后一个描述文件：&lt;/p&gt;
&lt;pre&gt;
node_types:
  ServerNode:
    derived_from: SoftwareComponent
    properties:
      &lt;b style=&quot;color:magenta&quot;&gt;notification_port&lt;/b&gt;:
        type: integer
    capabilities:
      # 略
  ClientNode:
    derived_from: SoftwareComponent
    properties:
      # 略
    requirements:
      - server:
          capability: Endpoint
          node: ServerNode 
          relationship: ConnectsTo
topology_template:          
  node_templates:
    my_server:
      type: ServerNode 
      properties:
        notification_port: 8000
    my_client:
      type: ClientNode
      requirements:
        - server:
            node: my_server
            relationship: &lt;b style=&quot;color:magenta&quot;&gt;my_connection&lt;/b&gt;
  relationship_templates:
    &lt;b style=&quot;color:magenta&quot;&gt;my_connection&lt;/b&gt;:
      type: ConnectsTo
      interfaces:
        Configure:
          inputs:
            &lt;b style=&quot;color:magenta&quot;&gt;targ_notify_port: { get_attribute: [ TARGET, notification_port ] }&lt;/b&gt;
            # 略
&lt;/pre&gt;

&lt;p&gt;这个例子里，类型为&lt;code&gt;ClientNode&lt;/code&gt;的&lt;code&gt;my_client&lt;/code&gt;在&lt;code&gt;my_connection&lt;/code&gt;关系的&lt;code&gt;Configure&lt;/code&gt;操作上需要&lt;code&gt;notification_port&lt;/code&gt;变量。这样的话，当类型为&lt;code&gt;ServerNode&lt;/code&gt;的&lt;code&gt;my_server&lt;/code&gt;连接过来时，就能取到它的&lt;code&gt;notification_port&lt;/code&gt;变量，并设置到&lt;code&gt;targ_notify_port&lt;/code&gt;环境变量里。有一点值得注意的是，真实的&lt;code&gt;notification_port&lt;/code&gt;可能是8000，也可能不是。所以在这种情况下，不用&lt;code&gt;get_property&lt;/code&gt;，而用&lt;code&gt;get_attribute&lt;/code&gt;函数。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.oasis-open.org/committees/tosca/&quot;&gt;TOSCA&lt;/a&gt;（Topology and Orchestration Specification for Cloud Applications）是由OASIS组织制定的云应用拓扑编排规范。通俗地说，就是制定了一个标准，用来描述云平台上应用的拓扑结构。目前支持XML和YAML，Cloudiy的蓝图就是基于这个规范而来。这个规范比较庞大，本文尽量浓缩了&lt;a href=&quot;http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/TOSCA-Simple-Profile-YAML-v1.0.html&quot;&gt;TOSCA的YAML版&lt;/a&gt;前两章，以便用尽量少的时间了解尽量多的规范内容。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="cloudify" scheme="http://qinghua.github.io/tags/cloudify/"/>
    
      <category term="tosca" scheme="http://qinghua.github.io/tags/tosca/"/>
    
  </entry>
  
  <entry>
    <title>轻松搭建Cloudify运行环境</title>
    <link href="http://qinghua.github.io/cloudify/"/>
    <id>http://qinghua.github.io/cloudify/</id>
    <published>2016-03-26T11:21:30.000Z</published>
    <updated>2016-03-26T11:21:09.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://getcloudify.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cloudify&lt;/a&gt;是一个开源的云应用编排系统，它允许使用DSL来描述应用的拓扑结构，并部署到任意环境中。本文大量参考了&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/intro/what-is-cloudify/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方教程&lt;/a&gt;从零开始搭建并管理一个cloudify 3.3.1集群。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，注释掉并在它的下面添加如下几行代码，相当于给它分配两台虚拟机，一台叫做&lt;strong&gt;manager&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;；另一台叫做&lt;strong&gt;agent&lt;/strong&gt;，它们的IP是&lt;strong&gt;192.168.33.18&lt;/strong&gt;。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;manager&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.box = &lt;span class=&quot;string&quot;&gt;&quot;cloudify-virtualbox_3.3.0-ga-b300.box&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.box_url = &lt;span class=&quot;string&quot;&gt;&quot;http://repository.cloudifysource.org/org/cloudify3/3.3.0/ga-RELEASE/cloudify-virtualbox_3.3.0-ga-b300.box&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;manager&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.17&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;agent&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.box = &lt;span class=&quot;string&quot;&gt;&quot;minimum/ubuntu-trusty64-docker&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;agent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.18&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;虚拟机agent所用的vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。虚拟机manager用的远程镜像是cloudify官方镜像，提供了cloudify manager功能。然后分别在两个终端运行以下命令启动并连接两台虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh manager&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh agent&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;在Ubuntu上安装cloudify很简单，在agent上运行以下命令即可：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c http://repository.cloudifysource.org/org/cloudify3/get-cloudify.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo python get-cloudify.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完了之后，运行以下命令可以看到cloudify命令行的版本及帮助文档：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cfy -h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72_u5E94_u7528&quot;&gt;&lt;a href=&quot;#u90E8_u7F72_u5E94_u7528&quot; class=&quot;headerlink&quot; title=&quot;部署应用&quot;&gt;&lt;/a&gt;部署应用&lt;/h2&gt;&lt;p&gt;Cloudify的应用被称为&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/intro/blueprints/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蓝图&lt;/a&gt;（blueprint），这个名字很好地诠释了它在主页上声称的“从蓝图到生产环境（From Blueprint to Production）”。官方已经为我们的第一次使用准备了一个Hello World，让我们先下载下来：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://github.com/cloudify-examples/simple-python-webserver-blueprint/archive/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; unzip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; simple-python-webserver-blueprint-master/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来初始化下载的蓝图并传入端口等参数：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; init --blueprint-path blueprint.yaml --inputs &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;webserver_port&quot;: &quot;8000&quot;, &quot;host_ip&quot;:&quot;localhost&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Cloudify使用工作流（workflow）来管理应用程序。现在启动install工作流来部署一个python的web服务器：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; execute --workflow install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:&lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以在启动vagrant虚拟机的主机上访问：&lt;a href=&quot;http://192.168.33.18:8000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:8000&lt;/a&gt;：&lt;br&gt;&lt;img src=&quot;/img/cloudify-hello-world.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;短短几步，我们便顺利部署了一个应用。通过以下命令可以看到一些运行的参数：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; outputs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到的内容称之为模型（model）。蓝图是应用的模板，蓝图的实例称为部署（deployment），部署就是模型的内容之一。蓝图里的每个实体称之为节点（node），节点在部署里称为节点实例（node-instances），它们是一对多的关系。但是在这个例子里，我们有两个节点，每个节点各有一个节点实例。可以用以下命令查看节点实例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; instances&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们能看到这两个节点实例分别是host和http_web_server，其中http_web_server运行在host之上。可以用以下命令来结束部署：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; execute -w uninstall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u84DD_u56FE_u89E3_u6790&quot;&gt;&lt;a href=&quot;#u84DD_u56FE_u89E3_u6790&quot; class=&quot;headerlink&quot; title=&quot;蓝图解析&quot;&gt;&lt;/a&gt;蓝图解析&lt;/h2&gt;&lt;p&gt;现在让我们看一看刚才所用的蓝图的结构：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat blueprint.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这就是一个yaml格式的文件，里面都是cloudify的DSL。文件分为以下五个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tosca_definitions_version：蓝图的DSL版本，这里是cloudify_dsl_1_2&lt;/li&gt;
&lt;li&gt;imports：引用yaml文件的地址&lt;/li&gt;
&lt;li&gt;inputs：蓝图的配置信息，也就是一开始初始化蓝图时传入的参数&lt;/li&gt;
&lt;li&gt;node_templates：描述了应用的资源以及应用是如何被部署的，可以跟刚才看到的节点实例相对应起来&lt;/li&gt;
&lt;li&gt;outputs：输出信息，也就是刚才看到的模型里的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中包括了三个内置函数（Intrinsic Functions），分别是&lt;code&gt;get_input&lt;/code&gt;，&lt;code&gt;get_property&lt;/code&gt;和&lt;code&gt;concat&lt;/code&gt;，只能在蓝图里使用。它们的意思也都比较明显，可以从函数名推断出来。所有的内置函数可以在&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/blueprints/spec-intrinsic-functions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;查看到。&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72_u5BB9_u5668&quot;&gt;&lt;a href=&quot;#u90E8_u7F72_u5BB9_u5668&quot; class=&quot;headerlink&quot; title=&quot;部署容器&quot;&gt;&lt;/a&gt;部署容器&lt;/h2&gt;&lt;p&gt;Cloudify通过&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/plugins/docker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docker插件&lt;/a&gt;来支持docker。这个插件依赖于Docker Python API库，而不是Docker CLI，所以体验上有所不同。比如说，&lt;code&gt;docker run&lt;/code&gt;将会被分解为&lt;code&gt;docker create&lt;/code&gt;和&lt;code&gt;docker start&lt;/code&gt;。接下来让我们来尝试部署一个tomcat容器。首先需要生成一个tomcat容器的蓝图：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir ../docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ../docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; blueprint.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tosca_definitions_version: cloudify_dsl_1_2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - http://www.getcloudify.org/spec/cloudify/&lt;span class=&quot;number&quot;&gt;3.4&lt;/span&gt;m3/types.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - http://www.getcloudify.org/spec/docker-plugin/&lt;span class=&quot;number&quot;&gt;1.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;/plugin.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inputs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host_ip:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      description: &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        The ip of the host the application will be deployed on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      default: &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tomcat_container_port_bindings:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description: &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      A dict of port bindings &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the node container.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node_templates:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: cloudify.nodes.Compute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    properties:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      install_agent: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ip: &amp;#123; get_input: host_ip &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tomcat_container:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: cloudify.docker.Container&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    properties:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      image:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        repository: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tag: &lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;-jre8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interfaces:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cloudify.interfaces.lifecycle:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        create:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          implementation: docker.docker_plugin.tasks.create_container&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          inputs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              stdin_open: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              tty: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          implementation: docker.docker_plugin.tasks.start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          inputs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              port_bindings: &amp;#123; get_input: tomcat_container_port_bindings &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    relationships:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: cloudify.relationships.contained_&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        target: host&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;outputs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http_endpoint:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description: Tomcat web server endpoint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:8080&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个蓝图需要docker的插件，所以必须先安装一下，然后就可以初始化蓝图（这次不传参数，使用默认值）：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; create-requirements -o requirements.txt -p blueprint.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install -r requirements.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; init -p blueprint.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在可以运行啦。由于第一次运行需要下载镜像，可能会比较慢：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; execute -w install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker ps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker images&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;总算是可以访问了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl localhost:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以在启动vagrant虚拟机的主机上访问：&lt;a href=&quot;http://192.168.33.18:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:8080&lt;/a&gt;。查看运行参数和节点实例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; outputs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; instances&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以用以下命令来结束部署：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;agent&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; execute -w uninstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker ps &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看起来容器会被删除。感觉怎么样？你愿意天天这样来部署docker么？&lt;/p&gt;
&lt;h2 id=&quot;Cloudify_u7BA1_u7406_u5668&quot;&gt;&lt;a href=&quot;#Cloudify_u7BA1_u7406_u5668&quot; class=&quot;headerlink&quot; title=&quot;Cloudify管理器&quot;&gt;&lt;/a&gt;Cloudify管理器&lt;/h2&gt;&lt;p&gt;除了命令行以外，cloudify也支持使用管理器来部署应用。Cloudify管理器有自己的用户界面，提供历史记录、授权和鉴权等功能，并且支持并行运行工作流。下面我们来试着安装一个cloudify管理器。启动cloudify管理器就像是启动一个普通的蓝图一样。可是安装需要下载一大堆的依赖，比较繁琐，有兴趣的童鞋可以参考&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/manager/bootstrapping/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方教程&lt;/a&gt;。官方另外还提供了一个&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/manager/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant镜像&lt;/a&gt;，里面已经配置好了整个Cloudify管理器，因为我们启动vagrant的时候就已经导入了，直接用它更方便。只要虚拟机启动起来（按照本教程的话，现在是起来的状态），可以直接访问&lt;a href=&quot;http://192.168.33.17/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.17/&lt;/a&gt;来打开cloudify管理器的页面了：&lt;br&gt;&lt;img src=&quot;/img/cloudify-manager-blueprint.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们来上传一个官方的蓝图，这是nodejs调用mongodb的应用：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;manager&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; blueprints&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/cloudify-cosmo/cloudify-nodecellar-example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; cloudify-nodecellar-example/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout tags/&lt;span class=&quot;number&quot;&gt;3.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cfy blueprints upload -b nodecellar -p simple-blueprint.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-b&lt;/code&gt;参数的nodecellar是这个蓝图的名字。刷新蓝图的界面，我们就能看到一个名为nodecellar的蓝图。点击进去，还能看到更详细的拓扑结构、节点信息等。甚至还可以点击图上的各个组件查看详细信息：&lt;br&gt;&lt;img src=&quot;/img/cloudify-blueprint-topology.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里有4个节点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;host：部署的主机&lt;/li&gt;
&lt;li&gt;mongod：mongoDB，运行在host上&lt;/li&gt;
&lt;li&gt;nodejs：nodejs服务器，运行在host上&lt;/li&gt;
&lt;li&gt;nodec…：显示不下的nodecellar，也就是这个酒窖应用，运行在nodejs服务器上，它会去访问mongoDB&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接下来让我们生成一个部署对象：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;manager&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sed -i &amp;#39;s/host_ip: .*/host_ip: 192.168.33.17/&amp;#39; ../inputs/nodecellar-singlehost.yaml&amp;#10;cfy deployments create -b nodecellar -d nodecellar --inputs ../inputs/nodecellar-singlehost.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-d&lt;/code&gt;参数的nodecellar是这个部署的ID。页面上点击左边的Deployments，我们就能看到ID为nodecellar的部署了。而Logs &amp;amp; Events里面也生成了好几页日志和事件。与此同时，最左下的Nodes也出现了4条记录。接下来，真正地开始部署：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;manager&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy executions start -w install -d nodecellar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;部署需要一些时间，在笔者的mac上大约5分钟。这时如果刷新部署页面，就能看到Action显示Install，旁边还有一个&lt;code&gt;×&lt;/code&gt;号，可以通过点击它来取消本次部署。点击部署页面上nodecellar的ID，就能看到一系列详细信息，甚至还有监控：&lt;br&gt;&lt;img src=&quot;/img/cloudify-deployments-monitoring.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;部署完成后，就可以直接访问&lt;a href=&quot;http://192.168.33.17:8080/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.17:8080/&lt;/a&gt;来打开这个nodejs酒窖的网站了：&lt;br&gt;&lt;img src=&quot;/img/cloudify-node-cellar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还可以用以下命令来停止nodecellar的部署，并删除这个部署：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;manager&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy executions start -w uninstall -d nodecellar&amp;#10;cfy deployments delete -d nodecellar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;值得一提的是，刚才我们输入的命令，都可以通过cloudify manager的界面来操作。如果需要停止cloudify manager，可以用以下命令：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;manager&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cfy teardown -f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://getcloudify.org/&quot;&gt;Cloudify&lt;/a&gt;是一个开源的云应用编排系统，它允许使用DSL来描述应用的拓扑结构，并部署到任意环境中。本文大量参考了&lt;a href=&quot;http://docs.getcloudify.org/3.3.1/intro/what-is-cloudify/&quot;&gt;官方教程&lt;/a&gt;从零开始搭建并管理一个cloudify 3.3.1集群。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="cloudify" scheme="http://qinghua.github.io/tags/cloudify/"/>
    
  </entry>
  
  <entry>
    <title>轻松搭建Kubernetes 1.2版运行环境</title>
    <link href="http://qinghua.github.io/kubernetes-installation/"/>
    <id>http://qinghua.github.io/kubernetes-installation/</id>
    <published>2016-03-22T13:14:31.000Z</published>
    <updated>2016-04-26T08:16:28.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文从零开始搭建一个kubernetes集群。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配三台虚拟机，一台叫做&lt;strong&gt;master&lt;/strong&gt;，它的IP是&lt;strong&gt;192.168.33.17&lt;/strong&gt;；另两台叫做&lt;strong&gt;node1&lt;/strong&gt;和&lt;strong&gt;node2&lt;/strong&gt;，它们的IP是&lt;strong&gt;192.168.33.18&lt;/strong&gt;和&lt;strong&gt;192.168.33.19&lt;/strong&gt;。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.17&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;node1&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;node1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.18&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.define &lt;span class=&quot;string&quot;&gt;&quot;node2&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; | host |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.hostname = &lt;span class=&quot;string&quot;&gt;&quot;node2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.19&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.memory = &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后分别在三个终端运行以下命令启动并连接三台虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 1&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh node1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host terminal 3&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh node2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个vagrant镜像默认的docker版本为1.9.0，如果你愿意，可以用下面的命令将其升级为1.10.3，但这不是必须的：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;all or none&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt; --recv-keys &lt;span class=&quot;number&quot;&gt;58118&lt;/span&gt;E89F3A912897C070ADBF76221572C52609D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &lt;span class=&quot;string&quot;&gt;&quot;echo deb https://apt.dockerproject.org/repo ubuntu-trusty main &amp;gt; /etc/apt/sources.list.d/docker.list&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get purge lxc-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-cache policy docker-engine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install docker-engine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service docker restart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u7F51_u7EDC_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u7F51_u7EDC_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建网络环境&quot;&gt;&lt;/a&gt;搭建网络环境&lt;/h2&gt;&lt;p&gt;为了打通不同主机上的容器的网络连接，最简单的方法是安装一个覆盖网络，这里我们使用flannel。它使用etcd来配置，所以我们需要先运行一个etcd实例。下面在master虚拟机上用容器运行一个etcd实例：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=etcd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v /var/etcd/data:/var/etcd/data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kubernetes/etcd:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/etcd \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --addr=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --bind-addr=&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --data-dir=/var/etcd/data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来往etcd里插入flannel的配置数据。这里指定flannel可以使用的IP地址为&lt;code&gt;10.0.0.0/8&lt;/code&gt;区间：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it etcd etcdctl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; /qinghua.github.io/network/config &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;Network&quot;: &quot;10.0.0.0/8&quot;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后安装并在后台运行flannel：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://github.com/coreos/flannel/releases/download/v0.&lt;span class=&quot;number&quot;&gt;5.5&lt;/span&gt;/flannel-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;-linux-amd64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf flannel-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;-linux-amd64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo flannel-&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;/flanneld --etcd-endpoints=http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt; --etcd-prefix=/qinghua.github.io/network --iface=eth1 &amp;gt; flannel.log &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat flannel.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Flannel启动完成后，会获得一个可用于分配的IP集合，并存放到&lt;code&gt;/run/flannel/subnet.env&lt;/code&gt;里。我们需要配置一下docker的可用IP为可用于分配的IP：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; /run/flannel/subnet.env&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &lt;span class=&quot;string&quot;&gt;&quot;echo DOCKER_OPTS=\\\&quot;--bip=&lt;span class=&quot;variable&quot;&gt;$FLANNEL_SUBNET&lt;/span&gt; --mtu=&lt;span class=&quot;variable&quot;&gt;$FLANNEL_MTU&lt;/span&gt;\\\&quot; &amp;gt;&amp;gt; /etc/default/docker&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service docker restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFAk8s_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFAk8s_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建k8s环境&quot;&gt;&lt;/a&gt;搭建k8s环境&lt;/h2&gt;&lt;p&gt;终于轮到k8s啦。首先需要下载并解压kubernetes 1.2.0版：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -c https://github.com/kubernetes/kubernetes/releases/download/v1.&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;/kubernetes.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf kubernetes.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf kubernetes/server/kubernetes-server-linux-amd64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解压出来的文件里面含了一些启动master需要的docker镜像文件，将它们导入：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker load -i kubernetes/server/bin/kube-apiserver.tar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker load -i kubernetes/server/bin/kube-controller-manager.tar &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker load -i kubernetes/server/bin/kube-scheduler.tar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker images&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有条件科学上网的童鞋可以自行准备&lt;code&gt;gcr.io/google_containers/etcd:2.2.1&lt;/code&gt;这个镜像，否则就凑合着使用先前的&lt;code&gt;kubernetes/etcd:2.0.5&lt;/code&gt;。注意，这里为了简单起见，使用同一套etcd。真实环境里，flannel和kubernetes使用的etcd是分开的。接下来开始启动api server：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-apiserver:e68c6af15d4672feef7022e94ee4d9af \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-apiserver \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --insecure-bind-address=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --service-cluster-ip-range=&lt;span class=&quot;number&quot;&gt;11.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --etcd-servers=http://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后是controller manager：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=cm \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-controller-manager:b9107c794e0564bf11719dc554213f7b \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-controller-manager \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后是scheduler：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --name=scheduler \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gcr.io/google_containers/kube-scheduler:&lt;span class=&quot;number&quot;&gt;903&lt;/span&gt;b34d5ed7367ec4dddf846675613c9 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kube-scheduler \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;服务器启动完毕，可以运行以下命令来查看版本，咱们用的是1.2：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来该客户端了。首先启动kubelet：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NODE_IP=`ifconfig eth1 | grep &lt;span class=&quot;string&quot;&gt;&#39;inet addr:&#39;&lt;/span&gt; | cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;: &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;2 | cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;1`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo kubernetes/server/bin/kubelet --api-servers=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; --node-ip=&lt;span class=&quot;variable&quot;&gt;$NODE_IP&lt;/span&gt; &amp;gt; kubelet.log &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat kubelet.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Kubelet启动完成后，在master上就可以看到了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后启动kube-proxy：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo kubernetes/server/bin/kube-proxy --master=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; &amp;gt; proxy.log &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat proxy.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6D4B_u8BD5k8s_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u6D4B_u8BD5k8s_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;测试k8s环境&quot;&gt;&lt;/a&gt;测试k8s环境&lt;/h2&gt;&lt;p&gt;环境安装好了，接下来试着启动一个pod。启动之前，由于kubernetes需要通过gcr.io/google_containers/pause:2.0的小镜像来管理pod的网络。它会自动下载，如果没有科学上网导致下载不到，那么可以先用docker hub上的kubernetes/pause来代替：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;node1 node2&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull kubernetes/pause&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker tag kubernetes/pause gcr.io/google_containers/pause:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以用命令行在任意一台虚拟机上运行一个tomcat，并生成服务：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt;tomcat.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: ReplicationController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  replicas: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  selector:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  template:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      labels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      containers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        image: tomcat:&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;-jre8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - containerPort: &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apiVersion: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kind: Service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metadata:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  labels: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spec:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: NodePort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  selector:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app: tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - port: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    targetPort: &lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodePort: &lt;span class=&quot;number&quot;&gt;30088&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; create &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; tomcat.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一开始由于需要下载tomcat镜像可能会慢点，随时可以用下面的命令来查看进度：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; describe po tomcat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以用下面的命令来查看pod、replication controller、service和endpoint：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get po&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get rc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get svc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get ep&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到的endpoint里，应该有一个tomcat。在我的虚拟机上它的ENDPOINTS是&lt;code&gt;10.0.8.3:8080&lt;/code&gt;，访问一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;POD_IP=`kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; get ep tomcat -o jsonpath=&amp;#123;.subsets[*].addresses[*].ip&amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$POD_IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl &lt;span class=&quot;variable&quot;&gt;$POD_IP&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;顺利的话，这三台虚拟机任意一台都可以访问这个tomcat的endpoint。由于启动这三台vagrant虚拟机的主机上并没有安装flannel，所以目前就别想用主机的浏览器打开这个网址啦。但是，由于我们创建服务的时候类型设置为NodePort，这样外部是可以通过任意node的特定端口访问这个服务的。也就是说，下面这两个url都是可以在集群外部访问的，并且效果一样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://192.168.33.18:30088/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.18:30088/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://192.168.33.19:30088/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://192.168.33.19:30088/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初步测试完毕，可以使用以下命令来删除刚才创建的tomcat系列对象：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;master&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;kubernetes/server/bin/kubectl &lt;span class=&quot;operator&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; delete &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; tomcat.yaml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://kubernetes.io/docs/whatisk8s/&quot;&gt;Kubernetes&lt;/a&gt;简称k8s，是谷歌于2014年开始主导的开源项目，提供了以容器为中心的部署、伸缩和运维平台。截止目前它的最新版本为1.2。搭建环境之前建议先了解一下kubernetes的相关知识，可以参考&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;《如果有10000台机器，你想怎么玩？》&lt;/a&gt;系列文章。本文从零开始搭建一个kubernetes集群。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="docker" scheme="http://qinghua.github.io/tags/docker/"/>
    
      <category term="flannel" scheme="http://qinghua.github.io/tags/flannel/"/>
    
      <category term="kubernetes" scheme="http://qinghua.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>如果有10000台机器，你想怎么玩？（九）安全性</title>
    <link href="http://qinghua.github.io/kubernetes-in-mesos-9/"/>
    <id>http://qinghua.github.io/kubernetes-in-mesos-9/</id>
    <published>2016-03-21T11:24:40.000Z</published>
    <updated>2016-03-21T11:31:23.000Z</updated>
    
    <content type="html">&lt;p&gt;这次聊聊mesos+k8s的安全性，还有多租户。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;如果有10000台机器，你想怎么玩？（一）概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-2&quot;&gt;如果有10000台机器，你想怎么玩？（二）高可用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-3&quot;&gt;如果有10000台机器，你想怎么玩？（三）持久化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-4&quot;&gt;如果有10000台机器，你想怎么玩？（四）监控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-5&quot;&gt;如果有10000台机器，你想怎么玩？（五）日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-6&quot;&gt;如果有10000台机器，你想怎么玩？（六）性能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-7&quot;&gt;如果有10000台机器，你想怎么玩？（七）生命周期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-8&quot;&gt;如果有10000台机器，你想怎么玩？（八）网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-9&quot;&gt;如果有10000台机器，你想怎么玩？（九）安全性&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Kubernetes&quot;&gt;&lt;a href=&quot;#Kubernetes&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes&quot;&gt;&lt;/a&gt;Kubernetes&lt;/h2&gt;&lt;h3 id=&quot;u9274_u6743_u548C_u6388_u6743&quot;&gt;&lt;a href=&quot;#u9274_u6743_u548C_u6388_u6743&quot; class=&quot;headerlink&quot; title=&quot;鉴权和授权&quot;&gt;&lt;/a&gt;鉴权和授权&lt;/h3&gt;&lt;p&gt;身份认证分为鉴权（authentication）和授权（authorization）。前者是看你能不能登录，后者是看你登录后有什么权限。Kubernetes的1.2版支持以下&lt;a href=&quot;http://kubernetes.io/docs/admin/authentication/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;5种鉴权&lt;/a&gt;方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CA认证（Client certificate authentication）：就是基于SSL证书的认证，基本概念可以参考&lt;a href=&quot;/certificate&quot;&gt;证书的那些事儿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Token文件认证（Token File）：用一个CSV文件指定用户名、用户id和组名，组名是为了给下面的授权使用的&lt;/li&gt;
&lt;li&gt;OpenID认证（OpenID Connect ID Token）：基于第三方的&lt;a href=&quot;http://openid.net/specs/openid-connect-core-1_0.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基本认证（Basic authentication）：也是CSV文件，指定了用户名、密码和用户id&lt;/li&gt;
&lt;li&gt;Keystone认证（Keystone authentication）：基于openstack的身份认证服务&lt;a href=&quot;http://docs.openstack.org/developer/keystone/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Keystone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;身份验证通过，接下来就是授权。Kubernetes的1.2版支持以下&lt;a href=&quot;http://kubernetes.io/docs/admin/authorization/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4种授权&lt;/a&gt;方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总是拒绝（AlwaysDeny）：这个一般用于测试&lt;/li&gt;
&lt;li&gt;总是允许（AlwaysAllow）：只要能登录进来，就有所有权限&lt;/li&gt;
&lt;li&gt;用户配置（ABAC）：基于用户授权配置，可以对资源（比如pod、service等）和命名空间设置用户/组的只读或可写权限，多租户管理的时候很有用&lt;/li&gt;
&lt;li&gt;钩子（Webhook）：也能实现类似用户配置的粒度，只不过是基于一个远程的REST服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u8D26_u6237&quot;&gt;&lt;a href=&quot;#u8D26_u6237&quot; class=&quot;headerlink&quot; title=&quot;账户&quot;&gt;&lt;/a&gt;账户&lt;/h3&gt;&lt;p&gt;用户账户（User account）和&lt;a href=&quot;http://kubernetes.io/docs/user-guide/service-accounts/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;服务账户&lt;/a&gt;（Service account）在kubernetes里是不同的两个东西。用户账户是给人使用的，不可重复，目前创建的时候需要重启API Server。而服务账户是给pod里的容器使用的，在不同的命名空间中可以重复，比较轻量级一点，可以动态创建。如果创建pod的时候指定了服务账户，那就没的说，直接用就好了；但要是没有指定，k8s会自动为pod指定一个指定命名空间的名为default的服务账户。它是在创建命名空间时自动生成的。&lt;/p&gt;
&lt;h3 id=&quot;u79D8_u5BC6&quot;&gt;&lt;a href=&quot;#u79D8_u5BC6&quot; class=&quot;headerlink&quot; title=&quot;秘密&quot;&gt;&lt;/a&gt;秘密&lt;/h3&gt;&lt;p&gt;想象一个正常的开发场景，比如tomcat容器访问mysql，攻城狮们理所当然地把mysql的密码存放在tomcat容器里。Kubernetes提供了&lt;a href=&quot;http://kubernetes.io/docs/user-guide/secrets/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;秘密&lt;/a&gt;（Secret）这个对象用来保存这样的敏感信息。需要用的时候像挂卷一样把秘密挂载到pod里就好了，密码就不需要直接写了。有了秘密，妈妈再也不用担心我的霸气侧漏了。实际上，上面提到的服务账户本质上就是秘密的集合。&lt;/p&gt;
&lt;h3 id=&quot;u591A_u79DF_u6237&quot;&gt;&lt;a href=&quot;#u591A_u79DF_u6237&quot; class=&quot;headerlink&quot; title=&quot;多租户&quot;&gt;&lt;/a&gt;多租户&lt;/h3&gt;&lt;p&gt;Kubernetes本身支持用不同的命名空间来区分多租户，它们之间不会相互干扰。还有一个系统使用的命名空间叫做&lt;code&gt;kube-system&lt;/code&gt;。但是系统的资源是恒定的，如果有个租户打算扶着墙进来，再扶着墙出去，是不是其他人都没得吃了？Kubernetes有一个&lt;a href=&quot;http://kubernetes.io/docs/admin/resource-quota/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资源限额&lt;/a&gt;（Resource Quota）的概念，可以用于命名空间上。目前可以限制的资源有CPU和内存。除了资源，在pod、rc、服务等的数量上也可以进行限制。这样就能很方便地像现在的CaaS那样卖实例吧。&lt;/p&gt;
&lt;h2 id=&quot;Mesos&quot;&gt;&lt;a href=&quot;#Mesos&quot; class=&quot;headerlink&quot; title=&quot;Mesos&quot;&gt;&lt;/a&gt;Mesos&lt;/h2&gt;&lt;p&gt;Mesos默认使用&lt;a href=&quot;https://en.wikipedia.org/wiki/CRAM-MD5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CRAM-MD5&lt;/a&gt;&lt;a href=&quot;http://mesos.apache.org/documentation/latest/authentication/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;鉴权&lt;/a&gt;。最典型的用法是master启动的时候，指定一个文件，里面含有用户名（mesos里叫principal）和密码（mesos里叫secret）。只有通过鉴权的framework和slave才能注册进来。&lt;a href=&quot;http://mesos.apache.org/documentation/latest/authorization/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;授权&lt;/a&gt;是通过ACLs（Access Control Lists）来实现的，目前可以支持以下十种行为的授权：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;register_frameworks: 注册framework&lt;/li&gt;
&lt;li&gt;run_tasks: 运行任务&lt;/li&gt;
&lt;li&gt;teardown_frameworks: 解除framework&lt;/li&gt;
&lt;li&gt;set_quotas: 设置配额&lt;/li&gt;
&lt;li&gt;remove_quotas: 移除配额&lt;/li&gt;
&lt;li&gt;reserve_resources: 保留资源&lt;/li&gt;
&lt;li&gt;unreserve_resources: 解除保留资源&lt;/li&gt;
&lt;li&gt;create_volumes: 创建持久化卷&lt;/li&gt;
&lt;li&gt;destroy_volumes: 删除持久化卷&lt;/li&gt;
&lt;li&gt;update_weights: 更新权重&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kubernetes的这些多租户的概念，mesos基本上也都有。就是在名称和具体功效上略有差别。比如，mesos的&lt;a href=&quot;http://mesos.apache.org/documentation/latest/roles/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;角色&lt;/a&gt;（role）就像是k8s的命名空间一样，指定role的framework只能使用特定role的mesos slave。在资源限额上，mesos支持&lt;a href=&quot;http://mesos.apache.org/documentation/latest/quota/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;配额&lt;/a&gt;和&lt;a href=&quot;http://mesos.apache.org/documentation/latest/weights/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;权重&lt;/a&gt;（Weights）。配额管的是保留资源以供未来使用，权重管的是角色分配的资源比例。可惜的是对角色和权重的修改都必须重新启动mesos master，而配额可以通过http请求动态修改。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这次聊聊mesos+k8s的安全性，还有多租户。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-1&quot;&gt;如果有10000台机器，你想怎么玩？（一）概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-2&quot;&gt;如果有10000台机器，你想怎么玩？（二）高可用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-3&quot;&gt;如果有10000台机器，你想怎么玩？（三）持久化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-4&quot;&gt;如果有10000台机器，你想怎么玩？（四）监控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-5&quot;&gt;如果有10000台机器，你想怎么玩？（五）日志&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-6&quot;&gt;如果有10000台机器，你想怎么玩？（六）性能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-7&quot;&gt;如果有10000台机器，你想怎么玩？（七）生命周期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-8&quot;&gt;如果有10000台机器，你想怎么玩？（八）网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/kubernetes-in-mesos-9&quot;&gt;如果有10000台机器，你想怎么玩？（九）安全性&lt;/a&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="kubernetes" scheme="http://qinghua.github.io/tags/kubernetes/"/>
    
      <category term="mesos" scheme="http://qinghua.github.io/tags/mesos/"/>
    
  </entry>
  
  <entry>
    <title>证书的那些事儿</title>
    <link href="http://qinghua.github.io/certificate/"/>
    <id>http://qinghua.github.io/certificate/</id>
    <published>2016-03-16T14:19:31.000Z</published>
    <updated>2016-03-19T07:18:32.000Z</updated>
    
    <content type="html">&lt;p&gt;现在网络这么发达，许多人都在上面购物、理财、预约挂号…网络上传送的可都是自己的重要资料，比如身份证号，信用卡密码等。因特网如何才能保证这些敏感信息的安全？本文试着来探讨一下加密、证书等那些事儿。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5386_u53F2&quot;&gt;&lt;a href=&quot;#u5386_u53F2&quot; class=&quot;headerlink&quot; title=&quot;历史&quot;&gt;&lt;/a&gt;历史&lt;/h2&gt;&lt;h3 id=&quot;u9690_u85CF_u4FE1_u606F&quot;&gt;&lt;a href=&quot;#u9690_u85CF_u4FE1_u606F&quot; class=&quot;headerlink&quot; title=&quot;隐藏信息&quot;&gt;&lt;/a&gt;隐藏信息&lt;/h3&gt;&lt;p&gt;古代交通不便，一般都是通过送信的方式传递信息。那么如何保证信件的内容不被泄露呢？一种方法是隐藏字迹。中国古代使用矾书，也就是用明矾水来书写保密书信。水干之后没有任何痕迹，泡水时字才显示。还有一招是使用淀粉水在纸上写字，再把纸泡在碘水中显示字迹。据知乎的水波说&lt;a href=&quot;https://www.zhihu.com/question/20986883/answer/16811680&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在西方世界里，也有使用牛奶或者羊奶书写信息，待干掉以后再用高温烘烤使之重新显现字迹的说法&lt;/a&gt;。这些办法一旦为人所知，便会轻易被破解，而且还有点儿此地无银三百两的意思。&lt;/p&gt;
&lt;h3 id=&quot;u52A0_u5BC6_u4FE1_u606F&quot;&gt;&lt;a href=&quot;#u52A0_u5BC6_u4FE1_u606F&quot; class=&quot;headerlink&quot; title=&quot;加密信息&quot;&gt;&lt;/a&gt;加密信息&lt;/h3&gt;&lt;p&gt;除了隐藏信息以外，还有加密的方法。在宋代兵书《武经总要》里，&lt;a href=&quot;https://www.zhihu.com/question/34846340/answer/60080691&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;约定了40个常用的军事短语&lt;/a&gt;，送信内容为一首40个字的五言律诗，每个字代表一个军事短语。然后在相应的字上做标记，对方就明白了，这个叫字验。这个就有点儿密码表的意思了。从知乎某匿名用户的回答上找了一张图：&lt;br&gt;&lt;img src=&quot;/img/ziyan.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在西方世界里，古希腊军队将长条羊皮纸缠绕在约定长度和粗细的木棍上书写，木棍称为Scytale。把羊皮纸解下来后就变成没有意义的字母了。古罗马的凯撒大帝用的是字母移位的办法。比如有封信写着：IFMMP，多半我们是不知道啥意思的。要是对方事先说明了把每个字母都右移一位的方法，也就是A变成B，B变成C…Z变成A，那我们就能很轻松地把IFMMP变成HELLO，明白对方的意思。&lt;/p&gt;
&lt;h2 id=&quot;u73B0_u4EE3&quot;&gt;&lt;a href=&quot;#u73B0_u4EE3&quot; class=&quot;headerlink&quot; title=&quot;现代&quot;&gt;&lt;/a&gt;现代&lt;/h2&gt;&lt;h3 id=&quot;u5BF9_u79F0_u52A0_u5BC6&quot;&gt;&lt;a href=&quot;#u5BF9_u79F0_u52A0_u5BC6&quot; class=&quot;headerlink&quot; title=&quot;对称加密&quot;&gt;&lt;/a&gt;对称加密&lt;/h3&gt;&lt;p&gt;对上文说的凯撒大帝移位法而言，“右移”就是算法（algorithm），一位的“1”就是密钥（key）。计算机普及后，最早的有影响力的算法是&lt;a href=&quot;https://en.wikipedia.org/wiki/Data_Encryption_Standard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DES&lt;/a&gt;（Data Encryption Standard），它的秘钥是64位，但只有56位会用来计算。所以，只要最多尝试2&lt;sup&gt;56&lt;/sup&gt;（大约是七万亿）次的暴力破解，就能解密。随着计算机硬件的发展，这个数量级在1998年只要56小时就能破解，到了1999年变成了24小时以内。这样就不够安全了。于是四年之后，&lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AES&lt;/a&gt;（Advanced Encryption Standard）取代了DES成为了新的标准。它可以使用128、192或256位密钥。最低的128位也能承受大约三千万亿亿次的暴力破解，至少目前看起来还算是比较安全的。在DES向AES的过渡期间，使用了&lt;a href=&quot;https://en.wikipedia.org/wiki/Triple_DES&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3DES&lt;/a&gt;算法。所谓3DES，可以理解成重要的事情做三遍，用不同密钥的DES加密三次，几乎也就等同于56×3=168位的密钥，这样也算是比较安全了。&lt;/p&gt;
&lt;h3 id=&quot;u975E_u5BF9_u79F0_u52A0_u5BC6&quot;&gt;&lt;a href=&quot;#u975E_u5BF9_u79F0_u52A0_u5BC6&quot; class=&quot;headerlink&quot; title=&quot;非对称加密&quot;&gt;&lt;/a&gt;非对称加密&lt;/h3&gt;&lt;p&gt;对称密钥有一个问题，就是密钥通过什么渠道来传输。加密算法再好，密钥被偷走了，也无济于事。在这样的背景下，非对称加密问世了。它的密钥包含着一个公钥和一个私钥。私钥顾名思义是只有你自己的电脑才知道的，公钥是公开的。用私钥加密的数据只有用公钥才能解开，同样的，用公钥加密的数据只有用私钥才能解开。假如两台电脑甲和乙相互通信，双方先把自己的公钥告诉对方。当甲给乙发消息时，用乙的公钥来加密，由于只有乙有相对应的私钥，所以只有乙能解密，甲要是忘记了消息内容连自己都解不了，更遑论第三方了。反之亦然。非对称加密最常用的算法是&lt;a href=&quot;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RSA&lt;/a&gt;（发明者Rivest、Shmir和Adleman的姓氏首字母）。它的私钥和公钥是通过至少百位的大质数来生成的。由于在数学上很难计算大整数的因数，所以目前来说是比较安全的。万一哪天数学或&lt;a href=&quot;http://www.guokr.com/question/530973/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;量子计算机&lt;/a&gt;上有了突破，这种算法也就不再可靠了。1999年，512位的RSA被成功分解。2009年，768位的RSA也被成功分解。现在通用的1024位密钥可能也不那么可靠了，从安全的角度来说应该升级到2048位或以上。密钥这么大，非对称加密的速度比较慢（与对称加密有千倍的差距）也是可以理解的。所以在实际的使用当中一般用对称加密来加密数据，非对称加密来加密对称加密的密钥。&lt;/p&gt;
&lt;h3 id=&quot;u6563_u5217_u7B97_u6CD5&quot;&gt;&lt;a href=&quot;#u6563_u5217_u7B97_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;散列算法&quot;&gt;&lt;/a&gt;散列算法&lt;/h3&gt;&lt;p&gt;好吧，密码破解不了，但是攻击者可以截取加密后的数据包，然后篡改。这样“传位十四皇子”就变成了“传位于四皇子”啦。散列算法堵死了这条路。它能把很长的数据变成固定长度的文本。也称为数据的&lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Message_digest&amp;amp;redirect=no&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;摘要&lt;/a&gt;（digest）或&lt;a href=&quot;https://en.wikipedia.org/wiki/Fingerprint_(computing)&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;指纹&lt;/a&gt;（fingerprint）。相同数据的摘要一定是一样的，不同数据的摘要有可能一样，但是通常不一样。正因如此，散列算法是不可逆的，也就是说不能从数据摘要倒推出数据来。但是它可以用来校验数据是否被更改。如果数据有变化，那么摘要通常都是不一样的，概率取决于散列的长度，越长越不容易相同。配合上文所说的非对称加密，如果我用自己的私钥加密了某个摘要，那它就只有用我的公钥才能解密。这就说明了这个摘要一定是我发出的，因为别人不可能有我的私钥。进而推导出摘要所代表的消息也是由我发出的。这个加了密的摘要称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Digital_signature&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数字签名&lt;/a&gt;（Digital signature）。它保证数据的完整性，确定数据的发出者，是具有法律效力的。&lt;/p&gt;
&lt;p&gt;原来常用的散列算法有&lt;a href=&quot;https://en.wikipedia.org/wiki/MD5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MD5&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SHA1&lt;/a&gt;，2004年后，山东大学的王小云教授通过碰撞法分别攻破了这两种算法。也就是说，在已知摘要的情况下，可以很快计算出另一个拥有相同摘要的文本，这样就实现了文本篡改。行话叫散列碰撞（Hash Collision）。所以&lt;a href=&quot;https://en.wikipedia.org/wiki/National_Security_Agency&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSA&lt;/a&gt;推出了&lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SHA2&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SHA3&lt;/a&gt;成为了新的标准。虽然MD5和SHA1被破解，也不用特别在意。因为虽然能找到相同摘要的数据，但是篡改者并不能随心所欲地把数据修改成自己想要的样子。&lt;/p&gt;
&lt;h2 id=&quot;u534F_u8BAE&quot;&gt;&lt;a href=&quot;#u534F_u8BAE&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h2&gt;&lt;h3 id=&quot;SSL/TLS&quot;&gt;&lt;a href=&quot;#SSL/TLS&quot; class=&quot;headerlink&quot; title=&quot;SSL/TLS&quot;&gt;&lt;/a&gt;SSL/TLS&lt;/h3&gt;&lt;p&gt;有了加密算法，是不是传输就安全了呢？确实如果严格去用的话，是安全了，但是也麻烦了很多。每次都要跟对方沟通用什么算法，传送密钥，传送摘要…累不累？所以需要有一套协议，大家都遵守这样的协议，就能少掉很多我们不需要太关注的、技术上的事情。这个协议叫做&lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Secure_Sockets_Layer&amp;amp;redirect=no&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSL&lt;/a&gt;（Secure Sockets Layer）。它所做的事情，主要就是上面说的交换公钥，用对方的公钥加密数据，用自己的私钥解密，还支持MD5用于验证数据的完整性。SSL是网景公司发明的，由于应用广泛，成为了事实上的标准。&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Engineering_Task_Force&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IETF&lt;/a&gt;（Internet Engineering Task Force）在1999年把SSL 3.0标准化，称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TLS&lt;/a&gt;（Transport Layer Security）。除了标准化以外，相对SSL来说TLS也更加安全一些。&lt;/p&gt;
&lt;h3 id=&quot;HTTP/HTTPS&quot;&gt;&lt;a href=&quot;#HTTP/HTTPS&quot; class=&quot;headerlink&quot; title=&quot;HTTP/HTTPS&quot;&gt;&lt;/a&gt;HTTP/HTTPS&lt;/h3&gt;&lt;p&gt;因特网发明后，大部分的网站都是用的&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP&lt;/a&gt;协议。这个协议关心的是如何方便地获取到自己需要的资源，并不关心安全性。如果你的网络被监视（比如你的wifi提供者，运营商等等），对方是可以明文看到你的所有信息的，行话叫嗅探（sniffer）。在HTTP上应用SSL/TLS的协议叫做&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTPS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTPS&lt;/a&gt;（HTTP over SSL/TLS）。有了它，我们就还可以像以前的HTTP那样方便地在网上冲浪，而不用太担心安全问题，但不是完全不需要担心，一会儿我们会说到。&lt;/p&gt;
&lt;p&gt;顺便说一句，SSL/TLS并不是只能用于HTTP，还可以用于&lt;a href=&quot;https://en.wikipedia.org/wiki/File_Transfer_Protocol&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FTP&lt;/a&gt;（File Transfer Protocol）、&lt;a href=&quot;https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SMTP&lt;/a&gt;（Simple Mail Transfer Protocol）等一系列应用层协议。&lt;/p&gt;
&lt;h2 id=&quot;CA_u53CA_u8BC1_u4E66&quot;&gt;&lt;a href=&quot;#CA_u53CA_u8BC1_u4E66&quot; class=&quot;headerlink&quot; title=&quot;CA及证书&quot;&gt;&lt;/a&gt;CA及证书&lt;/h2&gt;&lt;h3 id=&quot;u6570_u5B57_u8BC1_u4E66&quot;&gt;&lt;a href=&quot;#u6570_u5B57_u8BC1_u4E66&quot; class=&quot;headerlink&quot; title=&quot;数字证书&quot;&gt;&lt;/a&gt;数字证书&lt;/h3&gt;&lt;p&gt;前面说到了HTTPS，为什么有了这么安全的技术我们还是不能高枕无忧呢？这是因为：虽然它能保证我们的信息不被第三方破解，但是它绕不开一个很现实的绕口问题：你怎么知道他就是他声称的那个他？举个栗子：你以为正在访问的网站是某个银行，但是却不知道其实你被钓鱼（phishing）了。对方正等着你输入你的银行卡号和密码，好用它们去真正的银行网站给自己转账。这一切发生得这么自然，你的信息只有钓鱼网站能解密看到，钓鱼网站的信息也只有你能解密看到…就算是你注意到了对方的域名，也有可能因为0和O、1和l傻傻分不清楚或者&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_hijacking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;域名劫持&lt;/a&gt;（domain hijacking）而上当。数字证书就是用来阻止这事儿发生的。虽然我不认识你，但是如果我认识一个很知名的家伙，他肯为你做担保，那我也可以相信你。这个知名的家伙就叫&lt;a href=&quot;https://en.wikipedia.org/wiki/Certificate_authority&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CA&lt;/a&gt;（Certificate Authority）。它为通信的双方起了一个中间人的作用。CA的担保就叫&lt;a href=&quot;https://en.wikipedia.org/wiki/Public_key_certificate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数字证书&lt;/a&gt;（Digital Certificate或Public Key Certificate）。这个证书是什么格式，有什么内容呢？这是由&lt;a href=&quot;https://en.wikipedia.org/wiki/Public_key_infrastructure&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKI&lt;/a&gt;（Public Key Infrastructure）标准决定的。常用的标准有&lt;a href=&quot;https://en.wikipedia.org/wiki/X.509&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;X.509&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/PKCS_12&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PKCS #12&lt;/a&gt;。它们定义了证书里应该含有签发机构名、证书用户名、有效期、算法、公钥等信息。&lt;/p&gt;
&lt;h3 id=&quot;u4FE1_u4EFB_u94FE&quot;&gt;&lt;a href=&quot;#u4FE1_u4EFB_u94FE&quot; class=&quot;headerlink&quot; title=&quot;信任链&quot;&gt;&lt;/a&gt;信任链&lt;/h3&gt;&lt;p&gt;回到刚才的问题：你怎么知道他就是他声称的那个他？我无条件地信任CA，网站又有了CA的数字证书，我就能信任他就是证书里声称的那个他。如果我因为对CA的信任而有了损失，则证书可以用来追究CA的法律责任。如果我们信任A，A信任B，B信任C，那么我们也会信任B和C，这个叫做&lt;a href=&quot;https://en.wikipedia.org/wiki/Chain_of_trust&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;证书信任链&lt;/a&gt;（Chain of trust）。中间的B称为&lt;a href=&quot;https://hk.godaddy.com/en/help/what-is-an-intermediate-certificate-868&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中级证书&lt;/a&gt;（Intermediate certificate），位于信任链顶端的A称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Root_certificate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;根证书&lt;/a&gt;（Root certificate）。如果根证书出了问题，那么它所信任的其它证书也就不再可信了。这个后果可是非常严重，可能会影响整个因特网的信任体系。所以，需要尽可能地少动用根证书以减少根证书的私钥被盗用的风险。如果网站想要被认证，直接用中级证书认证就好了。万一中级证书出问题，吊销掉中级证书也只会影响一部分客户，比整个根证书被吊销掉强。但事情也不绝对。对CA来说，公信力就是一切。说个案例：&lt;a href=&quot;https://en.wikipedia.org/wiki/China_Internet_Network_Information_Center&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中国互联网络信息中心&lt;/a&gt;（China Internet Network Information Center，CNNIC）是中国的顶级域名&lt;code&gt;.cn&lt;/code&gt;和中文域名的注册管理机构。MCS集团用CNNIC签发的中级证书，发行了多个冒充成Google的假证书。于是在2015年4月份，chrome、firefox都宣布不再信任CNNIC的证书。如果你用chrome来打开&lt;a href=&quot;https://www.cnnic.net.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.cnnic.net.cn/&lt;/a&gt;，应该会看到：&lt;br&gt;&lt;img src=&quot;/img/https_untrust.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而不是：&lt;br&gt;&lt;img src=&quot;/img/https_trust.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一般来说操作系统和浏览器都会内置一些信任的CA，比较著名的有公信力的CA有Verisign，GeoTrust等。我们打开google的时候，也能点击小锁看到它的证书：&lt;br&gt;&lt;img src=&quot;/img/google-ca.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;再点击证书信息就能看到它的证书链。最上面的是GeoTrust的根证书，它包含的内容都在里面写着了，感兴趣的话就自己看看吧：&lt;br&gt;&lt;img src=&quot;/img/ca1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;中间的是谷歌自己的中级证书：&lt;br&gt;&lt;img src=&quot;/img/ca2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后是站点自己的证书，这个有效期一般比较短：&lt;br&gt;&lt;img src=&quot;/img/ca3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;证书是可以自签名的，也就是说，你自己作为CA来发行这个证书。当然，这个证书也只有你自己会信任，广大的网友同志们的眼睛是雪亮的，不会无缘无故地信任你的。那如果我是大企业，是不是就值得信任了？谷歌、微软等通常都是可以信任的。12306，你信任它吗？每个人都会有自己的答案吧。打开&lt;a href=&quot;https://www.12306.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;12306&lt;/a&gt;看看它的根证书，SRCA（SinoRail Certification Authority）是个什么鬼？这个是中国铁路自己啊。知道为什么首页上总有一个“为保障您顺畅购票，请下载安装根证书”的提示了吧。&lt;/p&gt;
&lt;h3 id=&quot;u7533_u8BF7_u8BC1_u4E66&quot;&gt;&lt;a href=&quot;#u7533_u8BF7_u8BC1_u4E66&quot; class=&quot;headerlink&quot; title=&quot;申请证书&quot;&gt;&lt;/a&gt;申请证书&lt;/h3&gt;&lt;p&gt;首先，如果你觉得自己的网站没有什么信息不能公开的，那就没必要费那钱和时间去购买证书。&lt;/p&gt;
&lt;p&gt;证书有很多种类型，价格也很不一样，大约一年数千到数万元人民币吧。简单列出几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通配符证书（Wildcard SSL Certificates）：自己的域名和下一级子域名可以使用。比如&lt;code&gt;google.com&lt;/code&gt;和&lt;code&gt;maps.google.com&lt;/code&gt;就是域名和二级子域名的关系&lt;/li&gt;
&lt;li&gt;多域名证书（Subject Alternative Name SSL Certificates）：不仅限于子域名，不同域名也能使用&lt;/li&gt;
&lt;li&gt;增强型证书（Extended Validation SSL Certificate）：总之就是验证流程更麻烦，结果就是可以在地址栏显示公司的名称，增加可信度。就像这样：&lt;br&gt;&lt;img src=&quot;/img/github-ca.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;申请证书需要给CA提供一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Certificate_signing_request&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSR&lt;/a&gt;（certificate sigining request）文件。通常做法就是通过程序把域名、联系人和公钥等信息都放在这个文件里，发送给某个CA。交费之后，如果CA方面没有问题，就会对CSR文件设置有效期等操作，当然还需要用自己的私钥对证书签名，再发送给用户。最后用户把证书绑定到自己的网站上。&lt;/p&gt;
&lt;h2 id=&quot;u52A8_u624B_u65F6_u95F4&quot;&gt;&lt;a href=&quot;#u52A8_u624B_u65F6_u95F4&quot; class=&quot;headerlink&quot; title=&quot;动手时间&quot;&gt;&lt;/a&gt;动手时间&lt;/h2&gt;&lt;h3 id=&quot;u52A0_u89E3_u5BC6&quot;&gt;&lt;a href=&quot;#u52A0_u89E3_u5BC6&quot; class=&quot;headerlink&quot; title=&quot;加解密&quot;&gt;&lt;/a&gt;加解密&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/OpenSSL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenSSL&lt;/a&gt;是SSL/TLS的开源实现，我们就用它来练练手吧。首先，用DES加解密文本：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | openssl enc &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; -des &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;## 需要输入两次密码，如果你输入的都是1，那么可以用下一条命令解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; U2FsdGVkX19NMXhTRoTNJE0YV+TKcRL0+xzT9UMUN5Y= | openssl enc &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; -des &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中的&lt;code&gt;-a&lt;/code&gt;代表base64编码。还可以多试几次加密，就算文本、密码相同，每次加密的结果也很可能是不一样的。把上面的&lt;code&gt;-des&lt;/code&gt;变成&lt;code&gt;-des3&lt;/code&gt;或者是&lt;code&gt;-aes-256-cbc&lt;/code&gt;就可以自行尝试DES3和AES加解密了。接下来尝试RSA。首先生成RSA的私钥：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out private.pem &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat private.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;PEM表示这是base64编码的密钥，也可以改成DER即二进制的密钥，加上一个&lt;code&gt;-outform DER&lt;/code&gt;的参数就行。然后通过私钥生成公钥：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl rsa -in private.pem -pubout -out public.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat public.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来用刚刚生成的公钥加密，私钥解密：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | openssl rsautl -encrypt -pubin -inkey public.pem -out encrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat encrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat encrypt | openssl rsautl -decrypt -inkey private.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后私钥加密，公钥解密。注意这个的意义其实是私钥签名，公钥认证：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | openssl rsautl -sign -inkey private.pem -out encrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat encrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat encrypt | openssl rsautl -verify -pubin -inkey public.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;u6563_u5217&quot;&gt;&lt;a href=&quot;#u6563_u5217&quot; class=&quot;headerlink&quot; title=&quot;散列&quot;&gt;&lt;/a&gt;散列&lt;/h3&gt;&lt;p&gt;现在轮到散列算法了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | openssl dgst -md5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | openssl dgst -sha1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以用linux自带的小工具实现：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | md5sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | sha1sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | sha224sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | sha256sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | sha384sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello World! | sha512sum&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是不是越来越长了？散列越长越不容易被碰撞。&lt;/p&gt;
&lt;h3 id=&quot;u8BC1_u4E66&quot;&gt;&lt;a href=&quot;#u8BC1_u4E66&quot; class=&quot;headerlink&quot; title=&quot;证书&quot;&gt;&lt;/a&gt;证书&lt;/h3&gt;&lt;p&gt;申请证书，首先需要生成CSR文件。而CSR文件需要先生成私钥：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out private.pem &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl req -new -key private.pem -out domain.csr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat domain.csr&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;生成私钥文件是可以加密的，加上一个参数比如&lt;code&gt;-des3&lt;/code&gt;就可以了。生成CSR文件的时候需要填写各种信息，没耐心就随便写点什么甚至一路回车也行，反正又不是真的去找CA。如果你真的有需求，&lt;a href=&quot;https://support.rackspace.com/how-to/generate-a-csr-with-openssl/#create-a-csr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里有一张表格&lt;/a&gt;说明了应该怎么填。填完的东西可以这么看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl req -noout -text -in domain.csr&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在我们假装自己是个CA，有自己的密钥对，然后对刚才提交的CSR文件签名：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl genrsa -out private_ca.pem &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;openssl x509 -req -days &lt;span class=&quot;number&quot;&gt;365&lt;/span&gt; -in domain.csr -signkey private_ca.pem -out my_domain.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat my_domain.crt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大功告成！生成的my_domain.crt就是我们要的证书。由于这个是自签名证书，默认是不被我们的操作系统信任的。如果我们需要增加信任，可以参考&lt;a href=&quot;https://briansnelson.com/How_to_add_trusted_root_certificates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。比如在Ubuntu/Debian里可以这么做：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cp my_domain.crt /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/ca-certificates/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-ca-certificates&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果要取消信任，可以这么做：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo rm /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/ca-certificates/my_domain.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-ca-certificates --fresh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53C2_u8003_u8D44_u6599&quot;&gt;&lt;a href=&quot;#u53C2_u8003_u8D44_u6599&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://computer.howstuffworks.com/encryption.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How Encryption Works&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://victor1980.blog.51cto.com/3664622/1659447&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;有关SSL证书的一些事儿&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://seanlook.com/2015/01/07/tls-ssl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSL/TLS原理详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://seanlook.com/2015/01/15/openssl-certificate-encryption/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://program-think.blogspot.com/2010/02/introduce-digital-certificate-and-ca.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数字证书及 CA 的扫盲介绍&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://program-think.blogspot.com/2014/11/https-ssl-tls-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;扫盲 HTTPS 和 SSL/TLS 协议&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数字签名是什么？&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://boxingp.github.io/blog/2015/04/04/should-cnnic-certificate-to-be-trusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CNNIC证书值得信任吗？&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;现在网络这么发达，许多人都在上面购物、理财、预约挂号…网络上传送的可都是自己的重要资料，比如身份证号，信用卡密码等。因特网如何才能保证这些敏感信息的安全？本文试着来探讨一下加密、证书等那些事儿。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="certficate" scheme="http://qinghua.github.io/tags/certficate/"/>
    
      <category term="encryption" scheme="http://qinghua.github.io/tags/encryption/"/>
    
      <category term="https" scheme="http://qinghua.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>用容器轻松搭建Portus运行环境</title>
    <link href="http://qinghua.github.io/portus/"/>
    <id>http://qinghua.github.io/portus/</id>
    <published>2016-03-13T11:02:31.000Z</published>
    <updated>2016-03-30T06:51:55.000Z</updated>
    
    <content type="html">&lt;p&gt;Docker官方并没有提供docker registry的用户界面，对权限的控制粒度也比较粗。SUSE的&lt;a href=&quot;http://port.us.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Portus&lt;/a&gt;很好地解决了这个问题。除了界面以外，它还提供了更细粒度的权限控制、用户认证等功能。本文尝试从零开始用容器搭建一个portus环境。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51C6_u5907_u5DE5_u4F5C&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u5DE5_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;我们需要先安装&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;virtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vagrant&lt;/a&gt;。通过vagrant来驱动virtualBox搭建一个虚拟测试环境。首先在本地任意路径新建一个空文件夹比如&lt;code&gt;test&lt;/code&gt;，运行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant init minimum/ubuntu-trusty64-docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vi Vagrantfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;里面应该有一句&lt;code&gt;config.vm.box = &amp;quot;minimum/ubuntu-trusty64-docker&amp;quot;&lt;/code&gt;，在它的下面添加如下几行代码，相当于给它分配一台IP是&lt;strong&gt;192.168.33.18&lt;/strong&gt;的虚拟机。Registry配上portus会比较耗内存，所以我们给它2G内存，默认是512M。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Vagrantfile&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config.vm.network &lt;span class=&quot;string&quot;&gt;&quot;private_network&quot;&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;ip:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;192.168.33.18&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.vm.provider &lt;span class=&quot;string&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |v|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v.memory = &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个vagrant镜像已经在ubuntu的基础上帮我们安装了docker，用起来很方便。然后在终端运行以下命令启动并连接虚拟机。&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;virtual box host&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vagrant up&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vagrant ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFA_u73AF_u5883&quot;&gt;&lt;a href=&quot;#u642D_u5EFA_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;我们将会把docker registry和portus都安装在同一台虚拟机上。一方面是比较方便，另一方面也避免了&lt;a href=&quot;https://github.com/SUSE/Portus/issues/510&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;时钟同步问题&lt;/a&gt;。为了启动一个带认证的docker registry，首先要生成自签名证书：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; ssl.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ req ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;prompt             = no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;distinguished_name = req_subj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x509_extensions    = x509_ext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ req_subj ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CN = Localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ x509_ext ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subjectKeyIdentifier   = &lt;span class=&quot;built_in&quot;&gt;hash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;authorityKeyIdentifier = keyid,issuer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;basicConstraints       = CA:&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subjectAltName         = @alternate_names&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ alternate_names ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IP.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  = &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir /certs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh -c &lt;span class=&quot;string&quot;&gt;&quot;openssl req -config ssl.conf \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-new -x509 -nodes -sha256 -days 365 -newkey rsa:4096 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-keyout /certs/server-key.pem -out /certs/server-crt.pem&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;证书生成好了，但是由于这是自签名证书，客户端还需要配置证书文件：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir -p /etc/docker/certs.d/&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp /certs/server-crt.pem /etc/docker/certs.d/&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/ca.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service docker restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来生成一个registry的配置文件，里面指定刚才的证书和token方式的认证。认证服务器设置到一会儿要启动的portus去：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;version: &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;loglevel: debug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        blobdescriptor: inmemory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filesystem:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rootdirectory: /var/lib/registry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        enabled: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addr: :&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        X-Content-Type-Options: [nosniff]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        certificate: /certs/server-crt.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key: /certs/server-key.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auth:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    token:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        realm: https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;/v2/token&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        service: &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        issuer: &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rootcertbundle: /certs/server-crt.pem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;notifications:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    endpoints:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - name: portus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: https://&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;/v2/webhooks/events&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        threshold: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backoff: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就可以启动registry容器了：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --name registry \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -p &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /var/lib/registry:/var/lib/registry \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /certs:/certs \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v `&lt;span class=&quot;built_in&quot;&gt;pwd&lt;/span&gt;`/config.yml:/etc/docker/registry/config.yml \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registry:&lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Docker registry配置完成后，就该准备portus了。Portus需要一个数据库来存储信息，官方推荐&lt;a href=&quot;https://mariadb.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MariaDB&lt;/a&gt;，当然mysql也是没问题的。我们把数据库启动起来：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --name mariadb \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --net=host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; MYSQL_ROOT_PASSWORD=&lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; TERM=xterm \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mariadb:&lt;span class=&quot;number&quot;&gt;10.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等数据库启动完成，我们连接上去：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it mariadb mysql -uroot -p123456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为portus创建用户和数据库：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;sql&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;create database portus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GRANT ALL ON portus.* TO &lt;span class=&quot;string&quot;&gt;&#39;portus&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;string&quot;&gt;&#39;portus&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;万事俱备，让我们来启动portus：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -it &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --name portus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --net host \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --restart=always \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /certs:/certs \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /usr/sbin/update-ca-certificates:/usr/sbin/update-ca-certificates \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -v /etc/ca-certificates:/etc/ca-certificates \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_ADAPTER=mysql2 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_ENCODING=utf8 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_HOST=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_PORT=&lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_USERNAME=portus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_PASSWORD=portus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env DB_DATABASE=portus \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env RACK_ENV=production \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env RAILS_ENV=production \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env PUMA_SSL_KEY=/certs/server-key.pem \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env PUMA_SSL_CRT=/certs/server-crt.pem \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env PUMA_PORT=&lt;span class=&quot;number&quot;&gt;443&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env PUMA_WORKERS=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env MACHINE_FQDN=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env SECRETS_SECRET_KEY_BASE=secret-goes-here \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env SECRETS_ENCRYPTION_PRIVATE_KEY_PATH=/certs/server-key.pem \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --env SECRETS_PORTUS_PASSWORD=portuspw \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    h0tbird/portus:v2.&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动完成后，在浏览器打开&lt;code&gt;https://192.168.33.18/&lt;/code&gt;，应该会看到证书不被浏览器所信任的提示。无视之，选择继续的话，应该就能看到注册页面啦：&lt;br&gt;&lt;img src=&quot;/img/portus-sign-up.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6743_u9650_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u6743_u9650_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;权限管理&quot;&gt;&lt;/a&gt;权限管理&lt;/h2&gt;&lt;p&gt;Portus现在只能管理一个私有库。它有一个团队的概念，每一个团队可以有多个命名空间，每个命名空间就是多个镜像的集合。每个团队有三种角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看者（Viewer）：只能pull镜像&lt;/li&gt;
&lt;li&gt;贡献者（Contributor）：除了pull，还可以push镜像&lt;/li&gt;
&lt;li&gt;所有者（Owner）：除了推拉镜像，还可以对团队成员进行管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于角色是定义在团队里的，所以命名空间就不需要再考虑权限问题了，它只是镜像的集合而已。命名空间也有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局（Global）：只有管理员可以push，其他人只能pull&lt;/li&gt;
&lt;li&gt;团队（Team）：团队成员可以做自己角色支持的操作&lt;/li&gt;
&lt;li&gt;个人（Personal）：只有所有者和管理员可以推拉&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命名空间还可以设置为public，这样不需要login也能pull。&lt;/p&gt;
&lt;p&gt;说完一些基本概念，让我们来尝试一下。首先，portus需要配置一个用户，来调用docker registry的API，与其进行同步。&lt;a href=&quot;http://port.us.org/docs/How-to-setup-secure-registry.html#synchronizing-the-registry-and-portus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;同步&lt;/a&gt;有&lt;a href=&quot;http://port.us.org/features/1_Synchronizing-the-Registry-and-Portus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;两种方式&lt;/a&gt;：一是在docker registry的配置文件里写的&lt;code&gt;notifications&lt;/code&gt;，这样每当有人push一个新镜像上去，docker registry将会通知portus修改数据库。可是时间长了，有可能数据库偶尔挂掉或是网络不稳定啥的导致两边数据不一致。Portus针对这种情况也提供了一个crono的job，设置定时运行即可，一会儿我们会试验。现在先让我们来创建这个用户：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;registry&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; portus bundle &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; rake portus:create_api_account&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来就可以在注册页面自行注册啦，注册完毕后会跳转到登记registry页面：&lt;br&gt;&lt;img src=&quot;/img/portus-new-registry.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;照上图填入registry，点击&lt;strong&gt;Create&lt;/strong&gt;按钮创建一个docker registry。接着创建一个新用户。点击左边的&lt;strong&gt;Admin&lt;/strong&gt;，再点击中间的&lt;strong&gt;Users&lt;/strong&gt;，然后点击右边的&lt;strong&gt;Create new user&lt;/strong&gt;，填写用户信息：&lt;br&gt;&lt;img src=&quot;/img/portus-new-user.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Add&lt;/strong&gt;按钮就可以创建一个新用户了。接下来创建一个团队。点击左边的&lt;strong&gt;Teams&lt;/strong&gt;，再点击右边的&lt;strong&gt;Create new team&lt;/strong&gt;，填写团队信息：&lt;br&gt;&lt;img src=&quot;/img/portus-new-team.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Add&lt;/strong&gt;按钮就可以创建一个新团队了。点击刚刚创建好的团队，再点击右边的&lt;strong&gt;Add namespace&lt;/strong&gt;，填写命名空间信息：&lt;br&gt;&lt;img src=&quot;/img/portus-new-namespace.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Add&lt;/strong&gt;按钮就可以创建一个新命名空间了。接下来把用户添加到这个团队中。点击右边的&lt;strong&gt;Add members&lt;/strong&gt;，填写刚才增加的用户信息：&lt;br&gt;&lt;img src=&quot;/img/portus-new-member.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Add&lt;/strong&gt;按钮就可以把用户加进来了。回到控制台，搞一个镜像，push一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull microbox/etcd:&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker tag microbox/etcd:&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/microbox/etcd:&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker push &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/microbox/etcd:&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出错了：&lt;strong&gt;unauthorized: authentication required&lt;/strong&gt;，我们必须用docker先登录：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker login -u gggg &lt;span class=&quot;operator&quot;&gt;-e&lt;/span&gt; gggg@&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;.com &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;填上自己刚才设置的密码，登录成功之后，再试着push一下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker push &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/microbox/etcd:&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Bingo！换一个命名空间试试看：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker tag h0tbird/portus:v2.&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/h0tbird/portus:v2.&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker push &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/h0tbird/portus:v2.&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出错了：&lt;strong&gt;unauthorized: authentication required&lt;/strong&gt;，可见我们的权限控制确实起作用了。&lt;/p&gt;
&lt;h2 id=&quot;u955C_u50CF_u540C_u6B65&quot;&gt;&lt;a href=&quot;#u955C_u50CF_u540C_u6B65&quot; class=&quot;headerlink&quot; title=&quot;镜像同步&quot;&gt;&lt;/a&gt;镜像同步&lt;/h2&gt;&lt;p&gt;接下来我们试试定时同步任务。首先需要在容器里信任我们的自签名证书：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; portus mkdir /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/ca-certificates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker cp /certs/server-crt.pem portus:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/ca-certificates/ca.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; portus update-ca-certificates&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后启动定时同步任务，设置为每10秒钟同步一次：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -it portus bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAILS_ENV=production CATALOG_CRON=&lt;span class=&quot;string&quot;&gt;&quot;10.seconds&quot;&lt;/span&gt; bundle &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; crono&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等十秒钟，就会看到&lt;strong&gt;[catalog] Created the tag ‘2.1.1’&lt;/strong&gt;的提示。如果先前没有信任自签名证书，同步的时候会报&lt;strong&gt;certificate verify failed&lt;/strong&gt;的错误。现在回到portus的界面，点击左边的&lt;strong&gt;Dashboard&lt;/strong&gt;，就能看到刚才push的microbox/etcd镜像已经显示在右边了：&lt;br&gt;&lt;img src=&quot;/img/portus-dashboard.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后一步就是自动同步了，先把刚才的crono给Ctrl+C掉，Ctrl+D退出portus容器。由于docker registry需要调用portus的API，所以我们需要在registry容器里也信任这个证书：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker cp /certs/server-crt.pem registry:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/ca-certificates/ca.crt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; registry update-ca-certificates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo service docker restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后再push一个镜像：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker tag registry:&lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/microbox/registry:&lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker push &lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;33.18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;/microbox/registry:&lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到portus的dashboard刷新一下，搞定！在中间的&lt;strong&gt;Recent activities&lt;/strong&gt;还能看到是谁push的这个镜像，对审计、追踪来说很有帮助。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Docker官方并没有提供docker registry的用户界面，对权限的控制粒度也比较粗。SUSE的&lt;a href=&quot;http://port.us.org/&quot;&gt;Portus&lt;/a&gt;很好地解决了这个问题。除了界面以外，它还提供了更细粒度的权限控制、用户认证等功能。本文尝试从零开始用容器搭建一个portus环境。&lt;br&gt;
    
    </summary>
    
      <category term="devops" scheme="http://qinghua.github.io/categories/devops/"/>
    
    
      <category term="docker registry" scheme="http://qinghua.github.io/tags/docker-registry/"/>
    
      <category term="portus" scheme="http://qinghua.github.io/tags/portus/"/>
    
  </entry>
  
</feed>
